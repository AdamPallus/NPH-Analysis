cz<-compareVAFvelocity(verg.model)
compareVAFvelocity<- function(z){
x<- mutate(x,sdf20=lag(sdf,20))
x<- mutate(x,saccadic=markSaccades(conj.velocity,buffer=15,threshold=20)>0)
# modfast=lm(sdf20~verg.angle+verg.velocity,data=filter(x,saccadic))
# modslow=lm(sdf20~verg.angle+verg.velocity,data=filter(x,!saccadic))
mod=lm(verg.velocity~sdf20+verg.angle,data=filter(x,saccadic))
result<- data.frame(fast=VAF(mod,filter(x,saccadic),'verg.velocity'),
slow=VAF(mod,filter(x,!saccadic),'verg.velocity'),
all=VAF(mod,x,'verg.velocity'))
result
}
cz<-compareVAFvelocity(z)
names(z)
compareVAFvelocity<- function(x){
x<- mutate(x,sdf20=lag(sdf,20))
x<- mutate(x,saccadic=markSaccades(conj.velocity,buffer=15,threshold=20)>0)
# modfast=lm(sdf20~verg.angle+verg.velocity,data=filter(x,saccadic))
# modslow=lm(sdf20~verg.angle+verg.velocity,data=filter(x,!saccadic))
mod=lm(verg.velocity~sdf20+verg.angle,data=filter(x,saccadic))
result<- data.frame(fast=VAF(mod,filter(x,saccadic),'verg.velocity'),
slow=VAF(mod,filter(x,!saccadic),'verg.velocity'),
all=VAF(mod,x,'verg.velocity'))
result
}
names(z)
cz<-compareVAFvelocity(z)
cz
compareVAFvelocity<- function(x){
x<- mutate(x,sdf20=lag(sdf,20))
x<- mutate(x,saccadic=markSaccades(conj.velocity,buffer=15,threshold=20)>0)
# modfast=lm(sdf20~verg.angle+verg.velocity,data=filter(x,saccadic))
# modslow=lm(sdf20~verg.angle+verg.velocity,data=filter(x,!saccadic))
mod=lm(verg.velocity~sdf20+verg.angle,data=filter(x,!saccadic))
result<- data.frame(fast=VAF(mod,filter(x,saccadic),'verg.velocity'),
slow=VAF(mod,filter(x,!saccadic),'verg.velocity'),
all=VAF(mod,x,'verg.velocity'))
result
}
cz<-compareVAFvelocity(z)
cz
compareVAFvelocity<- function(x){
x<- mutate(x,sdf20=lag(sdf,20))
x<- mutate(x,saccadic=markSaccades(conj.velocity,buffer=4,threshold=20)>0)
# modfast=lm(sdf20~verg.angle+verg.velocity,data=filter(x,saccadic))
# modslow=lm(sdf20~verg.angle+verg.velocity,data=filter(x,!saccadic))
mod=lm(verg.velocity~sdf20+verg.angle,data=filter(x,!saccadic))
result<- data.frame(fast=VAF(mod,filter(x,saccadic),'verg.velocity'),
slow=VAF(mod,filter(x,!saccadic),'verg.velocity'),
all=VAF(mod,x,'verg.velocity'))
result
}
cz<-compareVAFvelocity(z)
cz
compareVAFvelocity<- function(x){
x<- mutate(x,sdf20=lag(sdf,20))
x<- mutate(x,saccadic=markSaccades(conj.velocity,buffer=4,threshold=30)>0)
# modfast=lm(sdf20~verg.angle+verg.velocity,data=filter(x,saccadic))
# modslow=lm(sdf20~verg.angle+verg.velocity,data=filter(x,!saccadic))
mod=lm(verg.velocity~sdf20+verg.angle,data=filter(x,!saccadic))
result<- data.frame(fast=VAF(mod,filter(x,saccadic),'verg.velocity'),
slow=VAF(mod,filter(x,!saccadic),'verg.velocity'),
all=VAF(mod,x,'verg.velocity'))
result
}
cz<-compareVAFvelocity(z)
cz
zpm<-lm(peak.verg.velocity~predicted.peak.verg.velocity,data=zp)
summary(zpm)
t %>%
# filter(monkey =='Bee') %>%
filter(neuron=='Bee-211') %>%
group_by(neuron) %>%
mutate(sdf20=lag(sdf,20),
verg.velocity=lev-rev,
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2)) %>%
mutate(saccadic=markSaccades(conj.velocity,
buffer=4,
threshold=20)>0) %>%
do(m=lm('verg.velocity~sdf20+verg.angle',data=filter(.,saccadic)))->
tms
verg.model.saccadic=tm$m[[1]]
summary(verg.model.saccadic)
verg.model.saccadic=tms$m[[1]]
summary(verg.model.saccadic)
z<- filter(t,neuron=='Bee-211')
z %>%
mutate(sdf20=lag(sdf,20),
time=row_number(),
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2)) %>%
mutate(predV=predict(verg.model,newdata=.))->
z
bufferlength<-200
z %>%
do(joinsaccades(.,buffer=bufferlength,threshold=20)) %>%
group_by(sacnum) %>%
mutate(saccade.dur=n()-2*bufferlength,
saccade.end=saccade.dur+bufferlength,
peak.conj.velocity=maxabs(conj.velocity),
peak.R.H= maxabs(rev),
peak.R.V= maxabs(revV),
peak.L.H= maxabs(lev),
peak.L.V= maxabs(levV),
R.H.Amp=rep[saccade.end]-rep[bufferlength],
L.H.Amp=lep[saccade.end]-lep[bufferlength],
R.V.Amp=repV[saccade.end]-repV[bufferlength],
L.V.Amp=lepV[saccade.end]-lepV[bufferlength],
verg.amp=verg.angle[saccade.end]-verg.angle[bufferlength],
conj.H.Amp=(R.H.Amp+L.H.Amp)/2,
conj.V.Amp=(R.V.Amp+L.V.Amp)/2,
r.angle=atan2(R.V.Amp,R.H.Amp)*180/pi,
r.amp=sqrt(R.H.Amp^2+R.V.Amp^2),
vect.amp= (sqrt(R.H.Amp^2+R.V.Amp^2)+sqrt(L.H.Amp^2+L.V.Amp^2))/2,
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)),
saccadic.verg.amp=verg.angle[saccade.end]-verg.angle[bufferlength],
total.verg.amp=sum(verg.velocity)/1000,
mean.verg.amp=mean(verg.angle[saccade.end:n()]-mean(verg.angle[1:bufferlength])),
peak.verg.velocity= maxabs(verg.velocity),
min.verg.trans = min(verg.velocity),
max.verg.trans = max(verg.velocity),
off.verg.velocity=min(abs(min.verg.trans),abs(max.verg.trans)),
min.verg.angle=min(verg.angle),
max.verg.angle=max(verg.angle),
max.verg.velocity=max(verg.velocity),
min.verg.velocity=min(verg.velocity),
initial.verg.angle=verg.angle[bufferlength],
predicted.verg.amp=sum(predV)/1000,
predicted.peak.verg.velocity=maxabs(predV))->
zzsaccadic
zzsaccadic %>%
group_by(neuron,sacnum) %>%
summarize_each(funs(first))->
zpsaccadic
ggplot(filter(zpsaccadic,total.verg.amp>0,total.verg.amp<10,peak.verg.velocity>0))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))
ggplot(filter(zpsaccadic,total.verg.amp>0,total.verg.amp<10,peak.verg.velocity>0))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))
z<- filter(t,neuron=='Bee-211')
z %>%
mutate(sdf20=lag(sdf,20),
time=row_number(),
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2)) %>%
mutate(predV=predict(verg.model,newdata=.),
predVsaccadic=predict(verg.model.saccadic,newdata=.))->
z
bufferlength<-200
z %>%
do(joinsaccades(.,buffer=bufferlength,threshold=20)) %>%
group_by(sacnum) %>%
mutate(saccade.dur=n()-2*bufferlength,
saccade.end=saccade.dur+bufferlength,
peak.conj.velocity=maxabs(conj.velocity),
peak.R.H= maxabs(rev),
peak.R.V= maxabs(revV),
peak.L.H= maxabs(lev),
peak.L.V= maxabs(levV),
R.H.Amp=rep[saccade.end]-rep[bufferlength],
L.H.Amp=lep[saccade.end]-lep[bufferlength],
R.V.Amp=repV[saccade.end]-repV[bufferlength],
L.V.Amp=lepV[saccade.end]-lepV[bufferlength],
verg.amp=verg.angle[saccade.end]-verg.angle[bufferlength],
conj.H.Amp=(R.H.Amp+L.H.Amp)/2,
conj.V.Amp=(R.V.Amp+L.V.Amp)/2,
r.angle=atan2(R.V.Amp,R.H.Amp)*180/pi,
r.amp=sqrt(R.H.Amp^2+R.V.Amp^2),
vect.amp= (sqrt(R.H.Amp^2+R.V.Amp^2)+sqrt(L.H.Amp^2+L.V.Amp^2))/2,
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)),
saccadic.verg.amp=verg.angle[saccade.end]-verg.angle[bufferlength],
total.verg.amp=sum(verg.velocity)/1000,
mean.verg.amp=mean(verg.angle[saccade.end:n()]-mean(verg.angle[1:bufferlength])),
peak.verg.velocity= maxabs(verg.velocity),
min.verg.trans = min(verg.velocity),
max.verg.trans = max(verg.velocity),
off.verg.velocity=min(abs(min.verg.trans),abs(max.verg.trans)),
min.verg.angle=min(verg.angle),
max.verg.angle=max(verg.angle),
max.verg.velocity=max(verg.velocity),
min.verg.velocity=min(verg.velocity),
initial.verg.angle=verg.angle[bufferlength],
predicted.verg.amp=sum(predV)/1000,
predicted.peak.verg.velocity=maxabs(predV))->
zzsaccadic
zzsaccadic %>%
group_by(neuron,sacnum) %>%
summarize_each(funs(first))->
zpsaccadic
ggplot(filter(zpsaccadic,total.verg.amp>0,total.verg.amp<10,peak.verg.velocity>0))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))
z %>%
do(joinsaccades(.,buffer=bufferlength,threshold=20)) %>%
group_by(sacnum) %>%
mutate(saccade.dur=n()-2*bufferlength,
saccade.end=saccade.dur+bufferlength,
peak.conj.velocity=maxabs(conj.velocity),
peak.R.H= maxabs(rev),
peak.R.V= maxabs(revV),
peak.L.H= maxabs(lev),
peak.L.V= maxabs(levV),
R.H.Amp=rep[saccade.end]-rep[bufferlength],
L.H.Amp=lep[saccade.end]-lep[bufferlength],
R.V.Amp=repV[saccade.end]-repV[bufferlength],
L.V.Amp=lepV[saccade.end]-lepV[bufferlength],
verg.amp=verg.angle[saccade.end]-verg.angle[bufferlength],
conj.H.Amp=(R.H.Amp+L.H.Amp)/2,
conj.V.Amp=(R.V.Amp+L.V.Amp)/2,
r.angle=atan2(R.V.Amp,R.H.Amp)*180/pi,
r.amp=sqrt(R.H.Amp^2+R.V.Amp^2),
vect.amp= (sqrt(R.H.Amp^2+R.V.Amp^2)+sqrt(L.H.Amp^2+L.V.Amp^2))/2,
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)),
saccadic.verg.amp=verg.angle[saccade.end]-verg.angle[bufferlength],
total.verg.amp=sum(verg.velocity)/1000,
mean.verg.amp=mean(verg.angle[saccade.end:n()]-mean(verg.angle[1:bufferlength])),
peak.verg.velocity= maxabs(verg.velocity),
min.verg.trans = min(verg.velocity),
max.verg.trans = max(verg.velocity),
off.verg.velocity=min(abs(min.verg.trans),abs(max.verg.trans)),
min.verg.angle=min(verg.angle),
max.verg.angle=max(verg.angle),
max.verg.velocity=max(verg.velocity),
min.verg.velocity=min(verg.velocity),
initial.verg.angle=verg.angle[bufferlength],
predicted.verg.amp=sum(predVsaccadic)/1000,
predicted.peak.verg.velocity=maxabs(predVsaccadic))->
zzsaccadic
zzsaccadic %>%
group_by(neuron,sacnum) %>%
summarize_each(funs(first))->
zpsaccadic
ggplot(filter(zpsaccadic,total.verg.amp>0,total.verg.amp<10,peak.verg.velocity>0))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))
ggplot(filter(zpsaccadic,total.verg.amp>0,total.verg.amp<10,peak.verg.velocity>0))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))+
geom_abline()
ggplot(filter(zp,total.verg.amp>0,total.verg.amp<10,peak.verg.velocity>0))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))
ggplot(filter(zp,total.verg.amp>1,total.verg.amp<10,peak.verg.velocity>0))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))
ggplot(filter(zp,total.verg.amp>1,total.verg.amp<10,peak.verg.velocity>0))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))+
geom_abline()
ggplot(filter(zp,total.verg.amp>1,total.verg.amp<10,peak.verg.velocity>0))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))+
coord_fixed()
ggplot(filter(zp,total.verg.amp>1,total.verg.amp<10,peak.verg.velocity>0))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))+
coord_fixed()+
theme_minimal()
ggplot(filter(zp,total.verg.amp>1,total.verg.amp<10,peak.verg.velocity>0))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))+
coord_fixed()+
theme_minimal()+
stat_smooth(method='lm',se = FALSE)
ggplot(filter(zp,total.verg.amp>1,total.verg.amp<10,peak.verg.velocity>0),
aes(peak.verg.velocity,predicted.peak.verg.velocity))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))+
coord_fixed()+
theme_minimal()+
stat_smooth(method='lm',se = FALSE)
ggplot(filter(zp,total.verg.amp>1,total.verg.amp<10,peak.verg.velocity>0),
aes(peak.verg.velocity,predicted.peak.verg.velocity))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))+
coord_fixed()+
theme_minimal()+
stat_smooth(method='lm',se = FALSE,color='black')
vergVfitmod=lm(peak.verg.velocity~predicted.peak.verg.velocity,
data=filter(zp,total.verg.amp>1,total.verg.amp<10,peak.verg.velocity>0)
vergVfitmod=lm(peak.verg.velocity~predicted.peak.verg.velocity,
data=filter(zp,total.verg.amp>1,total.verg.amp<10,peak.verg.velocity>0))
summary(vergVfitmod)
zplot<- filter(zp,total.verg.amp>1,total.verg.amp<10,peak.verg.velocity>0)
vergVfitmod=lm(peak.verg.velocity~predicted.peak.verg.velocity,
data=zplot)
cor(peak.verg.velocity,predicted.peak.verg.velocity,data=zplot)
cor(zplot$peak.verg.velocity,zplot$predicted.peak.verg.velocity)
bufferlength=200
t %>%
# filter(monkey =='Bee') %>%
# filter(neuron=='Bee-211') %>%
filter(neuron=='Bee-113') %>%
group_by(neuron) %>%
mutate(sdf20=lag(sdf,20),
verg.velocity=lev-rev,
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2)) %>%
mutate(saccadic=markSaccades(conj.velocity,
buffer=4,
threshold=20)>0) %>%
do(m=lm('verg.velocity~sdf20+verg.angle',data=filter(.,!saccadic)))->
tm
ttm<- glance(tm,'m')
arrange(ttm,desc(r.squared))
verg.model=tm$m[[1]]
bufferlength=200
z<- filter(t,neuron=='Bee-113')
z %>%
mutate(sdf20=lag(sdf,20),
verg.velocity=lev-rev,
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2)) %>%
mutate(saccadic=markSaccades(conj.velocity,
buffer=4,
threshold=20)>0) %>%
do(m=lm('verg.velocity~sdf20+verg.angle',data=filter(.,!saccadic)))->
tm
ttm<- glance(tm,'m')
arrange(ttm,desc(r.squared))
summary(verg.model)
z %>%
mutate(sdf20=lag(sdf,20),
time=row_number(),
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2)) %>%
mutate(predV=predict(verg.model,newdata=.))->
z
bufferlength<-200
z %>%
do(joinsaccades(.,buffer=bufferlength,threshold=20)) %>%
group_by(sacnum) %>%
mutate(saccade.dur=n()-2*bufferlength,
saccade.end=saccade.dur+bufferlength,
peak.conj.velocity=maxabs(conj.velocity),
peak.R.H= maxabs(rev),
peak.R.V= maxabs(revV),
peak.L.H= maxabs(lev),
peak.L.V= maxabs(levV),
R.H.Amp=rep[saccade.end]-rep[bufferlength],
L.H.Amp=lep[saccade.end]-lep[bufferlength],
R.V.Amp=repV[saccade.end]-repV[bufferlength],
L.V.Amp=lepV[saccade.end]-lepV[bufferlength],
verg.amp=verg.angle[saccade.end]-verg.angle[bufferlength],
conj.H.Amp=(R.H.Amp+L.H.Amp)/2,
conj.V.Amp=(R.V.Amp+L.V.Amp)/2,
r.angle=atan2(R.V.Amp,R.H.Amp)*180/pi,
r.amp=sqrt(R.H.Amp^2+R.V.Amp^2),
vect.amp= (sqrt(R.H.Amp^2+R.V.Amp^2)+sqrt(L.H.Amp^2+L.V.Amp^2))/2,
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)),
saccadic.verg.amp=verg.angle[saccade.end]-verg.angle[bufferlength],
total.verg.amp=sum(verg.velocity)/1000,
mean.verg.amp=mean(verg.angle[saccade.end:n()]-mean(verg.angle[1:bufferlength])),
peak.verg.velocity= maxabs(verg.velocity),
min.verg.trans = min(verg.velocity),
max.verg.trans = max(verg.velocity),
off.verg.velocity=min(abs(min.verg.trans),abs(max.verg.trans)),
min.verg.angle=min(verg.angle),
max.verg.angle=max(verg.angle),
max.verg.velocity=max(verg.velocity),
min.verg.velocity=min(verg.velocity),
initial.verg.angle=verg.angle[bufferlength],
predicted.verg.amp=sum(predV)/1000,
predicted.peak.verg.velocity=maxabs(predV))->
zz
zz %>%
group_by(neuron,sacnum) %>%
summarize_each(funs(first))->
zp
zplot<- filter(zp,total.verg.amp>1,total.verg.amp<10,peak.verg.velocity>0)
ggplot(zplot,
aes(peak.verg.velocity,predicted.peak.verg.velocity))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))+
coord_fixed()+
theme_minimal()+
stat_smooth(method='lm',se = FALSE,color='black')
vergVfitmod=lm(peak.verg.velocity~predicted.peak.verg.velocity,
data=zplot)
cor(zplot$peak.verg.velocity,zplot$predicted.peak.verg.velocity)
summary(vergVfitmod)
z<- filter(t,neuron=='Bee-211')
z %>%
mutate(sdf20=lag(sdf,20),
verg.velocity=lev-rev,
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2)) %>%
mutate(saccadic=markSaccades(conj.velocity,
buffer=4,
threshold=20)>0) %>%
do(m=lm('verg.velocity~sdf20+verg.angle',data=filter(.,!saccadic)))->
tm
verg.model=tm$m[[1]]
summary(verg.model)
z %>%
mutate(sdf20=lag(sdf,20),
time=row_number(),
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2)) %>%
mutate(predV=predict(verg.model,newdata=.))->
z
bufferlength<-200
z %>%
do(joinsaccades(.,buffer=bufferlength,threshold=20)) %>%
group_by(sacnum) %>%
mutate(saccade.dur=n()-2*bufferlength,
saccade.end=saccade.dur+bufferlength,
peak.conj.velocity=maxabs(conj.velocity),
peak.R.H= maxabs(rev),
peak.R.V= maxabs(revV),
peak.L.H= maxabs(lev),
peak.L.V= maxabs(levV),
R.H.Amp=rep[saccade.end]-rep[bufferlength],
L.H.Amp=lep[saccade.end]-lep[bufferlength],
R.V.Amp=repV[saccade.end]-repV[bufferlength],
L.V.Amp=lepV[saccade.end]-lepV[bufferlength],
verg.amp=verg.angle[saccade.end]-verg.angle[bufferlength],
conj.H.Amp=(R.H.Amp+L.H.Amp)/2,
conj.V.Amp=(R.V.Amp+L.V.Amp)/2,
r.angle=atan2(R.V.Amp,R.H.Amp)*180/pi,
r.amp=sqrt(R.H.Amp^2+R.V.Amp^2),
vect.amp= (sqrt(R.H.Amp^2+R.V.Amp^2)+sqrt(L.H.Amp^2+L.V.Amp^2))/2,
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)),
saccadic.verg.amp=verg.angle[saccade.end]-verg.angle[bufferlength],
total.verg.amp=sum(verg.velocity)/1000,
mean.verg.amp=mean(verg.angle[saccade.end:n()]-mean(verg.angle[1:bufferlength])),
peak.verg.velocity= maxabs(verg.velocity),
min.verg.trans = min(verg.velocity),
max.verg.trans = max(verg.velocity),
off.verg.velocity=min(abs(min.verg.trans),abs(max.verg.trans)),
min.verg.angle=min(verg.angle),
max.verg.angle=max(verg.angle),
max.verg.velocity=max(verg.velocity),
min.verg.velocity=min(verg.velocity),
initial.verg.angle=verg.angle[bufferlength],
predicted.verg.amp=sum(predV)/1000,
predicted.peak.verg.velocity=maxabs(predV))->
zz
zz %>%
group_by(neuron,sacnum) %>%
summarize_each(funs(first))->
zp
zplot<- filter(zp,total.verg.amp>1,total.verg.amp<10,peak.verg.velocity>0)
ggplot(zplot,
aes(peak.verg.velocity,predicted.peak.verg.velocity))+
geom_point(aes(peak.verg.velocity,predicted.peak.verg.velocity))+
coord_fixed()+
theme_minimal()+
stat_smooth(method='lm',se = FALSE,color='black')
vergVfitmod=lm(peak.verg.velocity~predicted.peak.verg.velocity,
data=zplot)
summary(vergVfitmod)
cor(zplot$peak.verg.velocity,zplot$predicted.peak.verg.velocity)
vergVfitmod=lm(predicted.peak.verg.velocity~peak.verg.velocity,
data=zplot)
summary(vergVfitmod)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(knitr)
library(tidyr)
library(broom)
# library(grid)
library(relaimpo)
library(leaps)
#library(data.table)
library(stringr)
library(dplyr)
library(cladoRcpp)
select<-dplyr::select
# source('joinsaccadesuniform.R')
source('Adamhelperfunctions.R')
t<- loadnewcsv2(path="C:/Users/setup/Desktop/NRTP Vergence/FEF/")
head(t)
t %>% group_by(neuron) %>% do(m=sdf~verg.angle+verg.velocity) ->tm
head(tm)
tm$m[[1]]
t %>% group_by(neuron) %>% do(m=lm(sdf~verg.angle+verg.velocity,data=.)) ->tm
t %>% group_by(neuron) %>% mutate(sdf=spikedensity(rasters,10) %>% do(m=lm(sdf~verg.angle+verg.velocity,data=.)) ->tm
t %>% group_by(neuron) %>% mutate(sdf=spikedensity(rasters,10)) %>% do(m=lm(sdf~verg.angle+verg.velocity,data=.)) ->tm
summary(tm$m[[1]])
glance(tm)
glance(tm,m)
t %>%
group_by(neuron) %>%
mutate(sdf=spikedensity(rasters,10),
sdf20=lag(sdf,20),
sdf50=lag(sdf,50)) %>%
do(m=lm(sdf~verg.angle+verg.velocity,data=.)) ->
tm
glance(tm,m)
t %>%
group_by(neuron) %>%
mutate(sdf=spikedensity(rasters,10),
sdf20=lag(sdf,20),
sdf50=lag(sdf,50)) %>%
do(m=lm(sdf~verg.angle+verg.velocity,data=.),
m20=lm(sdf20~verg.angle+verg.velocity,data=.),
m50=lm(sdf50~verg.angle+verg.velocity,data=.)) ->
tm
glance(tm,m20)
glance(tm,m50)
t %>%
group_by(neuron) %>%
mutate(sdf=spikedensity(rasters,20),
sdf20=lag(sdf,20),
sdf50=lag(sdf,50)) %>%
do(m=lm(sdf~verg.angle+verg.velocity,data=.),
m20=lm(sdf20~verg.angle+verg.velocity,data=.),
m50=lm(sdf50~verg.angle+verg.velocity,data=.)) ->
tm
glance(tm,m)
glance(tm,m20)
glance(tm,m50)
tidy(tm,m)
tidym<-tidy(tm,m)
qplot(neuron,estimate,data=filter(term=='verg.angle'))
qplot(neuron,estimate,data=filter(tidym,term=='verg.angle'))
qplot(neuron,estimate,data=filter(tidym,term=='verg.angle'),geom='bar')
qplot(neuron,estimate,data=filter(tidym,term=='verg.angle'),geom='bar',stat='identity')
qplot(neuron,estimate,data=filter(tidym,term=='verg.angle'))
qplot(neuron,estimate,data=filter(tidym,term=='verg.angle'))+geom_hline()
qplot(neuron,estimate,data=filter(tidym,term=='verg.angle'))+geom_hline(yintercept=0)
qplot(neuron,estimate,data=filter(tidym,term=='verg.velocity'))+geom_hline(yintercept=0)
tidym %>%
select(neron,term,estimate) %>%
spread(term,estimate)->
stm
tidym %>%
select(neuron,term,estimate) %>%
spread(term,estimate)->
stm
head(stm)
