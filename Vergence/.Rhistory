library(ggplot2)
library(dplyr)
library(knitr)
library(xtable)
# library(tidyr)
# library(broom)
# library(grid)
# library(relaimpo)
# library(leaps)
# library(data.table)
# library(stringr)
# source('joinsaccadesuniform.R')
source('Adamhelperfunctions.R')
t<-readRDS('SOA-NRTP.RDS')
z<- filter(t,monkey=='Bee',cellnum %in% c(6,15,205))
dynamicleadverg<-function(p,lags=seq(0,150,by=5)) {
rsq<-NULL
bias<- NULL
verg.angle<-NULL
conv.trans<-NULL
dive.trans<- NULL
verg.velocity<- NULL
for (i in 1:length(lags)) {
if (lags[i] > 0){
p$sdflag<-dplyr::lag(p$sdf,lags[i])
}
else{
p$sdflag<-dplyr::lead(p$sdf,lags[i]*-1)
}
m<- lm(sdflag~verg.angle+verg.velocity:transient.type,data=p)
r<- summary(m)$coefficients
rsq[i]<- summary(m)$r.squared
bias[i]<- r[1]
verg.angle[i]<- r[2]
conv.trans[i]=r[3]
dive.trans[i]=r[4]
verg.velocity[i]=r[5]
}
x<- data.frame(lag=lags,bias=bias,verg.angle=verg.angle,conv.trans=conv.trans,dive.trans=dive.trans,
verg.velocity=verg.velocity,r2=rsq)
# return(x)
return(filter(x,r2==max(r2)))
}
t %>%
group_by(neuron) %>%
mutate(time=row_number(),
transient.type='none',
transient.type=replace(transient.type, verg.velocity > 15,'convergence'),
transient.type=replace(transient.type, verg.velocity < -15, 'divergence')) %>%
do(dynamicleadverg(p=.)) ->
p
p
p<-ungroup(p)
library(tidyr)
p %>% separate(neuron, c('monkey','cellnum'),remove=FALSE) %>%
mutate(celltype=as.factor(as.numeric(cellnum)>100))-> p
ggplot(aes(celltype,lag),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))
ggplot(aes(celltype,verg.angle),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))
ggplot(aes(celltype,conv.trans),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))
head(p)
levels(p$celltype)<- c("NRTP","SOA")
head(p)
saveRDS(p,'TransientModel.RDS')
head(p)
a<- aov(lag~celltype,data=p)
summary(a)
class(summary(a))
a
a$coefficients
a$effects
a
summary(a)
a<-summary(a)
a
a[1]
a$coefficients
a$coeff
str(a)
a$'F value'
a$'F.value'
a$Df
ggplot(aes(celltype,dive.trans),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))
ggplot(aes(celltype,verg.velocity),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))
ggplot(aes(celltype,verg.angle),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))
ggplot(aes(celltype,r2),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))
-.1/7
head(p)
p<-mutate(p,conv.ratio=conv.trans/verg.velocity)
head(p)
p<-arrange(p,desc(conv.ratio))
head(p,20)
ggplot(aes(celltype,conv.ratio),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))
ggplot(aes(celltype,conv.ratio),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))+coord_cartesian(ylim=c(-10,10))
ggplot(aes(celltype,conv.ratio),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))+coord_cartesian(ylim=c(-3,7))
p<-mutate(p,conv.ratio=conv.trans/verg.angle)
p<-arrange(p,desc(conv.ratio))
head(p,20)
ggplot(aes(celltype,conv.ratio),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))+coord_cartesian(ylim=c(-3,7))
ggplot(aes(celltype,conv.ratio),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))
ggplot(aes(celltype,conv.ratio),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))+coord_cartesian(ylim=c(-3,3))
ggplot(aes(celltype,conv.ratio),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))
p<-mutate(p,conv.ratio2=verg.velocity/verg.angle)
p<-arrange(p,desc(conv.ratio2))
head(p,20)
ggplot(aes(celltype,conv.ratio2),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))
ggplot(aes(celltype,conv.ratio),data=p)+geom_boxplot()+geom_jitter(aes(color=celltype))
a<-aov(conv.ratio~celltype)
a<-aov(conv.ratio~celltype,data=p)
summary(a)
a<-aov(conv.ratio2~celltype,data=p)
summary(a)
t.test(conv.ratio2~celltype,data=p)
t.test(conv.ratio~celltype,data=p)
t.test(conv.trans~celltype,data=p)
t.test(verg.angle~celltype,data=p)
t.test(lag~celltype,data=p)
z<- filter(t,neuron=='Bee-103')
z<- mutate(z,time=row_number(),
transient.type='none',
transient.type=replace(transient.type, verg.velocity > 15,'convergence'),
transient.type=replace(transient.type, verg.velocity < -15, 'divergence'),
verg.accel=parabolicdiff(verg.velocity),
accel.type=verg.accel>0)
z<- mutate(z, sdflead=lag(sdf,25))
mcontrol<- lm(sdflead~verg.angle+verg.velocity,data=z)
mtest<- lm(sdflead~verg.angle+verg.velocity:transient.type,data=z)
z<- mutate(z,econtrol=predict(mcontrol,newdata=z),
etest=predict(mtest,newdata=z))
maxtime<-nrow(z)
manipulate(ggplot(filter(z,time>window,time<window+5000))+
geom_area(aes(time,sdflead))+
# geom_line(aes(time,elog),color='orange')+
geom_area(aes(time,etest),fill='purple',alpha=.5)+
geom_hline(yintercept=-115)+
geom_hline(yintercept=-85)+
geom_line(aes(time,verg.velocity-100),color='pink'),#+
# geom_line(aes(time,rep*10),color='red')+
# geom_line(aes(time,lep*10),color='blue'),
# geom_line(aes(time,verg.angle*10),color='darkgreen'),
window=slider(0,maxtime-5000,step=5000)
)
z<- filter(t,neuron=='Bee-25')
z<- mutate(z,time=row_number(),
transient.type='none',
transient.type=replace(transient.type, verg.velocity > 15,'convergence'),
transient.type=replace(transient.type, verg.velocity < -15, 'divergence'),
verg.accel=parabolicdiff(verg.velocity),
accel.type=verg.accel>0)
z<- mutate(z, sdflead=lag(sdf,10))
mcontrol<- lm(sdflead~verg.angle+verg.velocity,data=z)
mtest<- lm(sdflead~verg.angle+verg.velocity:transient.type,data=z)
z<- filter(t,neuron=='Bee-25')
z<- mutate(z,time=row_number(),
transient.type='none',
transient.type=replace(transient.type, verg.velocity > 15,'convergence'),
transient.type=replace(transient.type, verg.velocity < -15, 'divergence'),
verg.accel=parabolicdiff(verg.velocity),
accel.type=verg.accel>0)
z<- mutate(z,time=row_number(),
transient.type='none',
transient.type=replace(transient.type, verg.velocity > 15,'convergence'),
transient.type=replace(transient.type, verg.velocity < -15, 'divergence'))
z<- mutate(z, sdflead=lag(sdf,10))
mcontrol<- lm(sdflead~verg.angle+verg.velocity,data=z)
mtest<- lm(sdflead~verg.angle+verg.velocity:transient.type,data=z)
z<- mutate(z,econtrol=predict(mcontrol,newdata=z),
etest=predict(mtest,newdata=z))
maxtime<-nrow(z)
manipulate(ggplot(filter(z,time>window,time<window+5000))+
geom_area(aes(time,sdflead))+
# geom_line(aes(time,elog),color='orange')+
geom_area(aes(time,etest),fill='purple',alpha=.5)+
geom_hline(yintercept=-115)+
geom_hline(yintercept=-85)+
geom_line(aes(time,verg.velocity-100),color='pink'),#+
# geom_line(aes(time,rep*10),color='red')+
# geom_line(aes(time,lep*10),color='blue'),
# geom_line(aes(time,verg.angle*10),color='darkgreen'),
window=slider(0,maxtime-5000,step=5000)
)
qplot(verg.velocity,sdf,data=z)
qplot(verg.velocity,sdf,data=filter(z,transient.type==convergence))
qplot(verg.velocity,sdf,data=filter(z,transient.type=='convergence'))
qplot(verg.velocity,sdf,data=filter(z,transient.type=='none'))
qplot(verg.velocity,sdf,data=filter(z,transient.type=='none'))+stat_smooth(method='lm')
qplot(verg.velocity,sdf,data=filter(z,transient.type=='divergence'))+stat_smooth(method='lm')
qplot(verg.velocity,sdf,data=filter(z,transient.type=='convergence'))+stat_smooth(method='lm')
qplot(verg.velocity,etest,data=z)
qplot(verg.velocity,sdf,data=filter(z,transient.type=='convergence'))+stat_smooth(method='lm')+geom_point(aes(verg.velocity,etest),color='purple')
qplot(verg.velocity,sdf,data=filter(z,transient.type=='none'))+stat_smooth(method='lm')+geom_point(aes(verg.velocity,etest),color='purple')
qplot(verg.velocity,sdf,data=z)+stat_smooth(method='lm')+geom_point(aes(verg.velocity,etest),color='purple')
qplot(verg.velocity,sdf,data=z)+stat_smooth(method='lm')+geom_point(aes(verg.velocity,etest),color='purple')+geom_point(aes(verg.velocity,econtrol),color='orange')
