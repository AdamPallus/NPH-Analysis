c2eyes=cor(repV,lepV),
meanFR=sum(rasters)/dur*1000,
mean.V=mean(conj.vert),
mean.H=mean(conj.hor),
mean.verg.angle=mean(verg.angle),
asleep=sd.conj.velocity>7.5 || dur>2000)->
zp
qplot(mean.H,meanFR,data=zp)
qplot(mean.V,meanFR,data=zp)
qplot(mean.V,meanFR,data=zp)+geom_point(aes(mean.H,meanFR))
qplot(mean.V,meanFR,data=zp)+geom_point(aes(mean.H,meanFR),color='orange')
manipulate(
{
d<-filter(z,time>window,time<window+windowsize)
ggplot(d)+
geom_line(aes(time,rep),color='red')+
geom_line(aes(time,lep),color='blue')+
geom_line(aes(time,rev/10),color='red',linetype=2)+
geom_line(aes(time,lev/10),color='blue',linetype=2)+
geom_point(aes(time,sign(dsnum)*9,color=asleep))
},
window=slider(1,nrow(z),initial = 1,step=windowsize)
)
qplot(mean.H,mean.V,data=zp)
qplot(mean.H,mean.V,data=zp,color='meanFR')
qplot(mean.H,mean.V,data=zp,color=meanFR)
manipulate(
{
d<-filter(z,time>window,time<window+windowsize)
d<-mutate(d,showrasters=replace(rasters,rasters<1,NA))
ggplot(d)+
geom_line(aes(time,rep),color='red')+
geom_line(aes(time,lep),color='blue')+
geom_line(aes(time,rev/10),color='red',linetype=2)+
geom_line(aes(time,lev/10),color='blue',linetype=2)+
geom_point(aes(time,sign(dsnum)*9,color=asleep))+
},
window=slider(1,nrow(z),initial = 1,step=windowsize)
)
manipulate(
{
d<-filter(z,time>window,time<window+windowsize)
d<-mutate(d,showrasters=replace(rasters,rasters<1,NA)
ggplot(d)+
geom_line(aes(time,rep),color='red')+
geom_line(aes(time,lep),color='blue')+
geom_line(aes(time,rev/10),color='red',linetype=2)+
geom_line(aes(time,lev/10),color='blue',linetype=2)+
geom_point(aes(time,sign(dsnum)*9,color=asleep))+
},
window=slider(1,nrow(z),initial = 1,step=windowsize)
)
#identify sleep using standard deviation of non-saccadic periods?
z %>%
group_by(stimes)%>%
mutate(sdvel=sd(conj.velocity),
dur=n()) ->
z
markSaccadesDouble<- function(v, threshold1=60,threshold2=20){
require(dplyr)
datalength<-length(v)
mindur<- 1
i<-which(abs(v)>threshold2) #find all the times when speed is above the lower threshold
sacoff<-which(diff(i)>mindur) #minimum duration of an accepted saccade
sacon<-c(1,sacoff+1) #first saccade
sacoff<-c(sacoff,length(i)) #end of last saccade
event.onset<-i[sacon] #get actual times
event.offset<-i[sacoff]
stimes<- data.frame(event.onset,event.offset)
nsaccades=nrow(stimes)
jsac<- function(stimes){
summary(stimes)
#input should be an array of length 2: c(onsettime,offsettime, saccade.number,saccade.dur)
df<- data.frame(time=stimes[[1]]:stimes[[2]])
df$event<- stimes[[4]]
df$event.dur<- stimes[[3]]
return(df)
# return(stimes[[1]]:stimes[[2]])
}
stimes %>%
mutate(dur=event.offset-event.onset,
s=row_number())->
stimes
x<-rbindlist(apply(stimes,1,jsac))
v<- data.frame(v=v)
v<- mutate(v, time=row_number())
xx<- left_join(v,x,by='time')
xx %>%
group_by(event) %>%
summarize(max.vel=max(abs(v))) %>%
filter(max.vel>threshold1)->
xm
xx %>%
filter(event %in% unique(xm$event)) %>%
dplyr::select(time,event) ->
g
stimes2<- filter(stimes,s %in% unique(xm$event))
ftimes<-data.frame(fix.onset=c(1,stimes2$event.offset+1),
fix.offset=c(stimes2$event.onset-1,datalength))
ftimes %>%
filter(fix.onset>0,fix.offset>0)%>%
mutate(dur=fix.offset-fix.onset,
s=row_number()) %>%
filter(fix.onset<datalength)->
ftimes
f<-rbindlist(apply(ftimes,1,jsac))
f<- select(f,-event.dur)
f$issaccade=FALSE
g$issaccade=TRUE
fg<-rbind(f,g)
fg<- arrange(fg,time)
fg$event[!fg$issaccade]=fg$event[!fg$issaccade]*-1
if (length(fg$event)!=datalength){
message('FAIL')
message(length(fg$event))
message(datalength)
# message(paste('FAILED: ',length(fg$event,datalength,sep='-')))
}
else{
message('SUCCESS')
}
fg$event
}
z$dsnum<-markSaccadesDouble(z$conj.velocity)
# v<-markSaccadesDouble(z$conj.velocity)
mod<- lm(sdf~lepV+repV+levV+revV,data=filter(z,!asleep))
mod2<- lm(sdf~lepV+repV+levV+revV,data=filter(z,asleep))
mod<- lm(sdf~conj.vert+conj.hor,data=z)
mod<- lm(sdf~conj.vert+conj.hor,data=filter(z,!asleep))
mod<- lm(sdf~conj.vert:asleep,data=z)
mod<- lm(sdf10~conj.vert:asleep+conj.hor:asleep,data=z)
summary(mod)
z %>%
filter(dsnum<0) %>%
group_by(dsnum) %>%
summarize(sd.conj.velocity=sd(conj.velocity),
mean.conj.velocity=mean(conj.velocity),
spread=max(conj.velocity)-min(conj.velocity),
qrange=quantile(conj.velocity,0.975)-quantile(conj.velocity,0.025),
dur=n(),
starttime=first(time),
c2eyes=cor(repV,lepV),
meanFR=sum(rasters)/dur*1000,
mean.V=mean(conj.vert),
mean.H=mean(conj.hor),
mean.verg.angle=mean(verg.angle),
asleep=sd.conj.velocity>7.5 || dur>2000)->
zp
mod<- lm(meanFR~mean.V:asleep+mean.H:asleep,data=zp)
mod<- lm(meanFR~mean.V+mean.H,data=filter(zp,!asleep,dur>100))
manipulate(
{
d<-filter(z,time>window,time<window+windowsize)
d<-mutate(d,showrasters=replace(rasters,rasters<1,NA))
ggplot(d)+
geom_line(aes(time,rep),color='red')+
geom_line(aes(time,lep),color='blue')+
geom_line(aes(time,rev/10),color='red',linetype=2)+
geom_line(aes(time,lev/10),color='blue',linetype=2)+
geom_point(aes(time,sign(dsnum)*9,color=asleep))
},
window=slider(1,nrow(z),initial = 1,step=windowsize)
)
manipulate(
{
d<-filter(z,time>window,time<window+windowsize)
d<-mutate(d,showrasters=replace(rasters,rasters<1,NA))
ggplot(d)+
geom_line(aes(time,rep),color='red')+
geom_line(aes(time,lep),color='blue')+
geom_line(aes(time,rev/10),color='red',linetype=2)+
geom_line(aes(time,lev/10),color='blue',linetype=2)+
geom_point(aes(time,sign(dsnum)*9,color=asleep))+
geom_point(aes(time,showrasters-20),shape='|',size=3)
},
window=slider(1,nrow(z),initial = 1,step=windowsize)
)
manipulate(
{
d<-filter(z,time>window,time<window+windowsize)
d<-mutate(d,showrasters=replace(rasters,rasters<1,NA))
d<-mutate(d,sdf=spikedensity(rasters,10))
ggplot(d)+
geom_line(aes(time,rep),color='red')+
geom_line(aes(time,lep),color='blue')+
geom_line(aes(time,rev/10),color='red',linetype=2)+
geom_line(aes(time,lev/10),color='blue',linetype=2)+
geom_point(aes(time,sign(dsnum)*9,color=asleep))+
geom_point(aes(time,showrasters-20),shape='|',size=3)+
geom_line(aes(time,sdf))
},
window=slider(1,nrow(z),initial = 1,step=windowsize)
)
manipulate(
{
d<-filter(z,time>window,time<window+windowsize)
d<-mutate(d,showrasters=replace(rasters,rasters<1,NA))
d<-mutate(d,sdf=spikedensity(rasters,10))
ggplot(d)+
geom_line(aes(time,rep),color='red')+
geom_line(aes(time,lep),color='blue')+
geom_line(aes(time,rev/10),color='red',linetype=2)+
geom_line(aes(time,lev/10),color='blue',linetype=2)+
geom_point(aes(time,sign(dsnum)*9,color=asleep))+
geom_point(aes(time,showrasters-20),shape='|',size=3)
# +
# geom_line(aes(time,sdf))
},
window=slider(1,nrow(z),initial = 1,step=windowsize)
)
z<- filter(t,neuron=='Kopachuck-907')
parabolic_n=10
z %>%
ungroup()%>%
mutate(lev=parabolicdiff(lep,parabolic_n),
levV=parabolicdiff(lepV,parabolic_n),
rev=parabolicdiff(rep,parabolic_n),
revV=parabolicdiff(repV,parabolic_n),
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2),
dsnum=markSaccadesDouble(conj.velocity),
sdf=spikedensity(rasters,10),
sdf10=lag(sdf,10),
conj.vert=(repV+lepV)/2,
conj.vert.vel=(revV+levV)/2,
conj.hor=(rep+lep)/2,
conj.hor.v=(rev+lev)/2) ->
z
z%>%
group_by(dsnum) %>%
mutate(sd.conj.velocity=sd(conj.velocity),
dur=n(),
asleep=sd.conj.velocity>7.5 & dsnum<0 || dur>2000)->
z
windowsize=10000
manipulate(
{
d<-filter(z,time>window,time<window+windowsize)
d<-mutate(d,showrasters=replace(rasters,rasters<1,NA))
d<-mutate(d,sdf=spikedensity(rasters,10))
ggplot(d)+
geom_line(aes(time,rep),color='red')+
geom_line(aes(time,lep),color='blue')+
geom_line(aes(time,rev/10),color='red',linetype=2)+
geom_line(aes(time,lev/10),color='blue',linetype=2)+
geom_point(aes(time,sign(dsnum)*9,color=asleep))+
geom_point(aes(time,showrasters-20),shape='|',size=3)
# +
# geom_line(aes(time,sdf))
},
window=slider(1,nrow(z),initial = 1,step=windowsize)
)
z<- filter(t,neuron=='Kopachuck-915')
parabolic_n=10
z %>%
ungroup()%>%
mutate(lev=parabolicdiff(lep,parabolic_n),
levV=parabolicdiff(lepV,parabolic_n),
rev=parabolicdiff(rep,parabolic_n),
revV=parabolicdiff(repV,parabolic_n),
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2),
dsnum=markSaccadesDouble(conj.velocity),
sdf=spikedensity(rasters,10),
sdf10=lag(sdf,10),
conj.vert=(repV+lepV)/2,
conj.vert.vel=(revV+levV)/2,
conj.hor=(rep+lep)/2,
conj.hor.v=(rev+lev)/2) ->
z
z%>%
group_by(dsnum) %>%
mutate(sd.conj.velocity=sd(conj.velocity),
dur=n(),
asleep=sd.conj.velocity>7.5 & dsnum<0 || dur>2000)->
z
windowsize=10000
manipulate(
{
d<-filter(z,time>window,time<window+windowsize)
d<-mutate(d,showrasters=replace(rasters,rasters<1,NA))
d<-mutate(d,sdf=spikedensity(rasters,10))
ggplot(d)+
geom_line(aes(time,rep),color='red')+
geom_line(aes(time,lep),color='blue')+
geom_line(aes(time,rev/10),color='red',linetype=2)+
geom_line(aes(time,lev/10),color='blue',linetype=2)+
geom_point(aes(time,sign(dsnum)*9,color=asleep))+
geom_point(aes(time,showrasters-20),shape='|',size=3)
# +
# geom_line(aes(time,sdf))
},
window=slider(1,nrow(z),initial = 1,step=windowsize)
)
z %>%
filter(dsnum<0) %>%
group_by(dsnum) %>%
summarize(sd.conj.velocity=sd(conj.velocity),
mean.conj.velocity=mean(conj.velocity),
spread=max(conj.velocity)-min(conj.velocity),
qrange=quantile(conj.velocity,0.975)-quantile(conj.velocity,0.025),
dur=n(),
starttime=first(time),
c2eyes=cor(repV,lepV),
meanFR=sum(rasters)/dur*1000,
mean.V=mean(conj.vert),
mean.H=mean(conj.hor),
mean.verg.angle=mean(verg.angle),
asleep=sd.conj.velocity>7.5 || dur>2000)->
zp
qplot(mean.V,meanFR,data=zp)
qplot(mean.H,meanFR,data=zp)
qplot(mean.V,meanFR,data=zp)
qplot(mean.V,meanFR,data=filter(zp,!asleep))
qplot(mean.H,meanFR,data=zp,color=asleep)
qplot(mean.H,meanFR,data=filter(zp,meanFR>0),color=asleep)
qplot(mean.H,meanFR,data=filter(zp,meanFR>0),color=asleep)+stat_smooth(method='lm')
qplot(mean.V,meanFR,data=filter(zp,meanFR>0),color=asleep)
qplot(mean.V,meanFR,data=filter(zp,meanFR>0),color=asleep)+stat_smooth(method='lm')
qplot(mean.V,meanFR,data=filter(zp,meanFR>0))+stat_smooth(method='lm')
qplot(mean.V,meanFR,data=filter(zp,meanFR>0,mean.V> -10))+stat_smooth(method='lm')
qplot(mean.V,meanFR,color=asleep,data=filter(zp,meanFR>0,mean.V> -10))+stat_smooth(method='lm')
z<- filter(t,neuron=='Kopachuck-909')
parabolic_n=10
z %>%
ungroup()%>%
mutate(lev=parabolicdiff(lep,parabolic_n),
levV=parabolicdiff(lepV,parabolic_n),
rev=parabolicdiff(rep,parabolic_n),
revV=parabolicdiff(repV,parabolic_n),
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2),
dsnum=markSaccadesDouble(conj.velocity),
sdf=spikedensity(rasters,10),
sdf10=lag(sdf,10),
conj.vert=(repV+lepV)/2,
conj.vert.vel=(revV+levV)/2,
conj.hor=(rep+lep)/2,
conj.hor.v=(rev+lev)/2) ->
z
z%>%
group_by(dsnum) %>%
mutate(sd.conj.velocity=sd(conj.velocity),
dur=n(),
asleep=sd.conj.velocity>7.5 & dsnum<0 || dur>2000)->
z
windowsize=10000
manipulate(
{
d<-filter(z,time>window,time<window+windowsize)
d<-mutate(d,showrasters=replace(rasters,rasters<1,NA))
d<-mutate(d,sdf=spikedensity(rasters,10))
ggplot(d)+
geom_line(aes(time,rep),color='red')+
geom_line(aes(time,lep),color='blue')+
geom_line(aes(time,rev/10),color='red',linetype=2)+
geom_line(aes(time,lev/10),color='blue',linetype=2)+
geom_point(aes(time,sign(dsnum)*9,color=asleep))+
geom_point(aes(time,showrasters-20),shape='|',size=3)
# +
# geom_line(aes(time,sdf))
},
window=slider(1,nrow(z),initial = 1,step=windowsize)
)
z %>%
filter(dsnum<0) %>%
group_by(dsnum) %>%
summarize(sd.conj.velocity=sd(conj.velocity),
mean.conj.velocity=mean(conj.velocity),
spread=max(conj.velocity)-min(conj.velocity),
qrange=quantile(conj.velocity,0.975)-quantile(conj.velocity,0.025),
dur=n(),
starttime=first(time),
c2eyes=cor(repV,lepV),
meanFR=sum(rasters)/dur*1000,
mean.V=mean(conj.vert),
mean.H=mean(conj.hor),
mean.verg.angle=mean(verg.angle),
asleep=sd.conj.velocity>7.5 || dur>2000)->
zp
qplot(mean.H,meanFR,data=zp)
qplot(mean.V,meanFR,data=zp)
qplot(mean.V,meanFR,color=asleep,data=filter(zp,meanFR>0,mean.V> -10))+stat_smooth(method='lm')
z<- filter(t,neuron=='Kopachuck-910')
parabolic_n=10
z %>%
ungroup()%>%
mutate(lev=parabolicdiff(lep,parabolic_n),
levV=parabolicdiff(lepV,parabolic_n),
rev=parabolicdiff(rep,parabolic_n),
revV=parabolicdiff(repV,parabolic_n),
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2),
dsnum=markSaccadesDouble(conj.velocity),
sdf=spikedensity(rasters,10),
sdf10=lag(sdf,10),
conj.vert=(repV+lepV)/2,
conj.vert.vel=(revV+levV)/2,
conj.hor=(rep+lep)/2,
conj.hor.v=(rev+lev)/2) ->
z
z%>%
group_by(dsnum) %>%
mutate(sd.conj.velocity=sd(conj.velocity),
dur=n(),
asleep=sd.conj.velocity>7.5 & dsnum<0 || dur>2000)->
z
z %>%
filter(dsnum<0) %>%
group_by(dsnum) %>%
summarize(sd.conj.velocity=sd(conj.velocity),
mean.conj.velocity=mean(conj.velocity),
spread=max(conj.velocity)-min(conj.velocity),
qrange=quantile(conj.velocity,0.975)-quantile(conj.velocity,0.025),
dur=n(),
starttime=first(time),
c2eyes=cor(repV,lepV),
meanFR=sum(rasters)/dur*1000,
mean.V=mean(conj.vert),
mean.H=mean(conj.hor),
mean.verg.angle=mean(verg.angle),
asleep=sd.conj.velocity>7.5 || dur>2000)->
zp
qplot(mean.V,meanFR,color=asleep,data=filter(zp,meanFR>0,mean.V> -10))+stat_smooth(method='lm')
z<- filter(t,neuron=='Kopachuck-912')
parabolic_n=10
z %>%
ungroup()%>%
mutate(lev=parabolicdiff(lep,parabolic_n),
levV=parabolicdiff(lepV,parabolic_n),
rev=parabolicdiff(rep,parabolic_n),
revV=parabolicdiff(repV,parabolic_n),
conj.velocity=sqrt(((rev+lev)/2)^2+((revV+levV)/2)^2),
dsnum=markSaccadesDouble(conj.velocity),
sdf=spikedensity(rasters,10),
sdf10=lag(sdf,10),
conj.vert=(repV+lepV)/2,
conj.vert.vel=(revV+levV)/2,
conj.hor=(rep+lep)/2,
conj.hor.v=(rev+lev)/2) ->
z
z%>%
group_by(dsnum) %>%
mutate(sd.conj.velocity=sd(conj.velocity),
dur=n(),
asleep=sd.conj.velocity>7.5 & dsnum<0 || dur>2000)->
z
z %>%
filter(dsnum<0) %>%
group_by(dsnum) %>%
summarize(sd.conj.velocity=sd(conj.velocity),
mean.conj.velocity=mean(conj.velocity),
spread=max(conj.velocity)-min(conj.velocity),
qrange=quantile(conj.velocity,0.975)-quantile(conj.velocity,0.025),
dur=n(),
starttime=first(time),
c2eyes=cor(repV,lepV),
meanFR=sum(rasters)/dur*1000,
mean.V=mean(conj.vert),
mean.H=mean(conj.hor),
mean.verg.angle=mean(verg.angle),
asleep=sd.conj.velocity>7.5 || dur>2000)->
zp
qplot(mean.V,meanFR,color=asleep,data=filter(zp,meanFR>0,mean.V> -10))+stat_smooth(method='lm')
qplot(mean.V,meanFR,data=zp)
s<- loadnewcsv(path="C:/Users/setup/Desktop/NRTP Vergence/INCstim/")
bufferlength=200
s %>%
group_by(neuron) %>%
mutate(time=row_number(),
sdf=spikedensity(rasters,sd=10), #rasers are stim pulses
stimes=markSaccades(sdf,buffer=bufferlength,threshold=120))-> #use mark saccades to identify stim trains
sx
sx %>%
group_by(neuron) %>% #neuron = stim file
filter(stimes>0) %>% #remove fixations
mutate(showstim=replace(rasters,rasters<1,NA))%>%
group_by(neuron,stimes) %>%
mutate(counter=time-first(time),
repDIFF=rep-rep[counter==bufferlength],
lepDIFF=lep-lep[counter==bufferlength],
repVDIFF=repV-repV[counter==bufferlength],
lepVDIFF=lepV-lepV[counter==bufferlength])->
sp
chosensite='Kopachuck-505'
spt<- filter(sp,neuron==chosensite)
spt %>%
group_by(neuron,stimes) %>%
gather("Component","Velocity",c(3,5,7,9))%>%
gather("ComponentP","Position",2:5) %>%
mutate(Component=as.factor(Component),
is.Vertical=ComponentP %in% c('lepV','repV'),
is.Vertical=as.factor(is.Vertical))->
x
levels(x$is.Vertical)<- c("Horizontal",'Vertical')
ggplot(x)+
geom_line(aes(counter,Position,color=ComponentP))+
geom_point(aes(counter,showstim+10),shape='|',alpha=1/20)+
facet_grid(stimes~is.Vertical,scales='free_y')+
geom_vline(xintercept = 200)
chosensite='Kopachuck-506'
spt<- filter(sp,neuron==chosensite)
spt %>%
group_by(neuron,stimes) %>%
gather("Component","Velocity",c(3,5,7,9))%>%
gather("ComponentP","Position",2:5) %>%
mutate(Component=as.factor(Component),
is.Vertical=ComponentP %in% c('lepV','repV'),
is.Vertical=as.factor(is.Vertical))->
x
levels(x$is.Vertical)<- c("Horizontal",'Vertical')
ggplot(x)+
geom_line(aes(counter,Position,color=ComponentP))+
geom_point(aes(counter,showstim+10),shape='|',alpha=1/20)+
facet_grid(stimes~is.Vertical,scales='free_y')+
geom_vline(xintercept = 200)
