mindur<-50
i<-which(abs(ev)>threshold) #find all the times when speed > threshold
sacoff<-which(diff(i)>mindur) #minimum duration of an accepted saccade
sacon<-c(1,sacoff+1) #first saccade
sacoff<-c(sacoff,length(i)) #end of last saccade
saccade.onset<-i[sacon] #get actual times
saccade.offset<-i[sacoff]
return(data.frame(saccade.onset,saccade.offset))
}
jsac<- function(stimes){
#input should be an array of length 2: c(onsettime,offsettime)
df<- data.frame(time=stimes[[1]]:stimes[[2]])
df$sacnum<- stimes[[3]]
return(df)
# return(stimes[[1]]:stimes[[2]])
}
stimes<-findSaccades(t$conj.velocity,threshold)
stimes %>%
mutate(s=row_number(),
saccade.onset=saccade.onset-buffer,
saccade.offset=saccade.offset+buffer)->
stimes
x<- do.call('rbind',apply(stimes,1,jsac))
x %>%
group_by(sacnum) %>%
mutate(counter=time-first(time)) ->
x
left_join(t,x,by='time')
}
markEnhancement<- function(v, threshold1=15,threshold2=8){
require(dplyr)
mindur<-50
i<-which(abs(v)>threshold2) #find all the times when speed is above the lower threshold
sacoff<-which(diff(i)>mindur) #minimum duration of an accepted saccade
sacon<-c(1,sacoff+1) #first saccade
sacoff<-c(sacoff,length(i)) #end of last saccade
event.onset<-i[sacon] #get actual times
event.offset<-i[sacoff]
stimes<- data.frame(event.onset,event.offset)
nsaccades=nrow(stimes)
jsac<- function(stimes){
summary(stimes)
#input should be an array of length 2: c(onsettime,offsettime, saccade.number,saccade.dur)
df<- data.frame(time=stimes[[1]]:stimes[[2]])
df$enhancenum<- stimes[[4]]
df$enhance.dur<- stimes[[3]]
return(df)
# return(stimes[[1]]:stimes[[2]])
}
stimes %>%
mutate(dur=event.offset-event.onset,
s=row_number())->
stimes
x<- do.call('rbind',apply(stimes,1,jsac))
v<- data.frame(v=v)
v<- mutate(v, time=row_number())
xx<- left_join(v,x,by='time')
xx %>%
group_by(enhancenum) %>%
summarize(max.vel=max(abs(v))) %>%
filter(max.vel>threshold1)->
xm
xx %>%
filter(enhancenum %in% unique(xm$enhancenum)) %>%
dplyr::select(time,v,enhancenum) ->
g
}
head(t)
t %>% group_by(neuron) %>%
do(joinsaccades(.,buffer=20,threshold=20))->
t
t %>% group_by(neuron) %>%
filter(saccade.type != 'conj') %>%
# do(dynamiclead(p=.,formula='verg.angle+verg.velocity',seq(5,200,by=5))) %>%
do(tidy(lm('sdflag~verg.angle+verg.velocity:enhance.type',data=.))) %>%
mutate(term=replace(term,term=='verg.velocity:enhance.typenone','Slow.Vergence'),
term=replace(term,term=='verg.velocity:enhance.typeconvergence','Convergence'),
term=replace(term,term=='verg.velocity:enhance.typedivergence','Divergence'))->
ttest
ttest %>%
dplyr::select(term,estimate) %>%
group_by(term) %>%
summarize(e=mean(estimate),std=sd(estimate))->
m
head(t)
t %>%
group_by(neuron) %>%
group_by(neuron, sacnum) %>%
mutate(conj.h=(lep+rep)/2,
conj.v=(lepV+repV)/2,
conj.h.amp=last(conj.h)-first(conj.h),
conj.v.amp=last(conj.v)-first(conj.v),
conj.angle=atan2(conj.v,conj.h)*180/pi,
peak.verg.velocity=maxabs(verg.velocity),
r.amp=sqrt(conj.h^2+conj.v^2),
verg.amp=last(verg.angle)-first(verg.angle),
saccade.type='conj',
saccade.type=replace(saccade.type,verg.amp< -2 & r.amp>2,'diverging'),
saccade.type=replace(saccade.type,verg.amp> 2& r.amp>2,'converging'),
saccade.type=replace(saccade.type,is.na(sacnum) | r.amp<2,'no.saccade')) ->
t
t %>% group_by(neuron) %>%
filter(saccade.type != 'conj') %>%
# do(dynamiclead(p=.,formula='verg.angle+verg.velocity',seq(5,200,by=5))) %>%
do(tidy(lm('sdflag~verg.angle+verg.velocity:enhance.type',data=.))) %>%
mutate(term=replace(term,term=='verg.velocity:enhance.typenone','Slow.Vergence'),
term=replace(term,term=='verg.velocity:enhance.typeconvergence','Convergence'),
term=replace(term,term=='verg.velocity:enhance.typedivergence','Divergence'))->
ttest
ttest %>%
dplyr::select(-statistic,-std.error,-p.value) %>%
spread(term,estimate) ->
tp
saveRDS(tp,'modelparams-noconj.RDS')
mc<-tp
head(m)
head(mc)
qplot(Convergence,Slow.Vergence,data=m)
qplot(Convergence,Slow.Vergence,data=mc)
qplot(Convergence,Slow.Vergence,data=mc)+geom_abline(slope=1)
qplot(Convergence,Slow.Vergence,data=m)+geom_abline(slope=1)
ggplot()+geom_point(aes(Convergence,Slow.Vergence),data=m)
ggplot()+
geom_point(aes(Convergence,Slow.Vergence),data=m)+
geom_point(aes(Convergence,Slow.Vergence),color='green',data=mc)+
geom_abline(slope=1)
qplot(log(Convergence),log(Slow.Vergence),data=m)
cor(m$Convergence,m$Slow.Vergence)
cor(mc$Convergence,mc$Slow.Vergence)
qplot(aes(m$Convergence-mc$Convergence,m$Slow.Vergence-mc$Slow.Vergence))
m$Convergence-mc$Convergence
conv<-qplot(aes(m$Convergence-mc$Convergence,m$Slow.Vergence-mc$Slow.Vergence))
conv<- m$Convergence-mc$Convergence
slow<- m$Slow.Vergence-mc$Slow.Vergence
qplot(conv,slow)
conv<- mc$Convergence-m$Convergence
slow<- mc$Slow.Vergence-m$Slow.Vergence
qplot(conv,slow)
qplot(Convergence,Slow.Vergence,data=m)
qplot(Convergence,Slow.Vergence,data=m)+geom_abline(slope=1)
head(m)
qplot(Convergence,Slow.Vergence,data=m,color=verg.angle>0)+geom_abline(slope=1)
qplot(Divergence,Slow.Vergence,data=m,color=verg.angle>0)+geom_abline(slope=1)
qplot(-1*Divergence,Slow.Vergence,data=m,color=verg.angle>0)+geom_abline(slope=1)
qplot(Convergence,Slow.Vergence,data=m,color=verg.angle)+geom_abline(slope=1)
qplot(verg.angle,Slow.Vergence,data=m)+geom_abline(slope=1)
qplot(verg.angle,Convergence,data=m)+geom_abline(slope=1)
nrow(m)
head(m)
write.csv(m,'Model Results SOA.csv')
b<- readRDS('Bootstrap1999results.RDS')
head(b)
nrow(b)
b<- mutate(b,zerocross=low*high<1)
head(b)
sum(b$zerocross)
nrow(b)
157/280
b %>%
mutate(term=replace(term,'verg.velocity:enhance.typeconvergence','Convergence')) ->
bb
b %>%
mutate(term=replace(term,term=='verg.velocity:enhance.typeconvergence','Convergence')) ->
bb
head(bb)
b %>%
mutate(term=replace(term,term=='verg.velocity:enhance.typeconvergence','Convergence'),
term=replace(term,term='verg.velocity:enhance.typedivergence','Divergence'),
term=replace(term,term='verg.velocity:enhance.typenone','Slow.Velocity')) ->
bb
b %>%
mutate(term=replace(term,term=='verg.velocity:enhance.typeconvergence','Convergence'),
term=replace(term,term=='verg.velocity:enhance.typedivergence','Divergence'),
term=replace(term,term=='verg.velocity:enhance.typenone','Slow.Velocity')) ->
bb
head(bb)
b %>%
mutate(term=replace(term,term=='verg.velocity:enhance.typeconvergence','Convergence'),
term=replace(term,term=='verg.velocity:enhance.typedivergence','Divergence'),
term=replace(term,term=='verg.velocity:enhance.typenone','Slow.Velocity'),
term=replace(term,term=='(Intercept)','Bias')) ->
bb
head(bb)
bb<- filter(bb,neuron=='Bee-101')
bb
bb$low[term=='Convergence']
bb$low[bb$term=='Convergence']
bb$high[bb$term=='Convergence']<bb$low[bb$term=='Slow.Velocity']
overlapterm<- function(b, A='Convergence',B='Slow.Velocity'){
lowA=b$low[term==A]
highA=b$high[term==A]
lowB=b$low[term==B]
highB=b$high[term==B]
return((lowA<highB & highA > highB) | (lowA<lowB & highA > lowB))
}
overlapterm(bb)
bb
overlapterm<- function(b, A='Convergence',B='Slow.Velocity'){
lowA=b$low[b$term==A]
highA=b$high[b$term==A]
lowB=b$low[b$term==B]
highB=b$high[b$term==B]
return((lowA<highB & highA > highB) | (lowA<lowB & highA > lowB))
}
overlapterm(bb)
overlapterm(bb,'Convergence','Divergence')
mutate(bb,o=overlapterm)
bb %>% mutate(o=overlapterm(.))
b %>% group_by(neuron) %>%
mutate(conv.is.slow=overlapterm(.,'Convergence','Slow.Velocity'),
conv.is.div=overlapterm(.,'Convergence','Divergence')) ->
btest
overlapterm<- function(b, A='Convergence',B='Slow.Velocity'){
lowA=b$low[b$term==A]
highA=b$high[b$term==A]
lowB=b$low[b$term==B]
highB=b$high[b$term==B]
return((lowA<highB & highA > highB) | (lowA<lowB & highA > lowB))
}
b %>% group_by(neuron) %>%
mutate(conv.is.slow=overlapterm(.,A='Convergence',B='Slow.Velocity'),
conv.is.div=overlapterm(.,'Convergence','Divergence')) ->
btest
b %>% group_by(neuron) %>%
mutate(conv.is.slow=overlapterm(.,A='Convergence',B='Slow.Velocity'))
btest
b %>% group_by(neuron) %>%
mutate(conv.is.slow=overlapterm(.,A='Convergence',B='Slow.Velocity'))->
btest
overlapterm(bb)
b %>% group_by(neuron) %>%
mutate(conv.is.slow=overlapterm(.))->
btest
bb %>% group_by(neuron) %>%
mutate(conv.is.slow=overlapterm(.))->
btest
print(bb)
overlapterm<- function(b, A='Convergence',B='Slow.Velocity'){
print(b)
lowA=b$low[b$term==A]
highA=b$high[b$term==A]
lowB=b$low[b$term==B]
highB=b$high[b$term==B]
return((lowA<highB & highA > highB) | (lowA<lowB & highA > lowB))
}
bb %>% group_by(neuron) %>%
mutate(conv.is.slow=overlapterm(.))->
btest
head(btest)
overlapterm<- function(b, A='Convergence',B='Slow.Velocity'){
print(b)
lowA=b$low[b$term==A]
highA=b$high[b$term==A]
lowB=b$low[b$term==B]
highB=b$high[b$term==B]
r=((lowA<highB & highA > highB) | (lowA<lowB & highA > lowB))
print(r)
return(r)
}
bb %>% group_by(neuron) %>%
mutate(conv.is.slow=overlapterm(.))->
btest
b %>% group_by(neuron) %>%
mutate(conv.is.slow=overlapterm(.))->
btest
unique(b$neuron)
b %>%
spread(term,estimate) ->
btest
head(b)
b %>%
spread(term,low) ->
btest
head(btest)
b %>%
mutate(term=replace(term,term=='verg.velocity:enhance.typeconvergence','Convergence'),
term=replace(term,term=='verg.velocity:enhance.typedivergence','Divergence'),
term=replace(term,term=='verg.velocity:enhance.typenone','Slow.Velocity'),
term=replace(term,term=='(Intercept)','Bias'),
zercross=low*high<0)->
b
b %>%
spread(term,low) ->
btest
head(btest)
head(b)
b %>%
select(term,low,neuron)%>%
spread(term,low) ->
btest
b %>%
dplyr::select(term,low,neuron)%>%
spread(term,low) ->
btest
head(btest)
nrow(b)
nrow(btest)
b %>%
dplyr::select(term,low,neuron)%>%
spread(term,low) ->
blow
b %>%
dplyr::select(term,high,neuron)%>%
spread(term,low) ->
bhigh
b %>%
dplyr::select(term,high,neuron)%>%
spread(term,high) ->
bhigh
head(bhigh)
blow-bhigh
bj<- left_join(blow,bhigh)
bj<- left_join(blow,bhigh,by='neuron')
head(bj)
?left_join
b %>%
dplyr::select(term,low,neuron)%>%
spread(term,low) %>%
rename(Convergence.low=Convergence,
Divergence.low=Divergence,
Slow.Velocity.low=Slow.Velocity,
Bias.low=Bias)->
blow
b %>%
dplyr::select(term,high,neuron)%>%
spread(term,high) %>%
rename(Convergence.high=Convergence,
Divergence.high=Divergence,
Slow.Velocity.high=Slow.Velocity,
Bias.high=Bias)->->
bhigh
b %>%
dplyr::select(term,high,neuron)%>%
spread(term,high) %>%
rename(Convergence.high=Convergence,
Divergence.high=Divergence,
Slow.Velocity.high=Slow.Velocity,
Bias.high=Bias)->
bhigh
bj<- left_join(blow,bhigh)
bj<- left_join(blow,bhigh,by='neuron')
head(bj)
5 %in% c(1,10)
5 %in% span(1,10)
5 %in% 1:10
head(bb)
overlapterm(bb)
bb
overlapterm<- function(b, A='Convergence',B='Slow.Velocity'){
# print(b)
lowA=b$low[b$term==A]
highA=b$high[b$term==A]
lowB=b$low[b$term==B]
highB=b$high[b$term==B]
r=((lowA<highB & highA > highB) | (lowA<lowB & highA > lowB))
# print(r)
return(r)
}
overlapterm(bb)
overlapterm(bb,'Convergence','Divergence')
bb<- filter(b,neuron=='Bee-101')
overlapterm(bb,'Convergence','Divergence')
b %>% group_by(neuron) %>%
mutate(conv.is.slow=overlapterm(.))->
btest
unique(b$neuron)
overlapterm(b,'Convergence','Divergence')
b %>%
# group_by(neuron) %>%
mutate(conv.is.slow=overlapterm(.))->
btest
b %>%
group_by(neuron) %>%
summarize(conv.is.slow=overlapterm(.))->
btest
b %>%
summarize(conv.is.slow=overlapterm(.))->
btest
conv.is.slow=overlapterm(b,'Convergence','Divergence')
conv.is.slow=overlapterm(b,'Convergence','Slow.Vergence')
conv.is.div=overlatpterm(b,'Convergence','Divergence')
conv.is.div=overlapterm(b,'Convergence','Divergence')
btest<-data.frame(unique(b$neuron),conv.is.slow,conv.is.div)
conv.is.div
conv.is.slow
conv.is.slow=overlapterm(b,'Convergence','Slow.Velocity')
btest<-data.frame(unique(b$neuron),conv.is.slow,conv.is.div)
head(btest)
head(b)
b<- readRDS('Bootstrap1999results.RDS')
b %>%
mutate(term=replace(term,term=='verg.velocity:enhance.typeconvergence','Convergence'),
term=replace(term,term=='verg.velocity:enhance.typedivergence','Divergence'),
term=replace(term,term=='verg.velocity:enhance.typenone','Slow.Velocity'),
term=replace(term,term=='(Intercept)','Bias'),
zercross=low*high<0)->
b
conv.is.slow=overlapterm(b,'Convergence','Slow.Velocity')
conv.is.div=overlapterm(b,'Convergence','Divergence')
btest<-data.frame(unique(b$neuron),conv.is.slow,conv.is.div)
b<- left_join(b,btest,by='neuron')
head(b)
head(btest)
b<- readRDS('Bootstrap1999results.RDS')
b %>%
mutate(term=replace(term,term=='verg.velocity:enhance.typeconvergence','Convergence'),
term=replace(term,term=='verg.velocity:enhance.typedivergence','Divergence'),
term=replace(term,term=='verg.velocity:enhance.typenone','Slow.Velocity'),
term=replace(term,term=='(Intercept)','Bias'))->
b
bx<- left_join(b,btest,by='neuron')
head(btest)
btest<-data.frame(neuron=unique(b$neuron),conv.is.slow,conv.is.div)
head(btest)
bx<- left_join(b,btest,by='neuron')
head(bx)
bx<- select(bx,term,neuron,m,conv.is.slow,conv.is.div)
bx<- dplyr::select(bx,term,neuron,m,conv.is.slow,conv.is.div)
head(bx)
spread(bx,term,m)
bx<- spread(bx,term,m)
qplot(Convergence,Divergence,data=bx)
qplot(Convergence,Divergence,data=filteR(bx,conv.is.slow))
qplot(Convergence,Divergence,data=filter(bx,conv.is.slow))
qplot(Convergence,Divergence,data=bx,color=conv.is.slow)
qplot(Convergence,Slow.Velocity,data=bx,color=conv.is.slow)
qplot(Convergence,Slow.Velocity,data=bx,color=conv.is.slow)+geom_abline(slope=1)
qplot(Convergence,Slow.Velocity,data=bx,color=conv.is.slow,shape=verg.angle<0)+geom_abline(slope=1)
qplot(Convergence,Slow.Velocity,data=bx,shape=conv.is.slow,color=verg.angle<0)+geom_abline(slope=1)
ggplot(bx)+
geom_point(aes(Convergence,Slow.Velocity,color=verg.angle<0,shape=conv.is.slow),size=3)+
geom_abline(slope=1)
ggplot(bx)+
geom_point(aes(Convergence,Divergence,color=verg.angle<0,shape=conv.is.div),size=3)+
geom_abline(slope=1)
ggplot(bx)+
geom_point(aes(Convergence,Divergence,color=conv.is.div),size=3)+
geom_abline(slope=1)
ggplot(bx)+
geom_point(aes(Convergence,Slow.Velocity,color=conv.is.slow),size=3)+
geom_abline(slope=1)
ggplot(bx)+
geom_point(aes(Convergence,Slow.Velocity,shape=verg.angle<0,color=conv.is.slow),size=3)+
geom_abline(slope=1)
head(b)
head(bx)
filter(bx,verg.angle>0,conv.is.slow)
head(b)
b<- mutate(b,overlap.zero=low*high<1)
head(b)
filter(b,neuron %in% c('Bee-109','Bee-212','Bee-214','Bee-217'))
bz<- b(mutate(m=replace(m,overlap.zero,NA)))
bz<- mutate(b,m=replace(m,overlap.zero,NA)))
bz<- mutate(b,m=replace(m,overlap.zero,NA))
head(bz)
b<- readRDS('Bootstrap1999results.RDS')
b %>%
mutate(term=replace(term,term=='verg.velocity:enhance.typeconvergence','Convergence'),
term=replace(term,term=='verg.velocity:enhance.typedivergence','Divergence'),
term=replace(term,term=='verg.velocity:enhance.typenone','Slow.Velocity'),
term=replace(term,term=='(Intercept)','Bias'),
overlap.zero=low*high<0,
mm=replace(m,overlap.zero,NA))->
b
head(bb)
b<- readRDS('Bootstrap1999results.RDS')
head(b)
b %>%
mutate(term=replace(term,term=='verg.velocity:enhance.typeconvergence','Convergence'),
term=replace(term,term=='verg.velocity:enhance.typedivergence','Divergence'),
term=replace(term,term=='verg.velocity:enhance.typenone','Slow.Velocity'),
term=replace(term,term=='(Intercept)','Bias'),
overlap.zero=low*high<0,
mm=replace(m,overlap.zero,NA))->
b
head(b)
conv.is.slow=overlapterm(b,'Convergence','Slow.Velocity')
conv.is.div=overlapterm(b,'Convergence','Divergence')
btest<-data.frame(neuron=unique(b$neuron),conv.is.slow,conv.is.div)
bx<- left_join(b,btest,by='neuron')
bx<- dplyr::select(bx,term,neuron,mm,conv.is.slow,conv.is.div)
bx<- spread(bx,term,m)
bx<- spread(bx,term,mm)
ggplot(bx)+
geom_point(aes(Convergence,Slow.Velocity,shape=verg.angle<0,color=conv.is.slow),size=3)+
geom_abline(slope=1)
ggplot(bx)+
geom_point(aes(Convergence,Slow.Velocity,color=conv.is.slow),size=3)+
geom_abline(slope=1)
ggplot(bx)+
geom_point(aes(Convergence,Divergence,color=conv.is.div),size=3)+
geom_abline(slope=1)
ggplot(bx)+
geom_point(aes(Divergence,Slow.Velocity,shape=verg.angle<0,color=conv.is.slow),size=3)+
geom_abline(slope=1)
ggplot(bx)+
geom_point(aes(Divergence,Slow.Velocity,shape=verg.angle<0,color=conv.is.slow),size=3)+
geom_abline(slope=-1)
head(t)
ggplot(aes(verg.velocity,sdflag),data=filter(gptest,abs(peak.verg.velocity)<250))+
geom_point(alpha=1/20,size=0.5)+
geom_point(aes(verg.velocity,predicted.sdf),color='orange',alpha=1/20,size=0.5)+
facet_grid(neuron~saccade.type,scales='free')
t<- readRDS('enhancemarked.RDS')
ozette.cells<- c('Ozette-110','Ozette-117','Ozette-118','Ozette-120','Ozette-121')
bee.cells<- c('Bee-103','Bee-108','Bee-207','Bee-211','Bee-215')
desired.cells<- ozette.cells
desired.cells<- bee.cells
tp<- dplyr::filter(t,neuron %in% desired.cells)
tp %>% group_by(neuron) %>%
do(joinsaccades(.,buffer=20,threshold=20))->
tp
