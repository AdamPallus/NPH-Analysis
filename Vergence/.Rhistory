coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(3,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16))+
ylab('Vergence Angle (deg)')
savefilename<- paste('Vergenceangle',i,'.pdf',sep=i)
ggsave(sg,savefilename,height=10,width=10)
}
for (i in c(202,205,215,218)) {
sg<- ggplot(filter(g,dur>500,cellnum ==i)) +
xlab('Time from Saccade Onset (ms)')+
geom_point(aes(counter,verg.angle),color='darkgreen',size=1)+
facet_grid(convergent~neuron,scales='free')+
geom_vline(xintercept=0,color='red',size=1)+
coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(3,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16))+
ylab('Vergence Angle (deg)')
savefilename<- paste('Vergenceangle',i,'.pdf',sep='')
ggsave(sg,savefilename,height=10,width=10)
}
for (i in c(202,205,215,218)) {
sg<- ggplot(filter(g,dur>500,cellnum ==i)) +
xlab('Time from Saccade Onset (ms)')+
geom_point(aes(counter,verg.angle),color='darkgreen',size=1)+
facet_grid(convergent~neuron,scales='free')+
geom_vline(xintercept=0,color='red',size=1)+
coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(3,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16))+
ylab('Vergence Angle (deg)')
savefilename<- paste('Vergenceangle',i,'.pdf',sep='')
ggsave(filename=savefilename,plot=sg, height=10,width=10)
}
ggplot(filter(g,dur>500,cellnum ==i)) +
xlab('Time from Saccade Onset (ms)')+
geom_point(aes(counter,verg.angle),color='darkgreen',size=1)+
facet_grid(convergent~neuron,scales='free')+
geom_vline(xintercept=0,color='red',size=1)+
coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(3,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16))+
ylab('Vergence Angle (deg)')
p %>%  group_by(neuron) %>%
filter(dur>(bufferlength*2+50),
abs(verg.amp)>2,
min.verg.angle>-5) %>%
group_by(neuron,convergent) %>%
mutate(spiketimes=showrasters*counter,
nsaccades=length(unique(sacnum)),
snum=percent_rank(dur),
lagrasters=lag(rasters,25))->
g
ggplot(filter(g,dur>500,cellnum ==i)) +
xlab('Time from Saccade Onset (ms)')+
geom_point(aes(counter,verg.angle),color='darkgreen',size=1)+
facet_grid(convergent~neuron,scales='free')+
geom_vline(xintercept=0,color='red',size=1)+
coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(3,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16))+
ylab('Vergence Angle (deg)')
unique(p$convergent)
qplot(p$verg.amp)
p$convergent<- as.factor(verg.amp>0)
levels(p$convergent)<- c('Divergent','Convergent')
unique(p$convergent)
p$convergent<- as.factor(verg.amp>0)
p$convergent<- as.factor(p$verg.amp>0)
unique(p$convergent)
levels(p$convergent)<- c('Divergent','Convergent')
ggplot(filter(g,dur>500,cellnum ==i)) +
xlab('Time from Saccade Onset (ms)')+
geom_point(aes(counter,verg.angle),color='darkgreen',size=1)+
facet_grid(convergent~neuron)+
geom_vline(xintercept=0,color='red',size=1)+
coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(3,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16))+
ylab('Vergence Angle (deg)')
p %>%  group_by(neuron) %>%
filter(dur>(bufferlength*2+50),
abs(verg.amp)>2,
min.verg.angle> -5) %>%
group_by(neuron,convergent) %>%
mutate(spiketimes=showrasters*counter,
nsaccades=length(unique(sacnum)),
snum=percent_rank(dur),
lagrasters=lag(rasters,25))->
g
ggplot(filter(g,dur>500,cellnum ==i)) +
xlab('Time from Saccade Onset (ms)')+
geom_point(aes(counter,verg.angle),color='darkgreen',size=1)+
facet_grid(convergent~neuron)+
geom_vline(xintercept=0,color='red',size=1)+
coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(3,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16))+
ylab('Vergence Angle (deg)')
for (i in c(202,205,215,218)) {
sg<- ggplot(filter(g,dur>500,cellnum ==i)) +
xlab('Time from Saccade Onset (ms)')+
geom_point(aes(counter,verg.angle),color='darkgreen',size=1)+
facet_grid(convergent~neuron)+
geom_vline(xintercept=0,color='red',size=1)+
coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(3,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16))+
ylab('Vergence Angle (deg)')
savefilename<- paste('Vergenceangle',i,'.pdf',sep='')
ggsave(filename=savefilename,plot=sg, height=10,width=10)
}
library(dplyr)
library(ggplot2)
source('~/GitHub/Vergence/joinsaccades.R')
source('~/GitHub/Vergence/Adamhelperfunctions.R')
t<- readRDS('NRTPt.RDS')
bufferlength<- 200
t%>%
# filter(as.numeric(cellnum)>200) %>%
filter(as.numeric(cellnum) %in% c(202,205,215, 218)) %>%
group_by(neuron) %>%
do(joinsaccades(.,buffer=bufferlength,threshold=20))->
d
d %>%
group_by(neuron) %>%
mutate(issaccade=!is.na(sacnum)) %>%
filter(issaccade) %>%
group_by(neuron,sacnum) %>%
mutate(dur=n(),
peak.conj.velocity=maxabs(conj.velocity),
peak.R.H= maxabs(rev),
peak.R.V= maxabs(revV),
peak.L.H= maxabs(lev),
peak.L.V= maxabs(levV),
R.H.Amp=rep[n()]-rep[1],
L.H.Amp=lep[n()]-lep[1],
R.V.Amp=repV[n()]-repV[1],
L.V.Amp=lepV[n()]-lepV[1],
r.angle=atan2(R.V.Amp,R.H.Amp)*180/pi,
r.amp=sqrt(R.H.Amp^2+R.V.Amp^2),
nspikes=sum(rasters),
vect.amp= (sqrt(R.H.Amp^2+R.V.Amp^2)+sqrt(L.H.Amp^2+L.V.Amp^2))/2,
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)),
verg.amp=verg.angle[n()-bufferlength]-verg.angle[bufferlength+1],
peak.verg.velocity= maxabs(verg.velocity),
min.verg.trans = min(verg.velocity),
max.verg.trans = max(verg.velocity),
min.verg.angle=min(verg.angle),
maxfr=max(sdf),
counter=time-time[1]-bufferlength,
verg.change=verg.angle-mean(verg.angle[1:50]),
# verg.amp= last(verg.angle)-first(verg.angle),
verg.amp= verg.angle[dur-bufferlength]-verg.angle[bufferlength],
showrasters=replace(rasters,rasters<1,NA),
convergent=as.factor(verg.amp>0))->
p
p$convergent<- as.factor(verg.amp>0)
levels(p$convergent)<- c('Divergent','Convergent')
p %>%  group_by(neuron) %>%
filter(dur>(bufferlength*2+50),
abs(verg.amp)>2,
min.verg.angle> -5) %>%
group_by(neuron,convergent) %>%
mutate(spiketimes=showrasters*counter,
nsaccades=length(unique(sacnum)),
snum=percent_rank(dur),
lagrasters=lag(rasters,25))->
g
for (i in c(202,205,215,218)) {
sg<- ggplot(filter(g,dur>500,cellnum ==i)) +
xlab('Time from Saccade Onset (ms)')+
geom_point(aes(counter,verg.angle),color='darkgreen',size=1)+
facet_grid(convergent~neuron)+
geom_vline(xintercept=0,color='red',size=1)+
coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(3,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16),
axis.title.y=element_text(size=16))+
ylab('Vergence Angle (deg)')
savefilename<- paste('Vergenceangle',i,'.eps',sep='')
ggsave(filename=savefilename,plot=sg, height=10,width=10)
}
d<-NULL
p<-NULL
t<-NULL
library(R.matlab)
filepath<- 'C:\\Users\\setup\Desktop\\NRTP Vergence\\Bee_Mark_Vergence 2016.04.06\\Bee_Mark_Vergence_2016.04.06_1214_Vergence-sorted.mat'
library(R.matlab)
filepath<- 'C:\\Users\\setup\\Desktop\\NRTP Vergence\\Bee_Mark_Vergence 2016.04.06\\Bee_Mark_Vergence_2016.04.06_1214_Vergence-sorted.mat'
m<- readMat(filepath)
spiketimes<- as.vector(m$spiketimes)
rep<- m$H.Eye['values',,]
lep<- m$H.Eye2['values',,]
repV<-m$V.Eye['values',,]
lepV<-m$V.Eye2['values',,]
t$rasters<- 0
t$rasters[spiketimes]=1
t$rasters[t$time %in% spiketimes]<- 1
class(t$rastesr)
class(t$rasters)
class(t)
t<- data.frame(rep=rep$values,lep=lep$values,repV=repV$values,lepV=lepV$values)
t<- mutate(t,time=row_number())
t$rasters<- 0
t$rasters[t$time %in% spiketimes]<- 1
library(dplyr)
t<- data.frame(rep=rep$values,lep=lep$values,repV=repV$values,lepV=lepV$values)
t<- mutate(t,time=row_number())
t$rasters<- 0
t$rasters[t$time %in% spiketimes]<- 1
head(t)
sum(t$rasters)
length(spiketimes)
ind<- t$time %in% spiketimes
nrow(ind)
head(ind)
t$rasters<- replace(t$rasters, t$time %in% spiketimes,1]
t$rasters<- replace(t$rasters, t$time %in% spiketimes,1])
t$rasters<- replace(t$rasters, t$time %in% spiketimes,1)
head(t)
sum(t$rasters)
library(ggplot)
library(ggplot2)
qplot(time,rasters,data=t)
qplot(spiketimes)
class(spiketimes)
spiketimes[100]
t$rasters[time %in% round(spiketimes)]<- 1
t$rasters[t$time %in% round(spiketimes)]<- 1
sum(t$rasters)
max(t$time)
max(t$spiketimes)
max(spiketimes)
max(spiketimes)/max(t$time)
t$rasters<- 0
t$rasters[t$time %in% round(spiketimes/50)]<- 1
sum(t$rasters)
length(spiketimes)
t$rasters<- 0
t$rasters[t$time %in% floor(spiketimes/50)]<- 1
sum(t$rasters)
length(spiketimes)
head(t)
qplot(time,rep,data=t)
t<- readRDS('NRTPt.RDS')
t%>%
group_by(neuron) %>%
#   mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2,100),
#          isfixation=s<0,
#          s=abs(s),
#          sdf=spikedensity(temp$rasters,sd=20)) %>%
filter(isfixation == F) %>%
group_by(neuron,s) %>%
summarize(dur=n(),
cellnum=cellnum[1],
peak.R.H= maxabs(rev),
peak.R.V= maxabs(revV),
peak.L.H= maxabs(lev),
peak.L.V= maxabs(levV),
R.H.Amp=rep[n()]-rep[1],
L.H.Amp=lep[n()]-lep[1],
R.V.Amp=repV[n()]-repV[1],
L.V.Amp=lepV[n()]-lepV[1],
r.angle=atan2(R.V.Amp,R.H.Amp)*180/pi,
r.amp=sqrt(R.H.Amp^2+R.V.Amp^2),
nspikes=sum(rasters),
vect.amp= (sqrt(R.H.Amp^2+R.V.Amp^2)+sqrt(L.H.Amp^2+L.V.Amp^2))/2,
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)),
verg.amp=verg.angle[n()]-verg.angle[1],
peak.verg.velocity= maxabs(verg.velocity),
min.verg.velocity = min(verg.velocity),
max.verg.velocity = max(verg.velocity),
max.verg.angle=max(verg.angle),
maxfr=max(sdf))%>%
group_by(neuron) %>%
mutate(saccade.type='version',
saccade.type=replace(saccade.type, verg.amp > 2,'convergence'),
saccade.type=replace(saccade.type, verg.amp < -2, 'divergence'))->
p
p %>%
# filter(peak.verg.velocity>0) %>%
group_by(neuron,cellnum) %>%
# do(b=calc.relimp(lm(maxfr~verg.amp+peak.verg.velocity,data=.)),
# bic=regsubsets(maxfr~verg.amp+peak.verg.velocity,.)) ->
do(b=calc.relimp(lm(maxfr~max.verg.angle+max.verg.velocity,data=.)),
bic=regsubsets(maxfr~max.verg.angle+max.verg.velocity,.)) ->
bb
r <- data.frame()
r2 <- NULL
for (i in 1:nrow(bb)){
b<- bb$b[[i]]$lmg
r<-rbind(r,b)
r2<- c(r2,bb$b[[i]]$R2)
}
r$neuron<-bb$neuron
r$cellnum<- bb$cellnum
r$R2<- r2
names(r)<- c(names(bb$b[[1]]$lmg),'neuron','cellnum','R2')
r<- mutate(r, SOA=as.numeric(cellnum)>100)
ggplot(aes(max.verg.angle,max.verg.velocity),data=r)+
# geom_point(size=4,aes(color=R2,shape=verg.amp>max.verg.velocity))+
geom_point(size=4,aes(color=R2,shape=SOA))+
# geom_point(size=4,aes(color=R2))+
scale_color_gradient(low='blue',high='red')+
# geom_point(size=4,aes(color=verg.amp>max.verg.velocity))+
geom_text(aes(label=neuron),check_overlap=FALSE,size=3,vjust=-1)+
geom_abline(intercept=0,slope=1)+
# coord_cartesian(xlim=c(-0.5,1),ylim=c(-0.5,1))+
theme(legend.position="top")+
ggtitle('Relative Importance')
spikedensity<-function (rasters,sd=100) {
gsize<- sd*10
g<-dnorm(-gsize:gsize,mean=0,sd=sd)
sdf<-convolve(rasters,g,type="open")
sdf<-sdf[gsize:(length(sdf)-(gsize+1))]*1000
sdf
}
dynamiclead<-function(p,lags=seq(10,300,by=10)) {
rsq<-NULL
for (i in 1:length(lags)) {
if (lags[i] > 0){
p$sdflag<-dplyr::lag(p$sdf,lags[i])
}
else{
p$sdflag<-dplyr::lead(p$sdf,lags[i]*-1)
}
rsq[i]<- summary(lm(sdflag~rep+lep+repV+lepV,data=p))$r.squared
}
#return(rsq)
return(lags[rsq==max(rsq)])
}
findSaccades<-function(ev,threshold=40){
mindur<-50
i<-which(abs(ev)>threshold) #find all the times when speed > threshold
sacoff<-which(diff(i)>mindur) #minimum duration of an accepted saccade
sacon<-c(1,sacoff+1) #first saccade
sacoff<-c(sacoff,length(i)) #end of last saccade
saccade.onset<-i[sacon] #get actual times
saccade.offset<-i[sacoff]
return(data.frame(saccade.onset,saccade.offset))
}
markSaccades<-function(ev,buffer=15,threshold=40){
#this function finds and marks saccades given a velocity input
stimes<-findSaccades(ev,threshold)
#remove saccades without enough data at the end of the file, based on buffer size
toolong<- stimes$saccade.offset> length(ev)-buffer
tooshort<- stimes$saccade.onset<buffer+1
stimes<- filter(stimes, !tooshort, !toolong)
nsaccades=nrow(stimes)
stimes$saccade.onset=stimes$saccade.onset-buffer
stimes$saccade.offset=stimes$saccade.offset+buffer
s<-1:length(ev)*0
for (k in 1:nsaccades){
s[stimes$saccade.onset[k]:stimes$saccade.offset[k]]<- k
if(k>1){
s[stimes$saccade.offset[k-1]:stimes$saccade.onset[k]]<-(k*-1)
}
}
s[1:stimes$saccade.onset[1]]<- -1
s[stimes$saccade.offset[nrow(stimes)]:length(s)]<- (nrow(stimes)*-1)-1
return(s)
}
parabolicdiff <- function(pos,n=7){
q <- sum(2*((1:n)^2))
convoutput<- convolve(pos,c(-n:-1, 1:n),type="open")
convoutput<- convoutput[(n*2):(length(pos)-((n*2)+1))]
vels<- c(array(convoutput[1],dim=n*2),convoutput,array(convoutput[length(convoutput)],dim=n*2))
vels <- vels/q*1000
}
maxabs<- function(x){
m1<-max(x,na.rm=T)
m2<-min(x,na.rm=T)
if (abs(m1)>abs(m2)) {
return(m1)
} else{
return(m2)
}
}
t%>%
group_by(neuron) %>%
#   mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2,100),
#          isfixation=s<0,
#          s=abs(s),
#          sdf=spikedensity(temp$rasters,sd=20)) %>%
filter(isfixation == F) %>%
group_by(neuron,s) %>%
summarize(dur=n(),
cellnum=cellnum[1],
peak.R.H= maxabs(rev),
peak.R.V= maxabs(revV),
peak.L.H= maxabs(lev),
peak.L.V= maxabs(levV),
R.H.Amp=rep[n()]-rep[1],
L.H.Amp=lep[n()]-lep[1],
R.V.Amp=repV[n()]-repV[1],
L.V.Amp=lepV[n()]-lepV[1],
r.angle=atan2(R.V.Amp,R.H.Amp)*180/pi,
r.amp=sqrt(R.H.Amp^2+R.V.Amp^2),
nspikes=sum(rasters),
vect.amp= (sqrt(R.H.Amp^2+R.V.Amp^2)+sqrt(L.H.Amp^2+L.V.Amp^2))/2,
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)),
verg.amp=verg.angle[n()]-verg.angle[1],
peak.verg.velocity= maxabs(verg.velocity),
min.verg.velocity = min(verg.velocity),
max.verg.velocity = max(verg.velocity),
max.verg.angle=max(verg.angle),
maxfr=max(sdf))%>%
group_by(neuron) %>%
mutate(saccade.type='version',
saccade.type=replace(saccade.type, verg.amp > 2,'convergence'),
saccade.type=replace(saccade.type, verg.amp < -2, 'divergence'))->
p
p %>%
# filter(peak.verg.velocity>0) %>%
group_by(neuron,cellnum) %>%
# do(b=calc.relimp(lm(maxfr~verg.amp+peak.verg.velocity,data=.)),
# bic=regsubsets(maxfr~verg.amp+peak.verg.velocity,.)) ->
do(b=calc.relimp(lm(maxfr~max.verg.angle+max.verg.velocity,data=.)),
bic=regsubsets(maxfr~max.verg.angle+max.verg.velocity,.)) ->
bb
r <- data.frame()
r2 <- NULL
for (i in 1:nrow(bb)){
b<- bb$b[[i]]$lmg
r<-rbind(r,b)
r2<- c(r2,bb$b[[i]]$R2)
}
r$neuron<-bb$neuron
r$cellnum<- bb$cellnum
r$R2<- r2
names(r)<- c(names(bb$b[[1]]$lmg),'neuron','cellnum','R2')
r<- mutate(r, SOA=as.numeric(cellnum)>100)
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
# library(broom)
# library(grid)
library(relaimpo)
library(leaps)
#library(data.table)
library(stringr)
head(p)
p %>%
# filter(peak.verg.velocity>0) %>%
group_by(neuron,cellnum) %>%
# do(b=calc.relimp(lm(maxfr~verg.amp+peak.verg.velocity,data=.)),
# bic=regsubsets(maxfr~verg.amp+peak.verg.velocity,.)) ->
do(b=calc.relimp(lm(maxfr~max.verg.angle+max.verg.velocity,data=.)),
bic=regsubsets(maxfr~max.verg.angle+max.verg.velocity,.)) ->
bb
r <- data.frame()
r2 <- NULL
for (i in 1:nrow(bb)){
b<- bb$b[[i]]$lmg
r<-rbind(r,b)
r2<- c(r2,bb$b[[i]]$R2)
}
r$neuron<-bb$neuron
r$cellnum<- bb$cellnum
r$R2<- r2
names(r)<- c(names(bb$b[[1]]$lmg),'neuron','cellnum','R2')
r<- readRDS('NRTPr.RDS')
ggplot(aes(max.verg.angle,max.verg.velocity),data=r)+
# geom_point(size=4,aes(color=R2,shape=verg.amp>max.verg.velocity))+
geom_point(size=4,aes(color=R2,shape=SOA))+
# geom_point(size=4,aes(color=R2))+
scale_color_gradient(low='blue',high='red')+
# geom_point(size=4,aes(color=verg.amp>max.verg.velocity))+
geom_text(aes(label=neuron),check_overlap=FALSE,size=3,vjust=-1)+
geom_abline(intercept=0,slope=1)+
# coord_cartesian(xlim=c(-0.5,1),ylim=c(-0.5,1))+
theme(legend.position="top")+
ggtitle('Relative Importance')
ggsave('RelativeImportancePositivePeakVergenceVelocity.pdf')
ggsave('RelativeImportancePositivePeakVergenceVelocity.pdf',height=10,width=10)
ggsave('RelativeImportancePositivePeakVergenceVelocity.pdf',height=11,width=10)
ggplot(aes(max.verg.angle,max.verg.velocity),data=r)+
# geom_point(size=4,aes(color=R2,shape=verg.amp>max.verg.velocity))+
geom_point(size=4,aes(color=SOA,shape=SOA))+
# geom_point(size=4,aes(color=R2))+
# geom_point(size=4,aes(color=verg.amp>max.verg.velocity))+
geom_text(aes(label=neuron),check_overlap=FALSE,size=3,vjust=-1)+
geom_abline(intercept=0,slope=1)+
# coord_cartesian(xlim=c(-0.5,1),ylim=c(-0.5,1))+
theme(legend.position="top")+
ggtitle('Relative Importance')
ggsave('RelativeImportancePositivePeakVergenceVelocity2.pdf',height=11,width=10)
