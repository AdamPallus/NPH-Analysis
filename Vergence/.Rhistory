do(expandSaccades(.,buffer=80))->
tx
memory.size()
t %>%
group_by(neuron) %>%
do(expandSaccades(.,buffer=80))->
t
names(t)
memory.size()
?memory.size()
?memory.size(max=TRUE)
memory.size(max=TRUE)
x<-NULL
tx<-NULL
memory.size()
tcount<-NULL
tt<-NULL
memory.size()
t %>%
group_by(neuron,dsnum_extended) %>%
summarize(post.saccade=mean(sdf10[n()-50:n()]))->
ts
head(ts)
t %>%
group_by(neuron,dsnum_extended) %>%
summarize(post.saccade=mean(sdf10[n()-50:n()]),
during.saccade=max(sdf10[1:n()-80]))->
ts
t %>%
group_by(neuron,dsnum_extended) %>%
summarize(post.saccade=mean(sdf10[n()-50:n()]),
# during.saccade=max(sdf10[1:n()-80]),
dur=n())->
ts
min(ts$dur)
t %>%
filter(dsnum_extended>0) %>%
group_by(neuron,dsnum_extended) %>%
summarize(post.saccade=mean(sdf10[n()-50:n()]),
# during.saccade=max(sdf10[1:n()-80]),
dur=n())->
ts
min(ts$dur)
qplot(ts$dur)
max(ts$dur)
t %>%
filter(dsnum_extended>0,!is.na(dsnum_extended)) %>%
group_by(neuron,dsnum_extended) %>%
summarize(post.saccade=mean(sdf10[n()-50:n()]),
# during.saccade=max(sdf10[1:n()-80]),
dur=n())->
ts
qplot(ts$dur)
max(ts$dur)
arrange(ts,desc(dur))
arrange(ts,dur)
max(ts$dsnum_extended)
max(t$dsnum)
min(t$dsnum_extended)
min(t$dsnum_extended,na.rm=T)
max(t$dsnum_extended,na.rm=T)
filter(t,neuron=='DC-901',dsnum==2588)
max(filter(t,neuron=='DC-901',dsnum==2588)$time)
max(filter(t,neuron=='DC-901')$time)
expandSaccades<- function(tt,buffer=80){
maxtime<- max(tt$time)
tt %>%
filter(dsnum>0) %>%
group_by(dsnum) %>%
summarize(saccade.end=last(time),
saccade.start=first(time)) %>%
filter(saccade.end+buffer<maxtime) %>%
mutate(saccade.end=saccade.end+80)->
tcount
tcount$saccade.end<-tcount$saccade.end+buffer
jsac<- function(stimes){
df<- data.frame(time=stimes[['saccade.start']]:stimes[['saccade.end']],
dsnum_extended=stimes[['dsnum']])
return(df)
}
x<-rbindlist(apply(tcount,1,jsac))
tt<- left_join(tt,x,by='time')
}
t %>%
filter(dsnum_extended>0) %>%
group_by(neuron,dsnum_extended) %>%
mutate(durEXT=n()) %>%
filter(durEXT>80) %>%
summarize(post.saccade=mean(sdf10[n()-50:n()]),
during.saccade=max(sdf10[1:n()-80]),
dur=n())->
ts
t %>%
filter(dsnum_extended>0) %>%
group_by(neuron,dsnum_extended) %>%
mutate(durEXT=n()) %>%
filter(durEXT>80) %>%
summarize(post.saccade=mean(sdf10[n()-50:n()]),
during.saccade=max(sdf10[1:(n()-80)]),
dur=n())->
ts
head(TS)
head(ts)
qplot(ts$dur)
arrange(ts,desc(dur))
t %>%
filter(dsnum_extended>0) %>%
group_by(neuron,dsnum_extended) %>%
mutate(durEXT=n()) %>%
filter(durEXT>80,durEXT<300) %>%
summarize(post.saccade=mean(sdf10[n()-50:n()]),
during.saccade=max(sdf10[1:(n()-80)]),
dur=n())->
ts
qplot(ts$dur)
ggplot(ts) +
geom_point(aes(post.saccade,during.saccade))
ggplot(ts) +
geom_point(aes(post.saccade,during.saccade))+
geom_abline(color='red')
ggplot(ts) +
geom_point(aes(post.saccade,during.saccade))+
geom_abline(color='red')+
facet_wrap(~monkey,ncols=1)
ggplot(ts) +
geom_point(aes(post.saccade,during.saccade))+
geom_abline(color='red')+
facet_wrap(~monkey,ncol = 1)
t %>%
filter(dsnum_extended>0) %>%
group_by(monkey,neuron,dsnum_extended) %>%
mutate(durEXT=n()) %>%
filter(durEXT>80,durEXT<300) %>%
summarize(post.saccade=mean(sdf10[n()-50:n()]),
during.saccade=max(sdf10[1:(n()-80)]),
dur=n())->
ts
ggplot(ts) +
geom_point(aes(post.saccade,during.saccade))+
geom_abline(color='red')+
facet_wrap(~monkey,ncol = 1)
t %>%
filter(dsnum_extended>0) %>%
group_by(monkey,neuron,dsnum_extended) %>%
mutate(durEXT=n()) %>%
filter(durEXT>80,durEXT<300) %>%
summarize(post.saccade=mean(sdf10[(n()-50):n()]),
during.saccade=max(sdf10[1:(n()-80)]),
dur=n())->
ts
ggplot(ts) +
geom_point(aes(post.saccade,during.saccade))+
geom_abline(color='red')+
facet_wrap(~monkey,ncol = 1)
t%>%
filter(dsnum>0) %>%
group_by(monkey,neuron,dsnum_extended) %>%
summarize(dur=n(),
peak.during.saccade=max(sdf10[1:(n()-80)]),
post.saccade=mean(sdf10[(n()-50):n()]),
burst.index= peak.during.saccade-post.saccade,
conj.vert=first(conj.vert),
upward=conj.vert>0,
sd.conj.velocity=sd(conj.velocity),
mean.conj.velocity=mean(conj.velocity),
sd.verg.velocity=sd(verg.velocity),
spread=max(conj.velocity)-min(conj.velocity),
qrange=quantile(conj.velocity,0.975)-quantile(conj.velocity,0.025),
R.H.Amp=last(rep)-first(rep),
R.V.Amp=last(repV)-first(repV),
L.H.Amp=last(lep)-first(lep),
L.V.Amp=last(lepV)-first(lepV),
disjunctiveH=sign(R.H.Amp*L.H.Amp)<0,
disjunctiveV=sign(R.V.Amp*L.V.Amp)<0,
conj.H.Amp=(R.H.Amp+L.H.Amp)/2,
conj.V.Amp=(R.V.Amp+L.V.Amp)/2,
peak.conj.velocity=maxabs(conj.velocity),
peak.H.Velocity=maxabs((rev+lev)/2),
peak.V.Velocity=maxabs((revV+levV)/2),
peak.RH.Velocity=maxabs(rev),
peak.RV.Velocity=maxabs(revV),
peak.LH.Velocity=maxabs(lev),
peak.LV.Velocity=maxabs(levV),
peakFR=max(sdf10),
nspk=sum(rasters),
avgFR=nspk/dur*1000,
r.amp=sqrt(conj.H.Amp^2+conj.V.Amp^2),
asleep=sd.conj.velocity>7.5 || dur>2000) ->
BI
t%>%
filter(dsnum>0) %>%
group_by(monkey,neuron,dsnum_extended) %>%
filter(n()>80,n()<300) %>%
summarize(dur=n(),
peak.during.saccade=max(sdf10[1:(n()-80)]),
post.saccade=mean(sdf10[(n()-50):n()]),
burst.index= peak.during.saccade-post.saccade,
conj.vert=first(conj.vert),
upward=conj.vert>0,
sd.conj.velocity=sd(conj.velocity),
mean.conj.velocity=mean(conj.velocity),
sd.verg.velocity=sd(verg.velocity),
spread=max(conj.velocity)-min(conj.velocity),
qrange=quantile(conj.velocity,0.975)-quantile(conj.velocity,0.025),
R.H.Amp=last(rep)-first(rep),
R.V.Amp=last(repV)-first(repV),
L.H.Amp=last(lep)-first(lep),
L.V.Amp=last(lepV)-first(lepV),
disjunctiveH=sign(R.H.Amp*L.H.Amp)<0,
disjunctiveV=sign(R.V.Amp*L.V.Amp)<0,
conj.H.Amp=(R.H.Amp+L.H.Amp)/2,
conj.V.Amp=(R.V.Amp+L.V.Amp)/2,
peak.conj.velocity=maxabs(conj.velocity),
peak.H.Velocity=maxabs((rev+lev)/2),
peak.V.Velocity=maxabs((revV+levV)/2),
peak.RH.Velocity=maxabs(rev),
peak.RV.Velocity=maxabs(revV),
peak.LH.Velocity=maxabs(lev),
peak.LV.Velocity=maxabs(levV),
peakFR=max(sdf10),
nspk=sum(rasters),
avgFR=nspk/dur*1000,
r.amp=sqrt(conj.H.Amp^2+conj.V.Amp^2),
asleep=sd.conj.velocity>7.5 || dur>2000) ->
BI
BI %>%
filter(abs(conj.V.Amp)>5,abs(conj.V.Amp)<40)%>%
ggplot()+
stat_smooth(aes(conj.V.Amp,peak.during.saccade-post.saccade,group=neuron),method='lm',se=FALSE)+
facet_wrap(~monkey)
saveRDS(t,'INCsaccadesmarkedBI.RDS')
memory.limit()
t%>%
filter(dsnum>0) %>%
group_by(monkey,neuron,dsnum_extended) %>%
filter(n()>80,n()<300) %>%
summarize(dur=n(),
peak.during.saccade=max(sdf10[1:(n()-80)]),
post.saccade=mean(sdf10[(n()-50):n()]),
burst.index= peak.during.saccade-post.saccade,
conj.vert=first(conj.vert),
upward=conj.vert>0,
sd.conj.velocity=sd(conj.velocity),
mean.conj.velocity=mean(conj.velocity),
sd.verg.velocity=sd(verg.velocity),
spread=max(conj.velocity)-min(conj.velocity),
qrange=quantile(conj.velocity,0.975)-quantile(conj.velocity,0.025),
R.H.Amp=last(rep)-first(rep),
R.V.Amp=last(repV)-first(repV),
L.H.Amp=last(lep)-first(lep),
L.V.Amp=last(lepV)-first(lepV),
disjunctiveH=sign(R.H.Amp*L.H.Amp)<0,
disjunctiveV=sign(R.V.Amp*L.V.Amp)<0,
conj.H.Amp=(R.H.Amp+L.H.Amp)/2,
conj.V.Amp=(R.V.Amp+L.V.Amp)/2,
peak.conj.velocity=maxabs(conj.velocity),
peak.H.Velocity=maxabs((rev+lev)/2),
peak.V.Velocity=maxabs((revV+levV)/2),
peak.RH.Velocity=maxabs(rev),
peak.RV.Velocity=maxabs(revV),
peak.LH.Velocity=maxabs(lev),
peak.LV.Velocity=maxabs(levV),
peakFR=max(sdf10),
nspk=sum(rasters),
avgFR=nspk/dur*1000,
r.amp=sqrt(conj.H.Amp^2+conj.V.Amp^2),
asleep=sd.conj.velocity>7.5 || dur>2000) ->
zsp
burst <- filter(zsp,dur<150)
#measure each saccade
burst %>%
group_by(neuron,dsnum) %>%
filter(abs(peak.V.Velocity)<1000,
abs(peak.H.Velocity)<1000) %>%
summarize_at(vars(peakFR,
peak.V.Velocity,
peak.H.Velocity,
R.H.Amp,
L.H.Amp,
R.V.Amp,
L.V.Amp,
avgFR,
disjunctiveH,
disjunctiveV,
burst.index,
post.saccade),
funs(first)) %>%
separate(neuron,c('monkey','cellnum'),remove=FALSE)->
bvelplot
t%>%
filter(dsnum>0) %>%
group_by(monkey,neuron,dsnum_extended) %>%
filter(n()>80,n()<300) %>%
summarize(dur=n(),
dsnum=first(dsnum),
peak.during.saccade=max(sdf10[1:(n()-80)]),
post.saccade=mean(sdf10[(n()-50):n()]),
burst.index= peak.during.saccade-post.saccade,
conj.vert=first(conj.vert),
upward=conj.vert>0,
sd.conj.velocity=sd(conj.velocity),
mean.conj.velocity=mean(conj.velocity),
sd.verg.velocity=sd(verg.velocity),
spread=max(conj.velocity)-min(conj.velocity),
qrange=quantile(conj.velocity,0.975)-quantile(conj.velocity,0.025),
R.H.Amp=last(rep)-first(rep),
R.V.Amp=last(repV)-first(repV),
L.H.Amp=last(lep)-first(lep),
L.V.Amp=last(lepV)-first(lepV),
disjunctiveH=sign(R.H.Amp*L.H.Amp)<0,
disjunctiveV=sign(R.V.Amp*L.V.Amp)<0,
conj.H.Amp=(R.H.Amp+L.H.Amp)/2,
conj.V.Amp=(R.V.Amp+L.V.Amp)/2,
peak.conj.velocity=maxabs(conj.velocity),
peak.H.Velocity=maxabs((rev+lev)/2),
peak.V.Velocity=maxabs((revV+levV)/2),
peak.RH.Velocity=maxabs(rev),
peak.RV.Velocity=maxabs(revV),
peak.LH.Velocity=maxabs(lev),
peak.LV.Velocity=maxabs(levV),
peakFR=max(sdf10),
nspk=sum(rasters),
avgFR=nspk/dur*1000,
r.amp=sqrt(conj.H.Amp^2+conj.V.Amp^2),
asleep=sd.conj.velocity>7.5 || dur>2000) ->
zsp
burst <- filter(zsp,dur<150)
#measure each saccade
burst %>%
group_by(neuron,dsnum) %>%
filter(abs(peak.V.Velocity)<1000,
abs(peak.H.Velocity)<1000) %>%
summarize_at(vars(peakFR,
peak.V.Velocity,
peak.H.Velocity,
R.H.Amp,
L.H.Amp,
R.V.Amp,
L.V.Amp,
avgFR,
disjunctiveH,
disjunctiveV,
burst.index,
post.saccade),
funs(first)) %>%
separate(neuron,c('monkey','cellnum'),remove=FALSE)->
bvelplot
#fit a model for each neuron
burst %>%
group_by(neuron) %>%
do(tidy(lm(peakFR~peak.H.Velocity+peak.V.Velocity,data=.))) %>%
mutate(term=replace(term,term=='(Intercept)','b')) %>%
select(term,estimate) %>%
spread(term,estimate) %>%
separate(neuron,c('monkey','cellnum'),remove=FALSE)->
bvellm
ver.plot<-bvelplot%>%
ggplot()+
geom_point(aes(peak.V.Velocity,peakFR-post.saccade,color=monkey),alpha=0.1)+
stat_smooth(aes(peak.V.Velocity,peakFR-post.saccade,group=neuron),color='black',method='lm',se = FALSE)+
facet_wrap(~monkey)+
ylim(0,NA)+
xlab('Peak Vertical Eye Velocity (deg/s)')+
ylab('Firing Rate during Saccade (spk/s)')+
theme(legend.position = 'none')
hor.plot<-bvelplot%>%
ggplot()+
geom_point(aes(peak.H.Velocity,peakFR-post.saccade,color=monkey),alpha=0.1)+
stat_smooth(aes(peak.H.Velocity,peakFR-post.saccade,group=neuron),color='black',method='lm',se = FALSE)+
facet_wrap(~monkey)+
ylim(0,NA)+
xlab('Peak Horizontal Eye Velocity (deg/s)')+
ylab('Firing Rate during Saccade (spk/s)')+
theme(legend.position = 'bottom')
multiplot(ver.plot,hor.plot)
bvellm %>%
select(neuron,peak.V.Velocity,peak.H.Velocity) %>%
arrange(desc(abs(peak.V.Velocity))) %>%
head() %>%
kable()
plotsaccades<-function(bvelplot,cellname,plotColor='blue'){
multiplot(
bvelplot%>%
filter(neuron==cellname)%>%
ggplot()+
geom_point(aes(peak.V.Velocity,avgFR),alpha=0.8,color=plotColor)+
stat_smooth(aes(peak.V.Velocity,avgFR,group=neuron),color='black',method='lm',se = FALSE)+
ylim(0,NA)+
xlab('Peak Vertical Eye Velocity (deg/s)')+
ylab('Firing Rate during Saccade\n(spk/s)')+
ggtitle(cellname)
,
bvelplot%>%
filter(neuron==cellname)%>%
ggplot()+
geom_point(aes(peak.H.Velocity,avgFR),alpha=0.8,color=plotColor)+
stat_smooth(aes(peak.H.Velocity,avgFR,group=neuron),color='black',method='lm',se = FALSE)+
ylim(0,NA)+
xlab('Peak Horizontal Eye Velocity (deg/s)')+
ylab('Firing Rate during Saccade/n(spk/s)')
)
}
plotsaccades(bvelplot,'Kopachuck-906')
# plotsaccades(bvelplot,'Bee-116')
plotsaccades(bvelplot,'Bee-110')
plotsaccades(bvelplot,'Kopachuck-905')
# bvellmplot %>%
#   filter(neuron=='Kopachuck-905') %>%
#   ggplot()+
#   geom_point(aes(peak.H.Velocity,peak.V.Velocity,color=avgFR),size=3)
multiplot(plotlist=show1cell(zp,zmc,'Kopachuck-905',color1='purple'),cols=2)
#The next step here will be to analyze the preferred direction based on the burst. There should be some effort to distinguish burst-tonic cells from tonic-only or burst-only cells. I'm not sure that we have any burst only cells in this collection, but the algorithm should be able to distinguish them if they should exist. I think I have the code written already to do a lot of this...
#There should be some effort to assess for the possiblity of monocular - bring in some of the analysis I did on the disjunctive saccades.
#Write up the introduction and methods
measureCellSaccades<-function(x){
#first I'm just going to make this for the conjugate then I'll come back
#and add monocular models if needed
#Conjugate
mburst<-lm(peakFR~peak.H.Velocity+peak.V.Velocity,data=x)
V<-coef(mburst)[['peak.V.Velocity']]
H<-coef(mburst)[['peak.H.Velocity']]
#calculate direction preference using relative importance of horizontal and vertical
br=as.numeric(calc.relimp(mburst)$lmg)
dir.imp<- atan2(br[2]*sign(V),br[1]*sign(H))*180/pi
R2<-summary(mburst)$r.squared
#Right Eye
mburst<-lm(peakFR~peak.RH.Velocity+peak.RV.Velocity,data=x)
VR<-coef(mburst)[['peak.RV.Velocity']]
HR<-coef(mburst)[['peak.RH.Velocity']]
#calculate direction preference using relative importance of horizontal and vertical
br=as.numeric(calc.relimp(mburst)$lmg)
dir.imp.R<- atan2(br[2]*sign(VR),br[1]*sign(HR))*180/pi
R2R<-summary(mburst)$r.squared
#Left Eye
mburst<-lm(peakFR~peak.LH.Velocity+peak.LV.Velocity,data=x)
VL<-coef(mburst)[['peak.LV.Velocity']]
HL<-coef(mburst)[['peak.LH.Velocity']]
#calculate direction preference using relative importance of horizontal and vertical
br=as.numeric(calc.relimp(mburst)$lmg)
dir.imp.L<- atan2(br[2]*sign(VL),br[1]*sign(HL))*180/pi
R2L<-summary(mburst)$r.squared
d<-data.frame(neuron=x$neuron[1],
dir.imp=dir.imp,R2=R2,
dir.imp.R=dir.imp.R,R2R=R2R,
dir.imp.L=dir.imp.L,R2L=R2L)
}
burst %>%
group_by(neuron) %>%
do(measureCellSaccades(.)) %>%
separate(neuron,c('monkey','cellnum'),remove=FALSE)->
bsummary
multiplot(plotlist=list(
ggplot(bsummary)+
geom_segment(aes(y=0,yend=1,x=dir.imp,xend=dir.imp,color=monkey))+
scale_x_continuous(limits=c(-180,180),breaks=c(0,90,180,-90))+
coord_polar(start=pi/2,direction=-1)+
theme_minimal()+
theme(legend.position='none')+
facet_wrap(~monkey,ncol=1)+
xlab('Direction preference\nusing relative importance')
,
ggplot(bsummary)+
geom_segment(aes(y=0,yend=R2,x=dir.imp,xend=dir.imp,color=monkey))+
scale_x_continuous(limits=c(-180,180),breaks=c(0,90,180,-90))+
coord_polar(start=pi/2,direction=-1)+
theme_minimal()+
theme(legend.position='none')+
facet_wrap(~monkey,ncol=1)+
xlab('Direction preference\nusing relative importance')
),cols=2)
BI %>%
filter(dur>10,abs(conj.V.Amp)>5,abs(conj.H.Amp)<2) %>%
group_by(monkey,neuron,upward) %>%
summarize(mean.post.saccade=mean(post.saccade,na.rm=T),
mean.during.saccade=mean(peak.during.saccade),
mean.burst.index=mean(peak.during.saccade-post.saccade,na.rm=T),
n=n())->
BIave
pvert<-burst %>%
filter(abs(conj.V.Amp)>5,abs(conj.V.Amp)<40)%>%
ggplot()+
stat_smooth(aes(conj.V.Amp,peak.during.saccade-post.saccade,group=neuron),method='lm',se=FALSE)+
facet_wrap(~monkey)
phor<-burst %>%
filter(abs(conj.H.Amp)>5,abs(conj.H.Amp)<40)%>%
ggplot()+
stat_smooth(aes(conj.H.Amp,peak.during.saccade-post.saccade,group=neuron),method='lm',se=FALSE)+
facet_wrap(~monkey)
multiplot(plotlist=c(pvert,phor),cols=1)
pvert<-burst %>%
filter(abs(conj.V.Amp)>5,abs(conj.V.Amp)<40)%>%
ggplot()+
stat_smooth(aes(conj.V.Amp,peak.during.saccade-post.saccade,group=neuron),method='lm',se=FALSE)+
facet_wrap(~monkey)
phor<-burst %>%
filter(abs(conj.H.Amp)>5,abs(conj.H.Amp)<40)%>%
ggplot()+
stat_smooth(aes(conj.H.Amp,peak.during.saccade-post.saccade,group=neuron),method='lm',se=FALSE)+
facet_wrap(~monkey)
multiplot(plotlist=c(pvert,phor),cols=1)
multiplot(pvert,phor,cols=1)
pvert<-burst %>%
filter(abs(conj.V.Amp)>5,abs(conj.V.Amp)<40)%>%
ggplot()+
stat_smooth(aes(conj.V.Amp,peak.during.saccade-post.saccade,group=neuron),method='lm',se=FALSE)+
facet_wrap(~monkey)
phor<-burst %>%
filter(abs(conj.H.Amp)>5,abs(conj.H.Amp)<40)%>%
ggplot()+
stat_smooth(aes(conj.H.Amp,peak.during.saccade-post.saccade,group=neuron),method='lm',se=FALSE)+
facet_wrap(~monkey)
multiplot(pvert,phor,cols=1)
