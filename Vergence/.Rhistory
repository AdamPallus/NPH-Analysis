ggtitle('Direction preference and goodness of fit')+
ylab('Goodness of Fit')+
xlab('Preferred Direction')+
facet_wrap(~monkey)+
ggtitle("Irregular Cells Removed")
ggplot(filter(r,R2>0.1))+
geom_segment(aes(yend=1,xend=dir.pref,y=0,x=dir.pref,color=cellnum),
alpha=0.5,arrow=arrow(type='closed',length =unit(0.1,"inches")))+
geom_text(aes(dir.pref,1,label=cellnum),alpha=1)+
coord_polar(direction=-1,start=pi/2)+
scale_x_continuous(limits=c(-180,180),breaks=c(0,90,180,-90))+
theme_bw()+
ggtitle('Direction preference')+
ylab('')+
xlab('Preferred Direction')+
facet_wrap(~monkey)+
ggtitle('Irregular Cells Removed')
ggplot(r,aes(conj.HP,conj.VP,label=cellnum,shape=monkey,color=monkey))+
geom_point(size=2,alpha=.8)+
# geom_text(alpha=1/2,color='black',data=filter(r,R2>0.1))+
geom_abline(slope=1)+
# ggtitle('Comparing Importantance of Horizontal and \nVertical Position')+
xlab('Relative Importance of Horizontal Position')+
ylab('Relative Importance of Vertical Position')+
coord_fixed()+
expand_limits(x=-0.02,y=-0.02)+
theme(legend.position = 'bottom')+
facet_wrap(~monkey)
ggplot(filter(r,R2>0.1))+
geom_segment(aes(yend=1,xend=dir.pref,y=0,x=dir.pref),
alpha=0.5,arrow=arrow(type='closed',length =unit(0.1,"inches")))+
# geom_text(aes(dir.pref,1,label=cellnum),alpha=1)+
coord_polar(direction=-1,start=pi/2)+
scale_x_continuous(limits=c(-180,180),breaks=c(0,90,180,-90))+
theme_bw()+
ggtitle('Direction preference')+
ylab('')+
xlab('Preferred Direction')+
facet_wrap(~monkey)
ggplot(filter(r,R2>0.1))+
geom_segment(aes(yend=R2,xend=dir.pref,y=0,x=dir.pref),
alpha=0.5,arrow=arrow(type='closed',length =unit(0.1,"inches")))+
# geom_text(aes(dir.pref,R2+0.05,label=cellnum),alpha=1)+
coord_polar(direction=-1,start=pi/2)+
scale_x_continuous(limits=c(-180,180),breaks=c(0,90,180,-90))+
theme_bw()+
ggtitle('Direction preference and goodness of fit')+
ylab('Goodness of Fit')+
xlab('Preferred Direction')+
facet_wrap(~monkey)
ggplot(filter(r,R2>0.1))+
geom_segment(aes(yend=R2,xend=dir.pref,y=0,x=dir.pref),
alpha=0.5,arrow=arrow(type='closed',length =unit(0.1,"inches")))+
# geom_text(aes(dir.pref,R2+0.05,label=cellnum),alpha=1)+
coord_polar(direction=-1,start=pi/2)+
scale_x_continuous(limits=c(-180,180),breaks=c(0,90,180,-90))+
theme_bw()+
ggtitle('Direction preference and goodness of fit')+
ylab('Goodness of Fit')+
xlab('Preferred Direction')+
facet_wrap(~monkey,scales='free')
ggplot(filter(r,R2>0.1))+
geom_segment(aes(yend=R2,xend=dir.pref,y=0,x=dir.pref),
alpha=0.5,arrow=arrow(type='closed',length =unit(0.1,"inches")))+
# geom_text(aes(dir.pref,R2+0.05,label=cellnum),alpha=1)+
coord_polar(direction=-1,start=pi/2)+
scale_x_continuous(limits=c(-180,180),breaks=c(0,90,180,-90))+
theme_bw()+
ggtitle('Direction preference and goodness of fit')+
ylab('Goodness of Fit')+
xlab('Preferred Direction')+
facet_wrap(~monkey)
qplot(abs(dir.pref),data=r)+facet_wrap(~monkey)+
geom_freqpoly(stat='identity')
ggplot(r,aes(conj.HP,conj.VP,label=cellnum,shape=monkey,color=monkey))+
geom_point(size=2,alpha=.8)+
# geom_text(alpha=1/2,color='black',data=filter(r,R2>0.1))+
geom_abline(slope=1)+
# ggtitle('Comparing Importantance of Horizontal and \nVertical Position')+
xlab('Relative Importance of Horizontal Position')+
ylab('Relative Importance of Vertical Position')+
coord_fixed()+
expand_limits(x=-0.02,y=-0.02)+
theme(legend.position = 'bottom')+
facet_wrap(~monkey)
ggplot(filter(r,R2>0.1),aes(conj.HP,conj.VP,label=cellnum,shape=monkey,color=monkey))+
geom_point(size=2,alpha=.8)+
# geom_text(alpha=1/2,color='black',data=filter(r,R2>0.1))+
geom_abline(slope=1)+
# ggtitle('Comparing Importantance of Horizontal and \nVertical Position')+
xlab('Relative Importance of Horizontal Position')+
ylab('Relative Importance of Vertical Position')+
coord_fixed()+
expand_limits(x=-0.02,y=-0.02)+
theme(legend.position = 'bottom')+
facet_wrap(~monkey)
ggplot(filter(r,R2>0.1),aes(conj.HP,conj.VP,label=cellnum,shape=monkey,color=monkey))+
geom_point(size=2,alpha=.8)+
# geom_text(alpha=1/2,color='black',data=filter(r,R2>0.1))+
geom_abline(slope=1)+
# ggtitle('Comparing Importantance of Horizontal and \nVertical Position')+
xlab('Relative Importance of Horizontal Position')+
ylab('Relative Importance of Vertical Position')+
coord_fixed()+
expand_limits(x=-0.02,y=-0.02)+
theme(legend.position = 'bottom')
ggplot(r)+
geom_segment(aes(yend=R2,xend=dir.pref,y=0,x=dir.pref,color=cellnum),
alpha=0.5,arrow=arrow(type='closed',length =unit(0.1,"inches")))+
# geom_text(aes(dir.pref,R2+0.05,label=cellnum),alpha=1)+
coord_polar(direction=-1,start=pi/2)+
scale_x_continuous(limits=c(-180,180),breaks=c(0,90,180,-90))+
theme_bw()+
ggtitle('Direction preference and goodness of fit')+
ylab('Goodness of Fit')+
xlab('Preferred Direction')+
facet_wrap(~monkey)
ggplot(r)+
geom_segment(aes(yend=1,xend=dir.pref,y=0,x=dir.pref,color=cellnum),
alpha=0.5,arrow=arrow(type='closed',length =unit(0.1,"inches")))+
# geom_text(aes(dir.pref,R2+0.05,label=cellnum),alpha=1)+
coord_polar(direction=-1,start=pi/2)+
scale_x_continuous(limits=c(-180,180),breaks=c(0,90,180,-90))+
theme_bw()+
ggtitle('Direction preference')+
ylab('')+
xlab('Preferred Direction')+
facet_wrap(~monkey)
ggplot(filter(r,R2>0.1))+
geom_segment(aes(yend=R2,xend=dir.pref,y=0,x=dir.pref,color=cellnum),
alpha=0.5,arrow=arrow(type='closed',length =unit(0.1,"inches")))+
# geom_text(aes(dir.pref,R2+0.05,label=cellnum),alpha=1)+
coord_polar(direction=-1,start=pi/2)+
scale_x_continuous(limits=c(-180,180),breaks=c(0,90,180,-90))+
theme_bw()+
ggtitle('Direction preference and goodness of fit')+
ylab('Goodness of Fit')+
xlab('Preferred Direction')+
facet_wrap(~monkey)+
ggtitle("Irregular Cells Removed")
ggplot(filter(r,R2>0.1))+
geom_segment(aes(yend=1,xend=dir.pref,y=0,x=dir.pref,color=cellnum),
alpha=0.5,arrow=arrow(type='closed',length =unit(0.1,"inches")))+
geom_text(aes(dir.pref,1,label=cellnum),alpha=1)+
coord_polar(direction=-1,start=pi/2)+
scale_x_continuous(limits=c(-180,180),breaks=c(0,90,180,-90))+
theme_bw()+
ggtitle('Direction preference')+
ylab('')+
xlab('Preferred Direction')+
facet_wrap(~monkey)+
ggtitle('Irregular Cells Removed')
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(broom)
# library(grid)
library(relaimpo)
library(leaps)
library(stringr)
library(cladoRcpp)
library(boot)
source('Adamhelperfunctions.R')
select<- dplyr::select
# o<-readRDS('KopachuckINC.RDS')
o<-readRDS('KopaBeeINC.RDS')
# o<- NULL
t<- loadnewcsv(path="C:/Users/setup/Desktop/NRTP Vergence/INCstrab/",referencefile=o)
if (!is.null(t)){
t<- rbind(o,t)
saveRDS(t,paste('KopachuckINC',substr(date(),1,10)))
}else{
t<-o
}
# t<- rbind(o,t)
t %>% group_by(neuron) %>%
mutate(time=row_number()) ->
t
o<-NULL
#Calculate ISI
t %>%
group_by(neuron) %>%
dplyr::select(neuron, rasters,time) %>%
# mutate(time=row_number()) %>%
filter(rasters==1) %>%
mutate(isi=time-lag(time,1)) %>%
left_join(t,.,by=c('neuron','time','rasters')) ->
t
names(t)
t %>%
group_by(neuron) %>%
mutate(s=markSaccades(conj.velocity,buffer=20,threshold=25),
isfixation=s<0) %>%
filter(isfixation) %>% #This removes all saccades from the dataframe
group_by(neuron,s) %>%
summarize(meanfr=mean(sdf),
maxfr=max(sdf),
R.Hor=mean(rep),
R.Ver=mean(repV),
L.Hor=mean(lep),
L.Ver=mean(lepV),
dur=n(),
mean.Spikerate=sum(rasters)/dur*1000,
mean.ISI=mean(isi),
R.H.Amp=rep[1]-rep[length(rep)],
L.H.Amp=lep[1]-lep[length(lep)],
R.V.Amp=repV[1]-repV[length(repV)],
L.V.Amp=lepV[1]-lepV[length(lepV)],
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)))->
m
head(m)
ggplot(m)+
geom_point(aes(meanfr,mean.ISI))+
facet_wrap(~neuron,ncol=3)
ggplot(m)+
geom_point(aes(meanfr,mean.ISI))+
facet_wrap(~neuron,ncol=3)
head(m$meanisi)
head(m$mean.ISI)
tail(m$mean.ISI)
t %>%
group_by(neuron) %>%
mutate(s=markSaccades(conj.velocity,buffer=20,threshold=25),
isfixation=s<0) %>%
filter(isfixation) %>% #This removes all saccades from the dataframe
group_by(neuron,s) %>%
summarize(meanfr=mean(sdf),
maxfr=max(sdf),
R.Hor=mean(rep),
R.Ver=mean(repV),
L.Hor=mean(lep),
L.Ver=mean(lepV),
dur=n(),
mean.Spikerate=sum(rasters)/dur*1000,
mean.ISI=mean(isi,na.rm=T),
R.H.Amp=rep[1]-rep[length(rep)],
L.H.Amp=lep[1]-lep[length(lep)],
R.V.Amp=repV[1]-repV[length(repV)],
L.V.Amp=lepV[1]-lepV[length(lepV)],
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)))->
m
ggplot(m)+
geom_point(aes(meanfr,mean.ISI))+
facet_wrap(~neuron,ncol=3)
ggplot(m)+
geom_point(aes(meanfr,mean.ISI))+
facet_wrap(~neuron,ncol=3,scales='free)
ggplot(m)+
geom_point(aes(meanfr,mean.ISI))+
facet_wrap(~neuron,ncol=3,scales='free)
ggplot(m)+
geom_point(aes(meanfr,mean.ISI))+
facet_wrap(~neuron,ncol=3,scales='free')
t %>%
group_by(neuron) %>%
mutate(s=markSaccades(conj.velocity,buffer=20,threshold=25),
isfixation=s<0) %>%
filter(isfixation) %>% #This removes all saccades from the dataframe
group_by(neuron,s) %>%
summarize(meanfr=mean(sdf),
maxfr=max(sdf),
R.Hor=mean(rep),
R.Ver=mean(repV),
L.Hor=mean(lep),
L.Ver=mean(lepV),
dur=n(),
mean.Spikerate=sum(rasters)/dur*1000,
mean.ISI=mean(isi,na.rm=T),
var.ISI=var(isi,na.rm=T),
R.H.Amp=rep[1]-rep[length(rep)],
L.H.Amp=lep[1]-lep[length(lep)],
R.V.Amp=repV[1]-repV[length(repV)],
L.V.Amp=lepV[1]-lepV[length(lepV)],
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)))->
m
ggplot(m)+
geom_point(aes(meanfr,mean.ISI))+
facet_wrap(~neuron,ncol=3,scales='free')
ggplot(m)+
geom_point(aes(meanfr,mean.ISI))+
facet_wrap(~neuron,ncol=3,scales='free')
ggplot(m)+
geom_point(aes(meanfr,var.ISI))+
facet_wrap(~neuron,ncol=3,scales='free')
ggplot(m)+
geom_point(aes(meanfr,var.ISI))+
facet_wrap(~neuron,ncol=3,scales='free')
ggplot(m)+
geom_point(aes(meanfr,mean.ISI/var.ISI))+
facet_wrap(~neuron,ncol=3,scales='free')
ggplot(m)+
geom_point(aes(mean.ISI,var.ISI))+
facet_wrap(~neuron,ncol=3,scales='free')
qplot(sqrt(var.ISI)/mean.ISI,data=m)
qplot(sqrt(var.ISI)/mean.ISI,data=m)+facet_wrap(~neuron,ncol=3,scales='free')
qplot(sqrt(var.ISI)/mean.ISI,data=m)+facet_wrap(~neuron,ncol=3,scales='free_y')
qplot(sqrt(var.ISI),mean.ISI,data=m)+facet_wrap(~neuron,ncol=3,scales='free_y')
qplot(sqrt(var.ISI),mean.ISI,data=m)+facet_wrap(~neuron,ncol=3,scales='free')
qplot(mean.ISI,sqrt(var.ISI),data=m)+facet_wrap(~neuron,ncol=3,scales='free')
m %>%
group_by(neuron) %>%
summarize(CV=sqrt(var.ISI)/mean.ISI)->
sm
head(sm)
sm
m %>%
group_by(neuron) %>%
summarize(CV=sqrt(var.ISI)/mean.ISI)->
sm
m %>%
group_by(neuron,s) %>%
summarize(CV=sqrt(var.ISI)/mean.ISI)->
sm
head(ms)
head(sm)
m %>%
group_by(neuron,s) %>%
summarize(CV=sqrt(var.ISI)/mean.ISI) %>%
summarize(CV=mean(CV,na.rm=T)->
sm
m %>%
group_by(neuron,s) %>%
summarize(CV=sqrt(var.ISI)/mean.ISI) %>%
summarize(CV=mean(CV,na.rm=T))->
sm
head(sm)
qplot(CV,data=sm)
m %>%
group_by(monkey,neuron,s) %>%
summarize(CV=sqrt(var.ISI)/mean.ISI) %>%
summarize(CV=mean(CV,na.rm=T))->
sm
m %>%
group_by(neuron,s) %>%
summarize(CV=sqrt(var.ISI)/mean.ISI,
monkey=first(monkey)) %>%
summarize(CV=mean(CV,na.rm=T),
monkey=first(monkey))->
sm
m %>%
group_by(neuron,s) %>%
summarize(CV=sqrt(var.ISI)/mean.ISI,
monkey=first(monkey)) ->
x
head(m)
m %>%
group_by(neuron,s) %>%
summarize(CV=sqrt(var.ISI)/mean.ISI) %>%
summarize(CV=mean(CV,na.rm=T)) %>%
separate(neuron,c('monkey','cellnum'),remove=FALSE)->
sm
head(sm)
qplot(CV,data=sm)+facet_wrap(~monkey)
ggplot(filter(m,R.Hor<3,R.Ver<3))+
geom_point(aes(mean.ISI,var.ISI))+
facet_wrap(~neuron,ncol=3,scales='free')
ggplot(m)+geom_point(R.Hor,mean.Spikerate)+facet_wrap(~neuron,ncol=3,scales='free')
ggplot(m)+geom_point(aes(R.Hor,mean.Spikerate))+facet_wrap(~neuron,ncol=3,scales='free')
ggplot(m)+
geom_point(aes(R.Ver,mean.Spikerate))+
facet_wrap(~neuron,ncol=3,scales='free')
ggplot(m)+
geom_histogram(aes(dur))+
facet_wrap(~neuron,ncol=3,scales='free')
ggplot(filter(m,dur>50,dur<500))+
geom_histogram(aes(dur))+
facet_wrap(~neuron,ncol=3,scales='free')
ggplot(filter(m,dur>50,dur<500))+
geom_point(aes(R.Ver,mean.Spikerate))+
facet_wrap(~neuron,ncol=3,scales='free')
head(r)
qplot(mean.ISI,sqrt(var.ISI),data=m)+facet_wrap(~neuron,ncol=3,scales='free')
?rbindlist
??rbindlist
library(data.table)
install.packages('data.table')
library(data.table)
?rbindlist
joinsaccadesuniformDT<-function(t,buffer=20,threshold=30,saccade.length=150){
findSaccades<-function(ev,threshold=40){
mindur<- 1
i<-which(abs(ev)>threshold) #find all the times when speed > threshold
sacoff<-which(diff(i)>mindur) #minimum duration of an accepted saccade
sacon<-c(1,sacoff+1) #first saccade
sacoff<-c(sacoff,length(i)) #end of last saccade
saccade.onset<-i[sacon] #get actual times
saccade.offset<-i[sacoff]
return(data.frame(saccade.onset,saccade.offset))
}
jsac<- function(stimes){
summary(stimes)
#input should be an array of length 2: c(onsettime,offsettime, saccade.number,saccade.dur)
df<- data.frame(time=stimes[[1]]:stimes[[2]])
df$sacnum<- stimes[[4]]
df$saccade.dur<- stimes[[3]]
return(df)
# return(stimes[[1]]:stimes[[2]])
}
stimes<-findSaccades(t$conj.velocity,threshold)
stimes %>%
mutate(dur=saccade.offset-saccade.onset,
s=row_number(),
saccade.onset=saccade.onset-buffer,
###########HERE IS WHERE i MAKE SACCADES UNIFORM #######
saccade.offset=saccade.onset+saccade.length+2*buffer)->
stimes
x<- do.call('rbind',apply(stimes,1,jsac))
x %>%
group_by(sacnum) %>%
mutate(counter=time-first(time)) ->
x
left_join(t,x,by='time')
}
source('~/GitHub/NPH-Analysis/Vergence/Adamhelperfunctions.R')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(knitr)
library(tidyr)
library(broom)
# library(grid)
library(relaimpo)
library(leaps)
#library(data.table)
library(stringr)
library(dplyr)
library(cladoRcpp)
select<-dplyr::select
# source('joinsaccadesuniform.R')
source('Adamhelperfunctions.R')
t<- readRDS('SOA-NRTP.RDS')
source('~/GitHub/NPH-Analysis/Vergence/Adamhelperfunctions.R')
bufferlength<- 200
saccade.length<- 150
t%>%
filter(cellnum>100,cellnum<125,monkey=='Bee')%>%
# group_by(neuron) %>%
mutate(time=row_number()) %>%
do(joinsaccadesuniformDT(.,buffer=bufferlength,threshold=20,saccade.length=saccade.length))->
# do(joinsaccades(.,buffer=bufferlength,threshold=20))->
z
t%>%
filter(cellnum>100,monkey=='Bee')%>%
# group_by(neuron) %>%
mutate(time=row_number()) %>%
do(joinsaccadesuniformDT(.,buffer=bufferlength,threshold=20,saccade.length=saccade.length))->
# do(joinsaccades(.,buffer=bufferlength,threshold=20))->
z
z %>%
# group_by(neuron) %>%
mutate(issaccade=!is.na(sacnum)) %>%
filter(issaccade) %>%
group_by(neuron,sacnum) %>%
mutate(cverg=abs(verg.velocity)<3,
cverg=replace(counter,cverg,NA)) %>%
summarize(saccade.dur=first(saccade.dur),
saccade.end=saccade.dur+bufferlength,
peak.conj.velocity=maxabs(conj.velocity),
peak.R.H= maxabs(rev),
peak.R.V= maxabs(revV),
peak.L.H= maxabs(lev),
peak.L.V= maxabs(levV),
R.H.Amp=rep[saccade.end]-rep[bufferlength],
L.H.Amp=lep[saccade.end]-lep[bufferlength],
R.V.Amp=repV[saccade.end]-repV[bufferlength],
L.V.Amp=lepV[saccade.end]-lepV[bufferlength],
r.angle=atan2(R.V.Amp,R.H.Amp)*180/pi,
r.amp=sqrt(R.H.Amp^2+R.V.Amp^2),
vect.amp= (sqrt(R.H.Amp^2+R.V.Amp^2)+sqrt(L.H.Amp^2+L.V.Amp^2))/2,
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)),
verg.amp=verg.angle[saccade.end]-verg.angle[bufferlength],
mean.verg.amp=mean(verg.angle[saccade.end:n()]-mean(verg.angle[1:bufferlength])),
peak.verg.velocity= maxabs(verg.velocity),
min.verg.trans = min(verg.velocity),
max.verg.trans = max(verg.velocity),
off.verg.velocity=min(abs(min.verg.trans),abs(max.verg.trans)),
min.verg.angle=min(verg.angle),
max.verg.angle=max(verg.angle),
max.verg.velocity=max(verg.velocity),
min.verg.velocity=min(verg.velocity),
# verg.amp= last(verg.angle)-first(verg.angle),
verg.amp= verg.angle[n()]-verg.angle[1],
initial.verg.angle=verg.angle[bufferlength],
verg.lead=bufferlength-max(cverg[1:bufferlength],na.rm=T))->
s
ggplot(filter(s,abs(mean.verg.amp)<1,max.verg.angle>12,r.amp>3))+
geom_point(aes(peak.conj.velocity,min.verg.trans))+
geom_point(aes(peak.conj.velocity,max.verg.trans),color='darkgray')+
coord_cartesian(xlim=c(0,1000),ylim=c(-300,300))+
ylab('Pos & Neg peak vg vel')+
stat_smooth(aes(peak.conj.velocity,min.verg.trans),method='lm',formula='y~poly(x,2)')+
ggtitle('Rightward saccades at near -Bee')
ggplot(filter(s,abs(mean.verg.amp)<1,max.verg.angle<5,abs(r.angle)<20,r.amp>3))+
geom_point(aes(peak.conj.velocity,min.verg.trans))+
geom_point(aes(peak.conj.velocity,max.verg.trans),color='darkgray')+
coord_cartesian(xlim=c(0,1000),ylim=c(-300,300))+
ylab('Pos & Neg peak vg vel')+
ggtitle('Rightward saccades at far -Bee')+
stat_smooth(aes(peak.conj.velocity,min.verg.trans),method='lm',formula='y~poly(x,2)')
ggplot(filter(s,abs(mean.verg.amp)<1,r.amp>3,saccade.dur>50,saccade.dur<300))+
geom_point(aes(peak.conj.velocity,min.verg.trans))+
geom_point(aes(peak.conj.velocity,max.verg.trans),color='darkgray')+
coord_cartesian(xlim=c(0,1000),ylim=c(-300,300))+
stat_smooth(aes(peak.conj.velocity,min.verg.trans),method='lm',formula='y~poly(x,2)')+
stat_smooth(aes(peak.conj.velocity,max.verg.trans),method='lm',formula='y~poly(x,2)')+
ylab('Pos & Neg peak vg vel')+
ggtitle('All saccades with verg.amp < 1 -Bee')
s$saccade.dur<-NULL
z<-left_join(z,s,by='sacnum')
z<-left_join(z,s,by='sacnum')
t<-NULL
?max
