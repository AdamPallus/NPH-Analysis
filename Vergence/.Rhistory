g
}
ggplot(g) +
theme_bw()+ #Removes gray background
xlab('Time from Saccade Onset (ms)')+
geom_histogram(aes(spiketimes,100*..ncount..),alpha=1,binwidth=10,fill='black',color='black')+
# geom_freqpoly(aes(spiketimes,100*..ncount..),alpha=1,bins=40,color='darkred',size=1)+
geom_point(aes(counter,showrasters* snum*5+110),shape='|',size=0.5,color='black')+
facet_grid(~convergent,scales='free_y',space='free_y')+
# facet_wrap(~neuron,ncol=4,scales='free')+
# facet_wrap(~neuron,ncol=4)+
geom_vline(xintercept=0,color='red',size=1)+
# geom_point(aes(counter,verg.change*10-250),color='darkgreen',size=1,shape='-')+
geom_line(aes(counter,rep-50,group=sacnum),color='blue',size=0.5,alpha=1/10)+
geom_line(aes(counter,lep-50,group=sacnum),color='red',size=0.5,alpha=1/10)+
geom_line(aes(counter,repV-100,group=sacnum),color='blue',size=0.5,alpha=1/10)+
geom_line(aes(counter,lepV-100,group=sacnum),color='red',size=0.5,alpha=1/10)+
geom_line(aes(counter,verg.angle*10-300,group=sacnum),color='darkgreen',size=0.5,alpha=1/5)+
# geom_line(aes(counter,sdf-500,group=sacnum),color='orange',size=0.5,alpha=1/5)
# coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(2,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16))+
scale_y_continuous(breaks=c(-300,-250,-200,-150),labels=c(0,5,10,15))+ #re-labels so verg.angle is accurate
ylab('Degrees')+
expand_limits(y=c(-300))
ggplot(g) +
theme_bw()+ #Removes gray background
xlab('Time from Saccade Onset (ms)')+
geom_histogram(aes(spiketimes,100*..ncount..),alpha=1,binwidth=10,fill='black',color='black')+
# geom_freqpoly(aes(spiketimes,100*..ncount..),alpha=1,bins=40,color='darkred',size=1)+
geom_point(aes(counter,showrasters* snum*5+110),shape='|',size=0.5,color='black')+
facet_grid(~convergent,scales='free_y',space='free_y')+
facet_wrap(~neuron)+
# facet_wrap(~neuron,ncol=4,scales='free')+
# facet_wrap(~neuron,ncol=4)+
geom_vline(xintercept=0,color='red',size=1)+
# geom_point(aes(counter,verg.change*10-250),color='darkgreen',size=1,shape='-')+
geom_line(aes(counter,rep-50,group=sacnum),color='blue',size=0.5,alpha=1/10)+
geom_line(aes(counter,lep-50,group=sacnum),color='red',size=0.5,alpha=1/10)+
geom_line(aes(counter,repV-100,group=sacnum),color='blue',size=0.5,alpha=1/10)+
geom_line(aes(counter,lepV-100,group=sacnum),color='red',size=0.5,alpha=1/10)+
geom_line(aes(counter,verg.angle*10-300,group=sacnum),color='darkgreen',size=0.5,alpha=1/5)+
# geom_line(aes(counter,sdf-500,group=sacnum),color='orange',size=0.5,alpha=1/5)
# coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(2,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16))+
scale_y_continuous(breaks=c(-300,-250,-200,-150),labels=c(0,5,10,15))+ #re-labels so verg.angle is accurate
ylab('Degrees')+
expand_limits(y=c(-300))
ggplot(g) +
theme_bw()+ #Removes gray background
xlab('Time from Saccade Onset (ms)')+
geom_histogram(aes(spiketimes,100*..ncount..),alpha=1,binwidth=10,fill='black',color='black')+
# geom_freqpoly(aes(spiketimes,100*..ncount..),alpha=1,bins=40,color='darkred',size=1)+
geom_point(aes(counter,showrasters* snum*5+110),shape='|',size=0.5,color='black')+
facet_grid(~convergent,scales='free_y',space='free_y')+
facet_wrap(~neuron,ncol=1)+
# facet_wrap(~neuron,ncol=4,scales='free')+
# facet_wrap(~neuron,ncol=4)+
geom_vline(xintercept=0,color='red',size=1)+
# geom_point(aes(counter,verg.change*10-250),color='darkgreen',size=1,shape='-')+
geom_line(aes(counter,rep-50,group=sacnum),color='blue',size=0.5,alpha=1/10)+
geom_line(aes(counter,lep-50,group=sacnum),color='red',size=0.5,alpha=1/10)+
geom_line(aes(counter,repV-100,group=sacnum),color='blue',size=0.5,alpha=1/10)+
geom_line(aes(counter,lepV-100,group=sacnum),color='red',size=0.5,alpha=1/10)+
geom_line(aes(counter,verg.angle*10-300,group=sacnum),color='darkgreen',size=0.5,alpha=1/5)+
# geom_line(aes(counter,sdf-500,group=sacnum),color='orange',size=0.5,alpha=1/5)
# coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(2,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16))+
scale_y_continuous(breaks=c(-300,-250,-200,-150),labels=c(0,5,10,15))+ #re-labels so verg.angle is accurate
ylab('Degrees')+
expand_limits(y=c(-300))
ggplot(g) +
theme_bw()+ #Removes gray background
xlab('Time from Saccade Onset (ms)')+
geom_histogram(aes(spiketimes,100*..ncount..),alpha=1,binwidth=10,fill='black',color='black')+
# geom_freqpoly(aes(spiketimes,100*..ncount..),alpha=1,bins=40,color='darkred',size=1)+
geom_point(aes(counter,showrasters* snum*5+110),shape='|',size=0.5,color='black')+
facet_grid(neuron~convergent,scales='free_y',space='free_y')+
# facet_wrap(~neuron,ncol=1)+
# facet_wrap(~neuron,ncol=4,scales='free')+
# facet_wrap(~neuron,ncol=4)+
geom_vline(xintercept=0,color='red',size=1)+
# geom_point(aes(counter,verg.change*10-250),color='darkgreen',size=1,shape='-')+
geom_line(aes(counter,rep-50,group=sacnum),color='blue',size=0.5,alpha=1/10)+
geom_line(aes(counter,lep-50,group=sacnum),color='red',size=0.5,alpha=1/10)+
geom_line(aes(counter,repV-100,group=sacnum),color='blue',size=0.5,alpha=1/10)+
geom_line(aes(counter,lepV-100,group=sacnum),color='red',size=0.5,alpha=1/10)+
geom_line(aes(counter,verg.angle*10-300,group=sacnum),color='darkgreen',size=0.5,alpha=1/5)+
# geom_line(aes(counter,sdf-500,group=sacnum),color='orange',size=0.5,alpha=1/5)
# coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(2,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16))+
scale_y_continuous(breaks=c(-300,-250,-200,-150),labels=c(0,5,10,15))+ #re-labels so verg.angle is accurate
ylab('Degrees')+
expand_limits(y=c(-300))
t%>%
# filter(as.numeric(cellnum)>200) %>%
# filter(monkey=='Bee',as.numeric(cellnum) %in% Cells.to.Plot) %>%
filter(neuron %in% Cells.to.Plot) %>%
group_by(neuron) %>%
mutate(time=row_number()) %>%
do(joinsaccadesuniform(.,buffer=bufferlength,threshold=20,saccade.length=150))->
# do(joinsaccades(.,buffer=bufferlength,threshold=20))->
d
#Once saccades have been marked, we measure lots of things about each saccade.
#For this plot, we also remove all data that isn't part of a saccade or the buffer period
d %>%
group_by(neuron) %>%
mutate(issaccade=!is.na(sacnum)) %>%
filter(issaccade) %>%
group_by(neuron,sacnum) %>%
mutate(#dur=n(),
peak.conj.velocity=maxabs(conj.velocity),
peak.R.H= maxabs(rev),
peak.R.V= maxabs(revV),
peak.L.H= maxabs(lev),
peak.L.V= maxabs(levV),
R.H.Amp=rep[n()]-rep[1],
L.H.Amp=lep[n()]-lep[1],
R.V.Amp=repV[n()]-repV[1],
L.V.Amp=lepV[n()]-lepV[1],
r.angle=atan2(R.V.Amp,R.H.Amp)*180/pi,
r.amp=sqrt(R.H.Amp^2+R.V.Amp^2),
nspikes=sum(rasters),
vect.amp= (sqrt(R.H.Amp^2+R.V.Amp^2)+sqrt(L.H.Amp^2+L.V.Amp^2))/2,
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)),
verg.amp=verg.angle[n()-bufferlength]-verg.angle[bufferlength+1],
peak.verg.velocity= maxabs(verg.velocity),
min.verg.trans = min(verg.velocity),
max.verg.trans = max(verg.velocity),
off.verg.velocity=min(abs(min.verg.trans),abs(max.verg.trans)),
min.verg.angle=min(verg.angle),
maxfr=max(sdf),
counter=time-time[1]-bufferlength,
verg.change=verg.angle-mean(verg.angle[1:50]),
# verg.amp= last(verg.angle)-first(verg.angle),
verg.amp= verg.angle[n()-bufferlength]-verg.angle[bufferlength],
showrasters=replace(rasters,rasters<1,NA))->
p
#This just gives a name to convergent and divergent saccades so the figure is automatically labled
p$convergent<- as.factor(p$verg.amp>0)
levels(p$convergent)<- c('Divergent','Convergent')
#This is the block where we decide which saccades to reject
if (Remove.Multiverg){
p %>% group_by(neuron) %>%
filter(off.verg.velocity<12) -> #removes "multi-directional" vergence movements
p}
p %>%  group_by(neuron) %>%
filter(#saccade.dur>80, #Removes any saccade shorter than 80ms
abs(verg.amp)>4, #removes saccades with vergence change of less than 1.5 deg
# dur<800,
min.verg.angle> -5) %>% #removes trials with eye-coil problems (rare)
group_by(neuron,convergent) %>%
mutate(n=n(),spiketimes=showrasters*counter) ->
gtemp
if (sample.saccades) {
#This block chooses 20 random saccades of each type for each neuron
gtemp %>%
group_by(neuron,convergent,sacnum) %>%
summarise() %>%
ungroup() %>%
group_by(neuron,convergent) %>%
sample_n(20,replace=FALSE) %>%
mutate(plotthis=TRUE) ->
randomsaccades
#This block orders the saccades by duration
gtemp%>%
left_join(randomsaccades) %>%
##############Comment out next line if you don't want to sample###########
filter(plotthis) %>% #only plots the 20 random saccades
group_by(neuron,convergent,sacnum) %>%
summarize(dur=first(saccade.dur)) %>%
arrange(desc(dur)) %>% #sorts by duration
mutate(snum=row_number()) %>% #re-numbers saccades in their new order for plotting purposes
left_join(gtemp,.)-> #merges these new numbers with the full dataset.
#The join is only necessary because we used summarize above. Summarize gives one number for each saccade.
#By joining back to the original set, we are just adding that one number to all 550 ms of each saccade
g
}else{
gtemp%>%
group_by(neuron,convergent,sacnum) %>%
summarize(dur=first(saccade.dur)) %>%
arrange(desc(dur)) %>% #sorts by duration
mutate(snum=row_number()) %>% #re-numbers saccades in their new order for plotting purposes
left_join(gtemp,.)-> #merges these new numbers with the full dataset.
#The join is only necessary because we used summarize above. Summarize gives one number for each saccade.
#By joining back to the original set, we are just adding that one number to all 550 ms of each saccade
g
}
ggplot(g) +
theme_bw()+ #Removes gray background
xlab('Time from Saccade Onset (ms)')+
geom_histogram(aes(spiketimes,100*..ncount..),alpha=1,binwidth=10,fill='black',color='black')+
# geom_freqpoly(aes(spiketimes,100*..ncount..),alpha=1,bins=40,color='darkred',size=1)+
geom_point(aes(counter,showrasters* snum*5+110),shape='|',size=0.5,color='black')+
facet_grid(neuron~convergent,scales='free_y',space='free_y')+
# facet_wrap(~neuron,ncol=1)+
# facet_wrap(~neuron,ncol=4,scales='free')+
# facet_wrap(~neuron,ncol=4)+
geom_vline(xintercept=0,color='red',size=1)+
# geom_point(aes(counter,verg.change*10-250),color='darkgreen',size=1,shape='-')+
geom_line(aes(counter,rep-50,group=sacnum),color='blue',size=0.5,alpha=1/10)+
geom_line(aes(counter,lep-50,group=sacnum),color='red',size=0.5,alpha=1/10)+
geom_line(aes(counter,repV-100,group=sacnum),color='blue',size=0.5,alpha=1/10)+
geom_line(aes(counter,lepV-100,group=sacnum),color='red',size=0.5,alpha=1/10)+
geom_line(aes(counter,verg.angle*10-300,group=sacnum),color='darkgreen',size=0.5,alpha=1/5)+
# geom_line(aes(counter,sdf-500,group=sacnum),color='orange',size=0.5,alpha=1/5)
# coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(2,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16))+
scale_y_continuous(breaks=c(-300,-250,-200,-150),labels=c(0,5,10,15))+ #re-labels so verg.angle is accurate
ylab('Degrees')+
expand_limits(y=c(-300))
head(randomsaccades)
head(randomsaccades)
#length of time to plot before and after each saccade
bufferlength<- 400
#Choose which cells to plot, identify saccades, then expand the data frame to make sure saccades don't overlap.
#Basically if there is a saccade from 500-550 and 700-750, they will overlap if we try to use a buffer of 200ms
#To counter this, I duplicate any data that would overlap so we don't have to worry about it after this point.
t%>%
# filter(as.numeric(cellnum)>200) %>%
# filter(monkey=='Bee',as.numeric(cellnum) %in% Cells.to.Plot) %>%
filter(neuron %in% Cells.to.Plot) %>%
group_by(neuron) %>%
mutate(time=row_number()) %>%
do(joinsaccadesuniform(.,buffer=bufferlength,threshold=20,saccade.length=150))->
# do(joinsaccades(.,buffer=bufferlength,threshold=20))->
d
#Once saccades have been marked, we measure lots of things about each saccade.
#For this plot, we also remove all data that isn't part of a saccade or the buffer period
d %>%
group_by(neuron) %>%
mutate(issaccade=!is.na(sacnum)) %>%
filter(issaccade) %>%
group_by(neuron,sacnum) %>%
mutate(#dur=n(),
peak.conj.velocity=maxabs(conj.velocity),
peak.R.H= maxabs(rev),
peak.R.V= maxabs(revV),
peak.L.H= maxabs(lev),
peak.L.V= maxabs(levV),
R.H.Amp=rep[n()]-rep[1],
L.H.Amp=lep[n()]-lep[1],
R.V.Amp=repV[n()]-repV[1],
L.V.Amp=lepV[n()]-lepV[1],
r.angle=atan2(R.V.Amp,R.H.Amp)*180/pi,
r.amp=sqrt(R.H.Amp^2+R.V.Amp^2),
nspikes=sum(rasters),
vect.amp= (sqrt(R.H.Amp^2+R.V.Amp^2)+sqrt(L.H.Amp^2+L.V.Amp^2))/2,
maxamp=max(abs(R.H.Amp),abs(R.V.Amp),abs(L.H.Amp),abs(L.V.Amp)),
verg.amp=verg.angle[n()-bufferlength]-verg.angle[bufferlength+1],
peak.verg.velocity= maxabs(verg.velocity),
min.verg.trans = min(verg.velocity),
max.verg.trans = max(verg.velocity),
off.verg.velocity=min(abs(min.verg.trans),abs(max.verg.trans)),
min.verg.angle=min(verg.angle),
maxfr=max(sdf),
counter=time-time[1]-bufferlength,
verg.change=verg.angle-mean(verg.angle[1:50]),
# verg.amp= last(verg.angle)-first(verg.angle),
verg.amp= verg.angle[n()-bufferlength]-verg.angle[bufferlength],
showrasters=replace(rasters,rasters<1,NA))->
p
#This just gives a name to convergent and divergent saccades so the figure is automatically labled
p$convergent<- as.factor(p$verg.amp>0)
levels(p$convergent)<- c('Divergent','Convergent')
#This is the block where we decide which saccades to reject
if (Remove.Multiverg){
p %>% group_by(neuron) %>%
filter(off.verg.velocity<12) -> #removes "multi-directional" vergence movements
p}
p %>%  group_by(neuron) %>%
filter(#saccade.dur>80, #Removes any saccade shorter than 80ms
abs(verg.amp)>4, #removes saccades with vergence change of less than 1.5 deg
# dur<800,
min.verg.angle> -5) %>% #removes trials with eye-coil problems (rare)
group_by(neuron,convergent) %>%
mutate(n=n(),spiketimes=showrasters*counter) ->
gtemp
if (sample.saccades) {
#This block chooses 20 random saccades of each type for each neuron
gtemp %>%
group_by(neuron,convergent,sacnum) %>%
summarise() %>%
ungroup() %>%
group_by(neuron,convergent) %>%
sample_n(20,replace=TRUE) %>%
mutate(plotthis=TRUE) ->
randomsaccades
#This block orders the saccades by duration
gtemp%>%
left_join(randomsaccades) %>%
##############Comment out next line if you don't want to sample###########
filter(plotthis) %>% #only plots the 20 random saccades
group_by(neuron,convergent,sacnum) %>%
summarize(dur=first(saccade.dur)) %>%
arrange(desc(dur)) %>% #sorts by duration
mutate(snum=row_number()) %>% #re-numbers saccades in their new order for plotting purposes
left_join(gtemp,.)-> #merges these new numbers with the full dataset.
#The join is only necessary because we used summarize above. Summarize gives one number for each saccade.
#By joining back to the original set, we are just adding that one number to all 550 ms of each saccade
g
}else{
gtemp%>%
group_by(neuron,convergent,sacnum) %>%
summarize(dur=first(saccade.dur)) %>%
arrange(desc(dur)) %>% #sorts by duration
mutate(snum=row_number()) %>% #re-numbers saccades in their new order for plotting purposes
left_join(gtemp,.)-> #merges these new numbers with the full dataset.
#The join is only necessary because we used summarize above. Summarize gives one number for each saccade.
#By joining back to the original set, we are just adding that one number to all 550 ms of each saccade
g
}
ggplot(g) +
theme_bw()+ #Removes gray background
xlab('Time from Saccade Onset (ms)')+
geom_histogram(aes(spiketimes,100*..ncount..),alpha=1,binwidth=10,fill='black',color='black')+
# geom_freqpoly(aes(spiketimes,100*..ncount..),alpha=1,bins=40,color='darkred',size=1)+
geom_point(aes(counter,showrasters* snum*5+110),shape='|',size=0.5,color='black')+
facet_grid(neuron~convergent,scales='free_y',space='free_y')+
# facet_wrap(~neuron,ncol=1)+
# facet_wrap(~neuron,ncol=4,scales='free')+
# facet_wrap(~neuron,ncol=4)+
geom_vline(xintercept=0,color='red',size=1)+
# geom_point(aes(counter,verg.change*10-250),color='darkgreen',size=1,shape='-')+
geom_line(aes(counter,rep-50,group=sacnum),color='blue',size=0.5,alpha=1/10)+
geom_line(aes(counter,lep-50,group=sacnum),color='red',size=0.5,alpha=1/10)+
geom_line(aes(counter,repV-100,group=sacnum),color='blue',size=0.5,alpha=1/10)+
geom_line(aes(counter,lepV-100,group=sacnum),color='red',size=0.5,alpha=1/10)+
geom_line(aes(counter,verg.angle*10-300,group=sacnum),color='darkgreen',size=0.5,alpha=1/5)+
# geom_line(aes(counter,sdf-500,group=sacnum),color='orange',size=0.5,alpha=1/5)
# coord_cartesian(xlim=c(-200,300),expand=FALSE)+
theme(axis.text=element_text(size=16),
panel.margin=unit(2,'lines'),
strip.text=element_text(size=16),
axis.title.x=element_text(size=16))+
scale_y_continuous(breaks=c(-300,-250,-200,-150),labels=c(0,5,10,15))+ #re-labels so verg.angle is accurate
ylab('Degrees')+
expand_limits(y=c(-300))
ggsave('testrasters.PNG',height=15,width=5)
ggsave('testrasters.PNG',height=15,width=8)
ggsave('Rastersall.PDF',height=15,width=8)
t<- readRDS('enhancemarked.RDS')
z<- filter(t,neuron=='Bee-211') #Strong burst/pause from SOA
z<- z %>% group_by(time) %>% summarize_each(funs(first))
bufferlength<-100
zz<- joinsaccadesuniform(z,buffer = bufferlength,threshold = 20)
zz %>%
group_by(neuron,sacnum) %>%
mutate(conj.h=(lep+rep)/2,
conj.v=(lepV+repV)/2,
verg.angle=(lep-rep)) %>%
summarize(peak.conj.velocity=maxabs(conj.velocity),
max.verg.velocity=max(verg.velocity),
min.verg.velocity=min(verg.velocity),
conj.h.amp=last(conj.h)-first(conj.h),
conj.v.amp=last(conj.v)-first(conj.v),
# conj.angle=atan2(conj.v,conj.h)*180/pi,
r.amp=sqrt(conj.h.amp^2+conj.v.amp^2),
verg.amp=last(verg.angle)-first(verg.angle)) %>%
mutate(saccade.type='conj',
saccade.type=replace(saccade.type,verg.amp< -2 & r.amp>2,'diverging'),
saccade.type=replace(saccade.type,verg.amp> 2& r.amp>2,'converging'),
saccade.type=replace(saccade.type,is.na(sacnum) | r.amp<2,'no.saccade')) ->
sz
p<- filter(sz,abs(verg.amp)<1 3)
p<- filter(sz,abs(verg.amp)<1)
goodsacs<- unique(p$sacnum)
nsac=length(goodsacs)
manipulate(ggplot(filter(zz,sacnum==goodsacs[sac]))+
# geom_area(aes(counter,sdf),alpha=1/10)+
# geom_point(aes(counter,showrasters+100),shape='|')+
geom_line(aes(counter-bufferlength,(lev-rev)),color='darkblue',alpha=1)+
# geom_line(aes(counter,(lep+rep)/2))+
geom_line(aes(counter-bufferlength,(lev+rev)/2),color='maroon',alpha=1,linetype=1)+
geom_line(aes(counter-bufferlength,(levV+revV)/2),color='maroon',alpha=1,linetype=2)+
# geom_line(aes(counter,enhance.velocity-100),size=2,color='darkblue')+
geom_line(aes(counter-bufferlength,(lep-rep)*10-100),color='darkgreen')+
xlab('Time(ms)')+
ylab('Velocity (deg/s)')+
theme_bw()+
coord_cartesian(ylim=c(-200,200))
,
sac=slider(2,nsac,step=1))
names(sz)
p<- filter(sz,abs(verg.amp)<1,r.amp>4)
goodsacs<- unique(p$sacnum)
nsac=length(goodsacs)
manipulate(ggplot(filter(zz,sacnum==goodsacs[sac]))+
# geom_area(aes(counter,sdf),alpha=1/10)+
# geom_point(aes(counter,showrasters+100),shape='|')+
geom_line(aes(counter-bufferlength,(lev-rev)),color='darkblue',alpha=1)+
# geom_line(aes(counter,(lep+rep)/2))+
geom_line(aes(counter-bufferlength,(lev+rev)/2),color='maroon',alpha=1,linetype=1)+
geom_line(aes(counter-bufferlength,(levV+revV)/2),color='maroon',alpha=1,linetype=2)+
# geom_line(aes(counter,enhance.velocity-100),size=2,color='darkblue')+
geom_line(aes(counter-bufferlength,(lep-rep)*10-100),color='darkgreen')+
xlab('Time(ms)')+
ylab('Velocity (deg/s)')+
theme_bw()+
coord_cartesian(ylim=c(-200,200))
,
sac=slider(2,nsac,step=1))
z<- filter(t,neuron=='Ozette-110')
z<- z %>% group_by(time) %>% summarize_each(funs(first))
z<- mutate(z, verg.velocity=lev-rev,
converge=enhance.type=='convergence',
converge.velocity=replace(verg.velocity,!converge,NA),
diverge=enhance.type=='divergence',
diverge.velocity=replace(verg.velocity,!diverge,NA),
showrasters=replace(rasters,rasters<1,NA))
zz<- joinsaccadesuniform(z,buffer = bufferlength,threshold = 20)
zz %>%
group_by(neuron,sacnum) %>%
mutate(conj.h=(lep+rep)/2,
conj.v=(lepV+repV)/2,
verg.angle=(lep-rep)) %>%
summarize(peak.conj.velocity=maxabs(conj.velocity),
max.verg.velocity=max(verg.velocity),
min.verg.velocity=min(verg.velocity),
conj.h.amp=last(conj.h)-first(conj.h),
conj.v.amp=last(conj.v)-first(conj.v),
# conj.angle=atan2(conj.v,conj.h)*180/pi,
r.amp=sqrt(conj.h.amp^2+conj.v.amp^2),
verg.amp=last(verg.angle)-first(verg.angle)) %>%
mutate(saccade.type='conj',
saccade.type=replace(saccade.type,verg.amp< -2 & r.amp>2,'diverging'),
saccade.type=replace(saccade.type,verg.amp> 2& r.amp>2,'converging'),
saccade.type=replace(saccade.type,is.na(sacnum) | r.amp<2,'no.saccade')) ->
sz
p<- filter(sz,abs(verg.amp)<1,r.amp>4)
goodsacs<- unique(p$sacnum)
nsac=length(goodsacs)
manipulate(ggplot(filter(zz,sacnum==goodsacs[sac]))+
# geom_area(aes(counter,sdf),alpha=1/10)+
# geom_point(aes(counter,showrasters+100),shape='|')+
geom_line(aes(counter-bufferlength,(lev-rev)),color='darkblue',alpha=1)+
# geom_line(aes(counter,(lep+rep)/2))+
geom_line(aes(counter-bufferlength,(lev+rev)/2),color='maroon',alpha=1,linetype=1)+
geom_line(aes(counter-bufferlength,(levV+revV)/2),color='maroon',alpha=1,linetype=2)+
# geom_line(aes(counter,enhance.velocity-100),size=2,color='darkblue')+
geom_line(aes(counter-bufferlength,(lep-rep)*10-100),color='darkgreen')+
xlab('Time(ms)')+
ylab('Velocity (deg/s)')+
theme_bw()+
coord_cartesian(ylim=c(-200,200))
,
sac=slider(2,nsac,step=1))
tp<-readRDS('ModelFitValues.RDS')
neuronchoice=c('Bee-112','Bee-211','Bee-33'))
neuronchoice=c('Bee-112','Bee-211','Bee-33')
ggplot(tp)+
geom_point(aes(verg.angle,Slow.Vergence,shape=area),size=3,alpha=0.2)+
geom_point(aes(verg.angle,Slow.Vergence,shape=area),size=3,color='red',data=filter(tp,neuron==neuronchoice))+
geom_abline(slope=1)+
geom_vline(xintercept=0,linetype=2)+
xlab('Sensitivity to Vergence Angle')+
ylab('Sensitivity to Vergence Velocity')
neuronchoice=c('Bee-112','Bee-211','Bee-33')
ggplot(tp)+
geom_point(aes(verg.angle,Slow.Vergence,shape=area),size=3,alpha=0.2)+
geom_point(aes(verg.angle,Slow.Vergence,shape=area),size=3,color='red',data=filter(tp,neuron %in% neuronchoice))+
geom_abline(slope=1)+
geom_vline(xintercept=0,linetype=2)+
xlab('Sensitivity to Vergence Angle')+
ylab('Sensitivity to Vergence Velocity')
ggplot(tp)+
geom_point(aes(Convergence,Slow.Vergence,shape=area),size=3,alpha=0.2)+
geom_abline(slope=1)+
geom_vline(xintercept=0,linetype=2)+
xlab('Sensitivity to Vergence Angle')+
ylab('Sensitivity to Vergence Velocity')
ggplot(tp)+
geom_point(aes(Convergence,Slow.Vergence,shape=area),size=3,alpha=0.2)+
geom_abline(slope=1)+
geom_vline(xintercept=0,linetype=2)+
xlab('Vergence Velocity Sensitivity during Enhanced Convergence')+
ylab('Vergence Velocity Sensitivity during Slow Vergence Movements')
ggplot(tp)+
geom_density(aes(Slow.Velocity),fill='area')
ggplot(tp)+
geom_density(aes(Slow.Velocity,fill='area'))
ggplot(tp)+
geom_density(aes(Slow.Vergence,fill='area'))
ggplot(tp)+
geom_density(aes(Slow.Vergence,fill='area'),alpha=0.2)
ggplot(tp)+
geom_density(aes(Slow.Vergence,fill=area),alpha=0.2)
ggplot(tp)+
geom_density(aes(Slow.Vergence,fill=area),alpha=0.2)+
theme_bw()
ggplot(tp)+
geom_density(aes(Slow.Vergence,fill=area),alpha=0.3)+
theme_bw()
ggplot(tp)+
geom_density(aes(Slow.Vergence,fill=area),alpha=0.3)+
theme_bw()+
xlab('Sensitivity to Vergence Velocity (spk/s)/(deg/s)')
?geom_density
