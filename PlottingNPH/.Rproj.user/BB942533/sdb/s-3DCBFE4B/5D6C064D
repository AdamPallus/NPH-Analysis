{
    "contents" : "---\ntitle: \"NPH rate position analysis\"\nauthor: \"Adam\"\ndate: \"October 12, 2015\"\noutput: \n  html_document: \n    keep_md: yes\n    toc: yes\n---\n\n```{r echo=FALSE} \nlibrary(knitr)\nopts_chunk$set(echo=FALSE)\n```\n\n```{r,message=FALSE}\nopts_chunk$set(echo=FALSE)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(tidyr)\nlibrary(grid)\n# source('~/GitHub/NPH-Analysis/PlottingNPH/distance.R')\n```\n\n```{r,cache=FALSE}\n#load all the .csv files in the data folder, then add a column naming the neuron, \n#using the file name as the default name, then put them all together in one long data frame\n\n#path<-\"~/GitHub/NPH-Analysis/data/\"\n#path<-\"~/GitHub/NPH-Analysis/testdata/\"\npath<-\"~/GitHub/NPH-Analysis/practicedata/\"\nfiles <- list.files(path=path,pattern='*.csv')\nt<-data.frame()\nfor (i in 1:length(files)) {\n  temp <- read.csv(paste(path,files[i],sep=''))\n  temp$neuron<-gsub('.csv','',files[i])\n  t <-rbind(t,temp)\n}\n```\n\nFirst I will plot the average firing rate of the neuron while the eyes are in various positions. I've restricted my analysis to periods when the eyes are not in motion using a simple eye velocity threshold. I require both the vertical and horizontal eye position to be less than one. This allows for pre-movement burst activity to potentially interfere with the static analysis. \n\n```{r viewingEyeCalc}\n# t <- mutate(t,RightViewing=distance(rep,repV,thp,tvp)<distance(lep,lepV,thp,tvp)) \n# t$Veye='R'\n# t$Veye[!t$RightViewing]='L'\n# \n# t<-select(t,-RightViewing)\n\n\n```\n\n\n```{r}\nthresh=100 #points with velocity below threshold are considered fixation\n\n#choose just the points of fixation, then bin the data into 1 degree bins (using round)\n#and calculate the mean firing rate during all the times when the eye is at each position\nt %>%\n  filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%\n  mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%\n  # group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron,Veye) %>%\n  group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%\n  summarize(fr=mean(sdf)) %>%\n  ungroup(.) %>%\n  #use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position\n  mutate(time=row_number(fr)) %>%\n  gather(temp,P,1:4) %>%\n  separate(temp,c(\"Eye\",\"HV\")) %>%\n  spread(HV,P) ->\n  s\n\n\n```\n\n```{r gridplot, fig.height=40,fig.width=10}\n\n#Just show cells I want\n#s <- filter(s,neuron %in% c(\"Bee6\",\"BeeX1\",\"BeeX2\",\"BeeX3a\",\"BeeX3b\",\"BeeY1\",\"BeeZ1\"))\n#s <- filter(s,neuron %in% c(\"Bee6\",\"BeeZ1\"))\n\n#Create a scaled firing rate by simply dividing by the maximum firing rate in any bin\ns %>%\n  # filter(Veye==Eye) %>%\n  group_by(neuron) %>%\n  mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->\n  ss\n\n#plot\nqplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+\n  scale_fill_gradient(low='black',high='orange')\n```\n\nNext, let's show the rate position curves for horizontal and vertical individually.\n\n```{r}\nt %>%\n  filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%\n  # select(sdf,rep,repV,lep,lepV,neuron,Veye) %>%\n  dplyr::select(sdf,rep,repV,lep,lepV,neuron) %>%\n  rename(R.Hep=rep,R.Vep=repV, L.Hep=lep,L.Vep=lepV,fr=sdf) %>%\n  #use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position\n  mutate(time=row_number(fr))%>%\n  gather(temp,P,2:5) %>%\n  separate(temp,c(\"Eye\",\"HV\")) ->\n  static\n```\n\n```{r RightEye, fig.height=40,fig.width=10}\nstatic$plotHV<-as.factor(static$HV)\nlevels(static$plotHV)<-c(\"Horizontal Eye Position\",\"Vertical Eye Position\")\n\nstatic %>%\n  filter(Eye==\"R\") %>%\n  ggplot(aes(P,fr))+facet_grid(neuron~plotHV)+geom_point(alpha=1/20)+\n  ggtitle('Right Eye')+\n  stat_smooth(method='lm')\n\n# static %>%\n#   filter(Eye==Veye) %>%\n#   ggplot(aes(P,fr))+facet_grid(neuron~plotHV)+geom_point(alpha=1/20)+\n#   ggtitle('Viewing Eye')+\n#   stat_smooth(method='lm')\n\n```\n\n```{r LeftEye, fig.height=40,fig.width=10}\nstatic %>%\n  filter(Eye==\"L\") %>%\n  ggplot(aes(P,fr))+facet_grid(neuron~plotHV)+geom_point(alpha=1/20)+\n  ggtitle('Left Eye')+\n  stat_smooth(method='lm')\n```\n\nNext, I will create a table of the linear regression coefficients for the formula $$F_r=b+k_hE_h + k_hE_v$$, where $E_h$ and $E_v$ are the horizontal and vertical eye positions during periods where the eye velocity is less than `r thresh`. \n\n```{r statTable}\nstatic %>% \n  select(-plotHV) %>%\n  spread(HV,P) %>%\n  filter(Eye ==\"R\") %>%\n  group_by(neuron) %>%\n  do(m=summary(lm(fr~Hep+Vep,data=.))$coefficients) %>%\n  mutate(r.h.slope=m[2],r.v.slope=m[3],r.h.p=m[11],r.v.p=m[12]) %>%\n  select(-m) %>%\n  mutate(r.angle=atan2(r.v.slope,r.h.slope)*180/pi) ->\n  r\n\nstatic %>% \n  select(-plotHV) %>%\n  spread(HV,P) %>%\n  filter(Eye ==\"L\") %>%\n  group_by(neuron) %>%\n  do(m=summary(lm(fr~Hep+Vep,data=.))$coefficients) %>%\n  mutate(l.h.slope=m[2],l.v.slope=m[3],l.h.p=m[11],l.v.p=m[12]) %>%\n  select(-m) %>%\n  mutate(l.angle=atan2(l.v.slope,l.h.slope)*180/pi) ->\n  l\n\nrl<-left_join(r,l,by=\"neuron\")\n\nrl %>% \n  separate(neuron,c(\"animal\",\"cellnum\")) %>%\n  arrange(animal,as.numeric(cellnum)) ->\n  rl\n\nkable(rl)\n```\n\nNow, let's plot the vectors of the preferred position for each cell.\n\n```{r DirectionPlot,fig.height=5,fig.width=5}\nrl %>%\n  select(c(1,2,3,4,8,9)) %>%\n  gather(\"type\",\"slope\",3:6) %>%\n  separate(type,c(\"eye\",\"HV\",\"x\")) %>%\n  select(-x) %>%\n  spread(HV,slope)%>%\n  ggplot(.) +\n  geom_segment(aes(x=0,xend=h,y=0,yend=v,col=eye),size=1.0,arrow=arrow(20))+\n  facet_grid(animal~.)+\n  xlab(\"Horizontal Slope\")+\n  ylab(\"Vertical Slope\") +\n  scale_color_manual(values=c(\"blue\",\"red\"))+\n  coord_fixed(xlim=c(-3.5,3.5),ylim=c(-3.5,3.5))\n\n```\n\n```{r DirectionPlotSig,fig.height=5,fig.width=5}\nrl %>%\n  filter(r.h.p<0.001, r.v.p<0.001) %>%\n  select(c(1,2,3,4,8,9)) %>%\n  gather(\"type\",\"slope\",3:6) %>%\n  separate(type,c(\"eye\",\"HV\",\"x\")) %>%\n  select(-x) %>%\n  spread(HV,slope)-> \n  p\nif (nrow(p)> 0) { #make sure at least one cell is significant\n  ggplot(p) +\n  geom_segment(aes(x=0,xend=h,y=0,yend=v,col=eye),size=1.0,arrow=arrow(20))+\n  facet_grid(animal~.)+\n  xlab(\"Horizontal Slope\")+\n  ylab(\"Vertical Slope\") +\n  scale_color_manual(values=c(\"blue\",\"red\"))+\n    coord_fixed(xlim=c(-3.5,3.5),ylim=c(-3.5,3.5))\n  ggtitle(\"Only Signficant Slopes\")\n}\n\n```\n\nThe follwing plot shows the average of the absolute value of the slopes for each animal.\n\n```{r AverageSlopes}\nrl %>%\n  select(c(1,2,3,4,8,9)) %>%\n  gather(\"type\",\"slope\",3:6) %>%\n  separate(type,c(\"eye\",\"HV\",\"x\")) %>%\n  select(-x) %>%\n  spread(HV,slope)%>%\n  group_by(animal,eye) %>%\n  summarize(h=mean(abs(h)),v=mean(abs(v))) %>%\n  ggplot(.) +\n  geom_segment(aes(x=0,xend=h,y=0,yend=v,col=eye),size=1.0,arrow=arrow(20))+\n  facet_grid(animal~.)+\n  xlab(\"Horizontal Slope\")+\n  ylab(\"Vertical Slope\") +\n  scale_color_manual(values=c(\"blue\",\"red\"))+\n  coord_fixed(xlim=c(-3.5,3.5),ylim=c(-3.5,3.5))\n\n```\n\nIn the next analyses, we will evaluate the average firing rate during each period of fixation. First, we identify saccades using a simple velocity threshold and mark them using a buffer of 15ms. The remaining periods are considered fixations.\n\n```{r meanFixation}\n\nfindSaccades<-function(ev){\n  \n  i<-which(abs(ev)>10) #find all the times when speed > threshold\n  sacoff<-which(diff(i)>15) #minimum duration of an accepted saccade\n  sacon<-c(1,sacoff+1) #first saccade\n  sacoff<-c(sacoff,length(i)) #end of last saccade\n  saccade.onset<-i[sacon] #get actual times\n  saccade.offset<-i[sacoff] \n  return(data.frame(saccade.onset,saccade.offset))\n}\n\nmarkSaccades<-function(ev){\n  #this function finds and marks saccades given a velocity input\n  stimes<-findSaccades(ev)\n  \n  nsaccades=nrow(stimes)\n  \n  #add 10ms buffer to saccade onset and offset\n  #extra code to make sure there is at least that much space in the data\n  buffer<- 50\n  if(stimes$saccade.onset[1]>buffer+1){\n  stimes$saccade.onset=stimes$saccade.onset-10\n  }else{\n    stimes$saccade.onset[2:nsaccades] = stimes$saccade.onset[2:nsaccades]-10\n    stimes$saccade.onset[1]=1\n  }\n  if (stimes$saccade.offset[nsaccades]+buffer<length(ev)){\n    stimes$saccade.offset=stimes$saccade.offset+buffer\n  }else{\n    stimes$saccade.offset[1:nsaccades-1]=stimes$saccade.offset[1:nsaccades-1]+buffer\n    stimes$saccade.offset[nsaccades]=length(ev)\n  }\n    \n  s<-1:length(ev)*0\n  \n  for (k in 1:nsaccades){\n    s[stimes$saccade.onset[k]:stimes$saccade.offset[k]]<-k\n    if(k>1){\n      s[stimes$saccade.offset[k-1]:stimes$saccade.onset[k]]<-(k*-1)\n    }\n  }\n  s[1:stimes$saccade.onset[1]]<- -1\n  s[stimes$saccade.offset[nrow(stimes)]:length(s)]<- (nrow(stimes)*-1)\n  return(s)\n}\n```\n\n```{r plotfixations,fig.height=46,fig.width=6}\n#use the created functions to mark the saccades\nt %>%\n  mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2)) %>%\n  filter(s<0) %>% #just look at periods of fixation\n  group_by(s,neuron) %>%\n  summarize(R.Horizontal=mean(rep),L.Horizontal=mean(lep),R.Vertical=mean(repV),L.Vertical=mean(lepV),fr=mean(sdf)) %>%\n  group_by(neuron)%>%\n  mutate(maxFR=max(fr),scaledfr=fr/maxFR) ->\n  tt\nqplot(R.Horizontal,R.Vertical,color=scaledfr,size=8,data=tt)+facet_grid(neuron~.)\n```\n\n```{r plotregressions,fig.height=46,fig.width=10}\n\ntt %>%\n  gather(temp,P,3:6) %>%\n  separate(temp,c(\"Eye\",\"HV\")) ->\n  tc\n  qplot(P,scaledfr,data=tc,color=Eye,alpha=0.2)+facet_grid(neuron~HV)+\n    xlab('Eye Position (degrees)')+\n    ggtitle(\"Mean FR (scaled) during Fixation\")\n  \n  qplot(P,fr,data=tc,color=Eye,alpha=0.2)+facet_grid(neuron~HV)+\n    xlab('Eye Position (degrees)')+\n    ggtitle(\"Mean FR during Fixation\")\n```\n\n\n```{r replot,fig.height=46,fig.width=10}\n#    qplot(P,fr,data=static,color=Eye,alpha=0.2)+facet_grid(neuron~HV)+\n#    xlab('Eye Position (degrees)')+\n#    ggtitle(\"Mean FR during Fixation\")\n```\n  \n",
    "created" : 1444337466367.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1978164129",
    "id" : "5D6C064D",
    "lastKnownWriteTime" : 1446234172,
    "path" : "~/GitHub/NPH-Analysis/PlottingNPH/RatePositionAnalysisExtended.Rmd",
    "project_path" : "RatePositionAnalysisExtended.Rmd",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}