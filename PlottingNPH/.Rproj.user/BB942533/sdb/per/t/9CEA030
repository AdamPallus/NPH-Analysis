{
    "contents" : "---\ntitle: \"NPH rate position analysis\"\nauthor: \"Adam\"\ndate: \"October 5, 2015\"\noutput: \n  html_document: \n    keep_md: yes\n---\n\n\n```{r,message=FALSE}\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(tidyr)\n```\n\n```{r,cache=FALSE}\n#load all the .csv files in the data folder, then add a column naming the neuron, \n#using the file name as the default name, then put them all together in one long data frame\npath<-\"~/GitHub/NPH-Analysis/data/\"\nfiles <- list.files(path=path,pattern='*.csv')\nt<-data.frame()\nfor (i in 1:length(files)) {\n  temp <- read.csv(paste(path,files[i],sep=''))\n  temp$neuron<-gsub('.csv','',files[i])\n  t <-rbind(t,temp)\n}\n```\n\nFirst I will plot the average firing rate of the neuron while the eyes are in various positions. I've restricted my analysis to periods when the eyes are not in motion using a simple eye velocity threshold. I require both the vertical and horizontal eye position to be less than one. This allows for pre-movement burst activity to potentially interfere with the static analysis. \n\n```{r}\nthresh=1.5 #points with velocity below threshold are considered fixation\n\n#choose just the points of fixation, then bin the data into 1 degree bins (using round)\n#and calculate the mean firing rate during all the times when the eye is at each position\nt %>%\n  filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%\n  mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%\n  group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%\n  summarize(fr=mean(sdf)) %>%\n  ungroup(.) %>%\n  #use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position\n  mutate(time=row_number(fr)) %>%\n  gather(temp,P,1:4) %>%\n  separate(temp,c(\"Eye\",\"HV\")) %>%\n  spread(HV,P) ->\n  s\nlevels(s$Eye)<-c(\"Right Eye\",\"Left Eye\") #Change R/L into Right Eye/Left Eye\n```\n\n```{r, fig.height=12,fig.width=9}\n\n#Just show cells I want\n#s <- filter(s,neuron %in% c(\"Bee6\",\"BeeX1\",\"BeeX2\",\"BeeX3a\",\"BeeX3b\",\"BeeY1\",\"BeeZ1\"))\n#s <- filter(s,neuron %in% c(\"Bee6\",\"BeeZ1\"))\n\n#Create a scaled firing rate by simply dividing by the maximum firing rate in any bin\ns %>%\n  group_by(neuron) %>%\n  mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->\n  ss\n\n#plot\nqplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+\n  scale_fill_gradient(low='black',high='orange')\n```\n\nNext, let's show the rate position curves for horizontal and vertical individually.\n\n```{r}\nt %>%\n  filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%\n  select(1,2,4,6,8,10) %>%\n  rename(R.Hep=rep,R.Vep=repV, L.Hep=lep,L.Vep=lepV,fr=sdf) %>%\n  #use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position\n  mutate(time=row_number(fr))%>%\n  gather(temp,P,2:5) %>%\n  separate(temp,c(\"Eye\",\"HV\")) ->\n  static\n```\n\n```{r RightEye, fig.height=11,fig.width=8}\nstatic$plotHV<-as.factor(static$HV)\nlevels(static$plotHV)<-c(\"Horizontal Eye Position\",\"Vertical Eye Position\")\n\nstatic %>%\n  filter(Eye==\"R\") %>%\n  qplot(P,fr,data=.)+facet_grid(neuron~plotHV)+\n  ggtitle('Right Eye')+\n  stat_smooth(method='lm')\n\n```\n\n```{r LeftEye, fig.height=11,fig.width=8}\nstatic %>%\n  filter(Eye==\"L\") %>%\n  qplot(P,fr,data=.)+facet_grid(neuron~plotHV)+\n  ggtitle('Left Eye')+\n  stat_smooth(method='lm')\n```\n\nNext, I will create a table of the linear regression coefficients for the formula $$F_r=b+k_hE_h + k_hE_v$$, where $E_h$ and $E_v$ are the horizontal and vertical eye positions during periods where the eye velocity is less than `r thresh`. \n\n```{r statTable}\nstatic %>% \n  select(-plotHV) %>%\n  spread(HV,P) %>%\n  filter(Eye ==\"R\") %>%\n  group_by(neuron) %>%\n  do(r.h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],r.v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%\n  mutate(r.angle=atan2(r.v.slope,r.h.slope)*180/pi)->\n  r\n\nstatic %>% \n  select(-plotHV) %>%\n  spread(HV,P) %>%\n  filter(Eye ==\"L\") %>%\n  group_by(neuron) %>%\n  do(l.h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],l.v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%\n  mutate(l.angle=atan2(l.v.slope,l.h.slope)*180/pi)->\n  l\n\nrl<-left_join(r,l,by=\"neuron\")\nrl<-rl[c(1,2,3,5,6,4,7)] #rearrange columns \nkable(rl)\n\n\n\n```\n",
    "created" : 1443805901493.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1799593352",
    "id" : "9CEA030",
    "lastKnownWriteTime" : 1444086429,
    "path" : "~/GitHub/NPH-Analysis/PlottingNPH/RatePositionAnalysis.Rmd",
    "project_path" : "RatePositionAnalysis.Rmd",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_markdown"
}