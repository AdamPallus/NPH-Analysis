{
    "contents" : "---\ntitle: \"NPH Bootstrap Parameter Estimates\"\nauthor: \"Adam\"\ndate: \"October 23, 2015\"\noutput: \n  html_document: \n  keep_md: yes\ntoc: yes\n---\n\n```{r echo=FALSE} \nlibrary(knitr)\nopts_chunk$set(echo=FALSE)\n```\n\n```{r,message=FALSE}\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(tidyr)\nlibrary(grid)\nlibrary(broom)\nsource('~/GitHub/NPH-Analysis/PlottingNPH/bootstrap.R')\n```\n\n```{r,cache=FALSE}\n#load all the .csv files in the data folder, then add a column naming the neuron, \n#using the file name as the default name, then put them all together in one long data frame\n\n#path <- \"~/GitHub/NPH-Analysis/data/\"\npath <- \"~/GitHub/NPH-Analysis/practicedata/\"\nfiles <- list.files(path=path,pattern='*.csv')\nt<-data.frame()\nfor (i in 1:length(files)) {\n  temp <- read.csv(paste(path,files[i],sep=''))\n  temp$neuron<-gsub('.csv','',files[i])\n  t <-rbind(t,temp)\n}\n```\n\n\n```{r bootstrapfor}\n#it looks like this function works, but will need to be rewritten to use larger bootstrap numbers\nt %>% \n  group_by(neuron) %>% \n  do(boot=bootstrap(.,100)) -> \n  b\nci<-data.frame()\nalpha<- 0.5\n#this is a hack because the boostrap function doesn't keep track of groups that go into the function\nfor (i in 1:nrow(b)){\n  b$boot[[i]] %>%\n    do(tidy(lm(sdf~rep+lep+repV+lepV,.))) %>%\n    #do(tidy(lm(sdf~rep+lep+repV+lepV+rev+lev+revV+levV,.))) %>%\n    group_by(term) %>%\n    summarize(low=quantile(estimate, alpha / 2),\n            high=quantile(estimate, 1 - alpha / 2))->\n    x\n  x$neuron<- b$neuron[i]\n  ci<-rbind(ci,x)\n}\n\n```\n\n```{r paramstable}\nci %>% \n  select(c(1,2,4)) %>% \n  spread(term,low) -> \n  c\nci %>% \n  select(c(1,3,4)) %>% \n  spread(term,high) -> \n  ch\nfull_join(c,ch) %>%\n  arrange(neuron) ->\n  cij\nkable(cij)\n\n```",
    "created" : 1446055245881.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4058697984",
    "id" : "6DBCCDB",
    "lastKnownWriteTime" : 1445993392,
    "path" : "~/GitHub/NPH-Analysis/PlottingNPH/NPHparams.Rmd",
    "project_path" : "NPHparams.Rmd",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_markdown"
}