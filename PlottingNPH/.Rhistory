install.packages('broom')
?bootstrap
source(bootstrap)
source('bootstrap.R')
library(knitr)
opts_chunk$set(echo=FALSE)
opts_chunk$set(echo=FALSE)
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
library(broom)
source('boostrap.R')
#load all the .csv files in the data folder, then add a column naming the neuron,
#using the file name as the default name, then put them all together in one long data frame
#path<-"~/GitHub/NPH-Analysis/data/"
path<-"~/GitHub/NPH-Analysis/testdata/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i],sep=''))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
head(t)
t %>% bootstrap(100) -> b
head(b)
t %>% bootstrap(100) %>% do(tidy(lm(fr~rep+lep+repV+lepV))) -> b
t %>% bootstrap(100) %>% do(tidy(lm(sdf~rep+lep+repV+lepV))) -> b
t %>% bootstrap(100) %>% do(tidy(lm(sdf~rep+lep+repV+lepV,.))) -> b
head(b)
b
5+5
t %>%
bootstrap(100) %>%
group_by(neuron) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) %>%
group_by(term,neuron) %>%
summarize(low=quantile(estimate, alpha / 2),
high=quantile(estimate, 1 - alpha / 2)) ->
b
alpha<-0.5
t %>%
bootstrap(100) %>%
group_by(neuron) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) %>%
group_by(term,neuron) %>%
summarize(low=quantile(estimate, alpha / 2),
high=quantile(estimate, 1 - alpha / 2)) ->
b
head(b)
b
alpha<-0.5
t %>%
bootstrap(999) %>%
group_by(neuron) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) %>%
group_by(term,neuron) %>%
summarize(low=quantile(estimate, alpha / 2),
high=quantile(estimate, 1 - alpha / 2)) ->
b
b
alpha<-0.5
t %>%
group_by(neuron) %>%
bootstrap(999) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) %>%
group_by(term,neuron) %>%
summarize(low=quantile(estimate, alpha / 2),
high=quantile(estimate, 1 - alpha / 2)) ->
b
alpha<-0.5
t %>%
group_by(neuron) %>%
bootstrap(999) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) ->
b
head(b)
t %>%
group_by(neuron) %>%
summarize(bootstrap(100)) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) ->
b
t %>%
group_by(neuron) %>%
do(bootstrap(100)) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) ->
b
t %>%
group_by(neuron) %>%
do(bootstrap(.,100)) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) ->
b
head(b)
b %>%
group_by(term,neuron) %>%
summarize(low=quantile(estimate, alpha / 2),
high=quantile(estimate, 1 - alpha / 2)) ->
bb
head(bb)
nrow(b)
b
attr(b)
b$attr
?attr
attr(b,groups)
attr(b,'groups')
attr(b,'group')
t %>%
group_by(neuron) %>%
summarize(bootstrap(.,100))%>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) ->
b
t %>%
group_by(neuron) %>%
summarize(boot=bootstrap(.,100))%>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) ->
b
t %>%
group_by(neuron) %>%
do(boot=bootstrap(.,100))%>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) ->
b
t %>%
group_by(neuron) %>%
do(boot=bootstrap(.,100))->
b
head(b)
b$boot
b$boot[1]
b
t %>%
group_by(neuron) %>%
do(boot=bootstrap(.,100)) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.$boot))) ->
b
head(b)
b
nrow(b)
t %>%
group_by(neuron) %>%
do(boot=bootstrap(.,100)) %>%
do(augment(lm(sdf~rep+lep+repV+lepV,.$boot))) ->
b
head(b)
nrow(b)
b %>%
group_by(term,neuron) %>%
summarize(low=quantile(estimate, alpha / 2),
high=quantile(estimate, 1 - alpha / 2)) ->
bb
t %>%
filter(neuron=="Bee-20") %>%
bootstrap(100) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) ->
b
b
b %>%
group_by(term) %>%
summarize(low=quantile(estimate, alpha / 2),
high=quantile(estimate, 1 - alpha / 2)) ->
bb
bb
t %>%
bootstrap(100) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) ->
b
head(b)
t %>%
bootstrap(10) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))neuron=neuron) ->
b
t %>%
bootstrap(10) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.)),neuron=neuron) ->
b
t %>%
bootstrap(10) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.)),neuron) ->
b
alpha<-0.5
t %>%
bootstrap(10) %>%
group_by(neuron) %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) ->
b
head(b)
nrow(b)
b
bootstrap(t,10)
bootstrap(t,10) %>% group_by(neuron)
t%>%
group_by(neuron) %>%
bootstrap(10) ->b
b
tail(b)
t%>%
group_by(neuron) %>%
bootstrap(10) %>%
group_by(neuron,replicate)
t%>%
group_by(neuron) %>%
bootstrap(10) ->b
groups(b)
t%>%
group_by(neuron) %>%
bootstrap(10) %>%
group_by(neuron) ->
b
b
t%>%
group_by(neuron) %>%
bootstrap(10)  ->
b
ungroup(b)
b
t %>%
bootstrap(10) ->
bb
head(b)
head(bb)
tail(b)
tail9bb
tail(bb)
t%>%
group_by(neuron) %>%
do(boot=bootstrap(10))  ->
b
t%>%
group_by(neuron) %>%
do(boot=bootstrap(.,10))  ->
b
head(b)
group_by(b,boot)
group_by(b,neuron)
t%>%
group_by(neuron) %>%
do(boot=bootstrap(.,10)) %>%
group_by(neuron) %>%
do(tidy(lm(sdf~rep+lep,.$boot))) ->
b
head(b)
b$boot[1]
?rep
rep(1,10)
rep(2,10)
head(t)
opts_chunk$set(echo=FALSE)
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
library(broom)
source('boostrap.R')
library(knitr)
opts_chunk$set(echo=FALSE)
opts_chunk$set(echo=FALSE)
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
library(broom)
source('boostrap.R')
setwd('~/GitHub/NPH-Analysis')
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
library(broom)
source('boostrap.R')
library(broom)
setwd('~/GitHub/NPH-Analysis')
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
library(broom)
source(boostrap.R)
source('boostrap.R')
dir
wd
setwd('~/GitHub/NPH-Analysis')
source(bootstrap.R)
source('bootstrap.R')
source('~/bootstrap.R')
setwd('~/GitHub/NPH-Analysis')
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
library(broom)
source(boostrap.R)
#load all the .csv files in the data folder, then add a column naming the neuron,
#using the file name as the default name, then put them all together in one long data frame
#path <- "~/GitHub/NPH-Analysis/data/"
path <- "~/GitHub/NPH-Analysis/testdata/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i],sep=''))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
head(t)
source('~/GitHub/NPH-Analysis/PlottingNPH/bootstrap.R')
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
library(broom)
source('~/boostrap.R')
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
library(broom)
source('~/GitHub/Nph-Analysis/boostrap.R')
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
library(broom)
source('bootstrap.R')
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
library(broom)
source('~/GitHub/Nph-Analysis/boostrap.R')
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
library(broom)
source('~/GitHub/NPH-Analysis/PlottingNPH/bootstrap.R')
g<- group_by(t,sdf)
head(g)
attr(g)
groups(g)
attr(g,"group_sizes")
gs<-attr(g,"group_sizes")
head(gs)
groups(g)
head(g)
g<- group_by(t,sdf)
gs<-attr(g,"group_sizes")
gs
g<- group_by(t,neuron)
gs<-attr(g,"group_sizes")
gs
attr(g,"indices")
g<- group_by(t,neuron,eye)
head(t)
g<- group_by(t,neuron,rev)
g
groups(g)
alpha<-0.5
t %>% group_by(neuron) %>% do(boot=ootstrap(100)) -> b
t %>% group_by(neuron) %>% do(boot=bootstrap(100)) -> b
t %>% group_by(neuron) %>% do(boot=bootstrap(.,100)) -> b
head(b)
nrow(b)
x<- tidy(lm(sdf~rep+lep+repV+lepV,b$boot[i]))
x<- tidy(lm(sdf~rep+lep+repV+lepV,b$boot[1]))
head(b$boot[1])
x<- tidy(lm(sdf~rep+lep+repV+lepV,b$boot[[1]]))
head(x)
head(x,20)
do(b$boot[[1]],tidy(lm(sdf~rep+lep+repV+lepV,.)))
bg<-do(b$boot[[1]],tidy(lm(sdf~rep+lep+repV+lepV,.)))
head(bg)
t %>%
group_by(neuron) %>%
do(boot=bootstrap(.,100)) ->
b
for (i in 1:nrow(b)){
b$boot[[i]] %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) %>%
group_by(term) %>%
summarize(low=quantile(estimate, alpha / 2),
high=quantile(estimate, 1 - alpha / 2))->
b$ci[i]
}
head(b)
b$ci
t %>%
group_by(neuron) %>%
do(boot=bootstrap(.,100)) ->
b
for (i in 1:nrow(b)){
b$boot[[i]] %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) %>%
group_by(term) %>%
summarize(low=quantile(estimate, alpha / 2),
high=quantile(estimate, 1 - alpha / 2))->
b$ci[[i]]
}
b
b$ci[1]
bb<-b$ci[1]
bb$neuron='Bee-20'
bb
bb<-b$ci[[1]]
bb$neuron='Bee-20'
bb
bbb<-b$ci[[2]]
bbb$neuron='Bee-909'
bbb
bx<- cbind(bb,bbb)
bx
bx<- rbind(bb,bbb)
bx
b$neuron[1]
t %>%
group_by(neuron) %>%
do(boot=bootstrap(.,10)) ->
b
ci<-data.frame()
#this is a hack because the boostrap function doesn't keep track of groups that go into the function
for (i in 1:nrow(b)){
b$boot[[i]] %>%
do(tidy(lm(sdf~rep+lep+repV+lepV,.))) %>%
group_by(term) %>%
summarize(low=quantile(estimate, alpha / 2),
high=quantile(estimate, 1 - alpha / 2))->
x
x$neuron<- b$neuron[i]
ci<-rbind(ci,x)
}
head(ci)
ci
spread(ci,term)
spread(ci,term,low)
head(ci)
spread(ci,low,term)
spread(ci,term,low,high)
spread(ci,term,high)
spread(ci,neuron,term)
?spread
spread(ci,term,neuron)
ci
ci %>% select(c(1,2,4)) %>% spread(term,low -> c)
ci %>% select(1,2,4) %>% spread(term,low) -> c)
ci %>% select(c(1,2,4)) %>% spread(term,low) -> c)
ci %>% select(c(1,2,4)) %>% spread(term,low) -> c
c
ci %>% select(c(1,3,4)) %>% spread(term,low) -> ch
ci %>% select(c(1,3,4)) %>% spread(term,high) -> ch
ch
full_join(c,ch)
cc<-full_join(c,ch)
arrange(cc,neuron)
ci %>%
select(c(1,2,4)) %>%
spread(term,low) ->
c
ci %>%
select(c(1,3,4)) %>%
spread(term,high) ->
ch
full_join(c,ch) %>%
arrange(neuron) %>%
xtable(.)
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
library(broom)
source('~/GitHub/NPH-Analysis/PlottingNPH/bootstrap.R')
ci %>%
select(c(1,2,4)) %>%
spread(term,low) ->
c
ci %>%
select(c(1,3,4)) %>%
spread(term,high) ->
ch
full_join(c,ch) %>%
arrange(neuron) %>%
xtable(.)
ci %>%
select(c(1,2,4)) %>%
spread(term,low) ->
c
ci %>%
select(c(1,3,4)) %>%
spread(term,high) ->
ch
full_join(c,ch) %>%
arrange(neuron) %>%
kable(.)
t %>%
group_by(neuron) %>%
do(boot=bootstrap(.,1999)) ->
b
warnings()
help memory.size
help(memory.size)
memory.size
memory.limit
