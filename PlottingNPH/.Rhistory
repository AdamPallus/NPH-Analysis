ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
temp<-bootci(t,n=10,alpha=0.5,formula='sdf~rep')
temp$neuron<-gsub('.csv','',files[i])
ci<-rbind(ci,temp)
}
ci %>%
select(c(1,2,4)) %>%
spread(term,low) ->
c
ci %>%
select(c(1,3,4)) %>%
spread(term,high) ->
ch
full_join(c,ch) %>%
arrange(neuron) ->
cij
kable(cij)
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
temp<-bootci(t,n=10,alpha=0.5,formula='sdf~rep+repV')
temp$neuron<-gsub('.csv','',files[i])
ci<-rbind(ci,temp)
}
ci %>%
select(c(1,2,4)) %>%
spread(term,low) ->
c
ci %>%
select(c(1,3,4)) %>%
spread(term,high) ->
ch
full_join(c,ch) %>%
arrange(neuron) ->
cij
kable(cij)
ci %>%
select(c(1,2,4)) %>%
spread(term,low) ->
c
ci %>%
select(c(1,3,4)) %>%
spread(term,high) ->
ch
full_join(c,ch) %>%
arrange(neuron) %>%
mutate(angle=atan2(rep,repV)*180/pi)->
cij
kable(cij)
ci %>%
select(c(1,2,4)) %>%
spread(term,low) ->
c
ci %>%
select(c(1,3,4)) %>%
spread(term,high) ->
ch
full_join(c,ch) %>%
arrange(neuron) %>%
mutate(angle=atan2(repV,rep)*180/pi)->
cij
kable(cij)
path <- "~/GitHub/NPH-Analysis/data/"
#path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
temp<-bootci(t,n=10,alpha=0.5,formula='sdf~rep+repV')
temp$neuron<-gsub('.csv','',files[i])
ci<-rbind(ci,temp)
}
ci %>%
select(c(1,2,4)) %>%
spread(term,low) ->
c
ci %>%
select(c(1,3,4)) %>%
spread(term,high) ->
ch
full_join(c,ch) %>%
arrange(neuron) %>%
mutate(angle=atan2(repV,rep)*180/pi)->
cij
kable(cij)
path <- "~/GitHub/NPH-Analysis/data/"
#path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
temp<-bootci(t,n=10,alpha=0.05,formula='sdf~rep+repV')
temp$neuron<-gsub('.csv','',files[i])
ci<-rbind(ci,temp)
}
ci %>%
select(c(1,2,4)) %>%
spread(term,low) ->
c
ci %>%
select(c(1,3,4)) %>%
spread(term,high) ->
ch
full_join(c,ch) %>%
arrange(neuron) %>%
mutate(angle=atan2(repV,rep)*180/pi)->
cij
kable(cij)
head(T)
head(t)
tt<-mutate(t,leadrep=lead(rep,10))
head(tt)
tail(tt)
head(tt,20)
bootci <- function(t,n=100,alpha=0.05,formula='sdf~rep+lep',leadtime=10){
t %>%
mutate(sdf=lag(sdf,leadtime)) %>%
bootstrap(n) %>%
do(tidy(lm(formula,.))) %>%
group_by(term) %>%
summarize(low=quantile(estimate, alpha / 2),
high=quantile(estimate, 1 - alpha / 2)) ->
ci
return(ci)
}
path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
temp<-bootci(t,n=10,alpha=0.05,formula='sdf~rep+repV+rev+revV')
temp$neuron<-gsub('.csv','',files[i])
ci<-rbind(ci,temp)
}
ci %>%
select(c(1,2,4)) %>%
spread(term,low) ->
c
ci %>%
select(c(1,3,4)) %>%
spread(term,high) ->
ch
full_join(c,ch) %>%
arrange(neuron) %>%
mutate(angle=atan2(repV,rep)*180/pi)->
cij
kable(cij)
path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
temp<-bootci(t,n=10,alpha=0.01,formula='sdf~rep+repV+rev+revV')
temp$neuron<-gsub('.csv','',files[i])
ci<-rbind(ci,temp)
}
ci %>%
select(c(1,2,4)) %>%
spread(term,low) ->
c
ci %>%
select(c(1,3,4)) %>%
spread(term,high) ->
ch
full_join(c,ch) %>%
arrange(neuron) %>%
mutate(angle=atan2(repV,rep)*180/pi)->
cij
kable(cij)
path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
temp<-bootci(t,n=999,alpha=0.01,formula='sdf~rep+repV+rev+revV')
temp$neuron<-gsub('.csv','',files[i])
ci<-rbind(ci,temp)
}
ci %>%
select(c(1,2,4)) %>%
spread(term,low) ->
c
ci %>%
select(c(1,3,4)) %>%
spread(term,high) ->
ch
full_join(c,ch) %>%
arrange(neuron) %>%
mutate(angle=atan2(repV,rep)*180/pi)->
cij
kable(cij)
head(t)
plot(t$sdf)
plot(t$sdf[1:100000])
plot(t$sdf[1:50000])
kube(t$sdf[1:50000])
line(t$sdf[1:50000])
qplot(t$sdf[1:50000])
qplot(t$sdf[1:50000],geom='line')
qplot(t$sdf[1:50000],1:50000)
qplot(1:50000,t$sdf[1:50000])
qplot(1:50000,t$sdf[1:50000],geom="line")
?tidy
?augment
tt<-augment(lm(sdf~rep+lep,t),t)
head(tt)
qplot(1:50000,t$.fitted[1:50000],geom="line")
qplot(1:50000,tt$.fitted[1:50000],geom="line")
lead(1:10,2)
lag(1:10,2)
t %>%
mutate(sdf=lag(sdf,50),time=row_number) %>%
augment(lm(sdflag~rep+lep,.)) %>%
ggplot(aes(time,sdf))+geom_line()
t %>%
mutate(sdf=lag(sdf,50),time=row_number()) %>%
augment(lm(sdflag~rep+lep,.)) %>%
ggplot(aes(time,sdf))+geom_line()
t %>%
mutate(sdf=lag(sdf,50),time=row_number()) %>%
augment(lm(sdflag~rep+lep,.),.) %>%
ggplot(aes(time,sdf))+geom_line()
t %>%
mutate(sdflag=lag(sdf,50),time=row_number()) %>%
augment(lm(sdflag~rep+lep,.),.) %>%
ggplot(aes(time,sdf))+geom_line()
t %>%
mutate(sdflag=lag(sdf,50),time=row_number()) %>%
augment(lm(sdflag~rep+lep,.),.) %>%
ggplot(aes(time,sdf))+geom_line()+geom_line(.fitted)
t %>%
mutate(sdflag=lag(sdf,50),time=row_number()) %>%
augment(lm(sdflag~rep+lep,.),.) ->
p
head(p)
ggplot(p,aes(time,sdf))+geom_line()
ggplot(p,aes(time,sdf))+geom_line()+geom_line(aes(time,.fitted))
ggplot(filter(p,time<50000),aes(time,sdf))+geom_line()+geom_line(aes(time,.fitted))
ggplot(filter(p,time<50000),aes(time,sdf))+geom_line()+geom_line(aes(time,.fitted),color='red')
ggplot(filter(p,time<50000),aes(time,sdf))+geom_area()+geom_line(aes(time,.fitted),color='red')
ggplot(filter(p,time<100000),aes(time,sdf))+geom_area()+geom_line(aes(time,.fitted),color='red')
?augment
ggplot(filter(p,time<100000),aes(time,sdflag))+geom_area()+geom_line(aes(time,.fitted),color='red')
t %>%
mutate(sdflag=lag(sdf,50),time=row_number()) %>%
tidy(lm(sdflag~rep+lep,.),.) ->
p
t %>%
mutate(sdflag=lag(sdf,50),time=row_number()) %>%
tidy(lm(sdflag~rep+lep,.),.) ->
p
tt<-mutate(sdflag=lag(sdf,50),time=row_number)
tt<-mutate(t,sdflag=lag(sdf,50),time=row_number)
tt<-mutate(t,sdflag=lag(sdf,50),time=row_number())
head(tt)
m<-tidy(lm(sdflag~rep+lep))
m<-tidy(lm(sdflag~rep+lep),tt)
m<-tidy(lm(sdflag~rep+lep,tt))
head(m)
m
m<-lm(sdflag~rep+lep,tt)
tt$posmodel<-predict(m,tt)
head(tt)
mv<-lm(sdflag~rep+lep+rev+lev,tt)
tt$pvmodel<-predict(mv,tt)
head(tt)
ggpot2(tt)+geom_area(aes(time,sdflag))
ggplot2(tt)+geom_area(aes(time,sdflag))
ggplot(tt)+geom_area(aes(time,sdflag))
ggpot2(filter(tt,time<50000))+geom_area(aes(time,sdflag))
ggplot(filter(tt,time<50000))+geom_area(aes(time,sdflag))
ggplot(filter(tt,time<50000))+geom_area(aes(time,sdflag))+geom_line(aes(time,posmodel),color=red)+geom_line(aes(time,pvmodel),color="green")
ggplot(filter(tt,time<50000))+geom_area(aes(time,sdflag))+geom_line(aes(time,posmodel),color="red")+geom_line(aes(time,pvmodel),color="green")
ggplot(filter(tt,time<50000))+geom_area(aes(time,sdflag))+geom_line(aes(time,pvmodel),color="green")+geom_line(aes(time,posmodel),color="red")
mv
summary(mv)
summary(m)
addmodelprediction<-function(t){
t <-  mutate(t,sdflag=lag(sdf,50),time=row_number())
m<-lm(sdflag~rep+lep,tt)
mv<-lm(sdflag~rep+lep+rev+lev,tt)
tt$posmodel<-predict(m,tt)
tt$pvmodel<-predict(mv,tt)
ggplot(filter(tt,time<50000))+geom_area(aes(time,sdflag))+geom_line(aes(time,pvmodel),color="green")+geom_line(aes(time,posmodel),color="red")
}
path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
addmodelprediction(t)
}
addmodelprediction<-function(t){
t <-  mutate(t,sdflag=lag(sdf,50),time=row_number())
m<-lm(sdflag~rep+lep,tt)
mv<-lm(sdflag~rep+lep+rev+lev,tt)
tt$posmodel<-predict(m,tt)
tt$pvmodel<-predict(mv,tt)
ggplot(filter(tt,time<50000))+geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+
ggtitle(t$neuron[1])
}
path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
t$neuron<-gsub('.csv','',files[i])
addmodelprediction(t)
}
addmodelprediction<-function(t){
t <-  mutate(t,sdflag=lag(sdf,50),time=row_number())
m<-lm(sdflag~rep+lep,tt)
mv<-lm(sdflag~rep+lep+rev+lev,tt)
tt$posmodel<-predict(m,tt)
tt$pvmodel<-predict(mv,tt)
return(ggplot(filter(tt,time<50000))+geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+
ggtitle(t$neuron[1]))
}
path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
t$neuron<-gsub('.csv','',files[i])
addmodelprediction(t)
}
path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
t$neuron<-gsub('.csv','',files[i])
t<-addmodelprediction(t)
ggplot(filter(t,time<50000))+geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+
ggtitle(t$neuron[1])
}
addmodelprediction<-function(t){
t <-  mutate(t,sdflag=lag(sdf,50),time=row_number())
m<-lm(sdflag~rep+lep,t)
mv<-lm(sdflag~rep+lep+rev+lev,t)
t$posmodel<-predict(m,t)
t$pvmodel<-predict(mv,t)
t
}
path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
t$neuron<-gsub('.csv','',files[i])
t<-addmodelprediction(t)
ggplot(filter(t,time<50000))+geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+
ggtitle(t$neuron[1])
}
head(t)
ggplot(filter(t,time<50000))+geom_area(aes(time,sdflag))+
+     geom_line(aes(time,pvmodel),color="green")+
+     geom_line(aes(time,posmodel),color="red")+
+     ggtitle(t$neuron[1])
ggplot(filter(tt,time<50000))+geom_area(aes(time,sdflag))+geom_line(aes(time,pvmodel),color="green")+geom_line(aes(time,posmodel),color="red")
path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
t$neuron<-gsub('.csv','',files[i])
t<-addmodelprediction(t)
ggplot(filter(tt,time<50000))+
geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+
ggtitle(t$neuron[1])
}
addmodelprediction<-function(t){
t <-  mutate(t,sdflag=lag(sdf,50),time=row_number())
m<-lm(sdflag~rep+lep,t)
mv<-lm(sdflag~rep+lep+rev+lev,t)
t$posmodel<-predict(m,t)
t$pvmodel<-predict(mv,t)
t
}
addmodelprediction<-function(t){
t <-  mutate(t,sdflag=lag(sdf,50),time=row_number())
m<-lm(sdflag~rep+lep,t)
mv<-lm(sdflag~rep+lep+rev+lev,t)
t$posmodel<-predict(m,t)
t$pvmodel<-predict(mv,t)
t
}
path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
t$neuron<-gsub('.csv','',files[i])
t<-addmodelprediction(t)
ggplot(filter(tt,time<50000))+
geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+
ggtitle(t$neuron[1])
}
path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
ci<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
t$neuron<-gsub('.csv','',files[i])
t<-addmodelprediction(t)
ggplot(filter(t,time<50000))+
geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+
ggtitle(t$neuron[1])
}
ggplot(filter(t,time<50000))+
geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+
ggtitle(t$neuron[1])
ggplot(filter(t,time<50000))+
geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+
ggtitle(t$neuron[1])
path <- "~/GitHub/NPH-Analysis/practicedata/"
files <- list.files(path=path,pattern='*.csv')
tt<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
t$neuron<-gsub('.csv','',files[i])
t<-addmodelprediction(t)
tt<- rbind(tt,t)
}
ggplot(filter(t,time<50000))+
geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+facet_grid(.~neuron)
ggplot(filter(tt,time<50000))+
geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+facet_grid(.~neuron)
path <- "~/GitHub/NPH-Analysis/data/"
files <- list.files(path=path,pattern='*.csv')
tt<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
t$neuron<-gsub('.csv','',files[i])
t<-addmodelprediction(t)
tt<- rbind(tt,t)
}
ggplot(filter(tt,time<50000))+
geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+facet_grid(neuron~.)
ggsave('modeltest.pdf',width=8,height=49)
ggsave('modeltest1.png',width=8,height=49)
addmodelprediction<-function(t){
t <-  mutate(t,sdflag=lag(sdf,50),time=row_number())
m<-lm(sdflag~rep+lep,t)
mv<-lm(sdflag~rep+lep+repV+lepV,t)
t$posmodel<-predict(m,t)
t$pvmodel<-predict(mv,t)
t
}
path <- "~/GitHub/NPH-Analysis/data/"
files <- list.files(path=path,pattern='*.csv')
tt<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
t$neuron<-gsub('.csv','',files[i])
t<-addmodelprediction(t)
tt<- rbind(tt,t)
}
ggplot(filter(tt,time<50000))+
geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+facet_grid(neuron~.)
addmodelprediction<-function(t){
library(dplyr)
library(tidyr)
t <-  mutate(t,sdflag=lag(sdf,50),time=row_number())
m<-lm(sdflag~rep+lep,t)
mv<-lm(sdflag~rep+lep+repV+lepV,t)
t$posmodel<-predict(m,t)
t$pvmodel<-predict(mv,t)
t
}
path <- "~/GitHub/NPH-Analysis/data/"
files <- list.files(path=path,pattern='*.csv')
tt<- data.frame()
for (i in 1:length(files)) {
t <- read.csv(paste(path,files[i],sep=''))
t$neuron<-gsub('.csv','',files[i])
t<-addmodelprediction(t)
tt<- rbind(tt,t)
}
library(ggplot2)
ggplot(filter(tt,time<50000))+
geom_area(aes(time,sdflag))+
geom_line(aes(time,pvmodel),color="green")+
geom_line(aes(time,posmodel),color="red")+facet_grid(neuron~.)
