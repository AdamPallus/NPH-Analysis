}
s[1:stimes$saccade.onset[1]]<- 1
s[stimes$saccade.offset[length(stimes)]:length(s)]<- length(k)
return(data.frame(s,ev))
}
ms<-markSaccades(stimes,ev)
plot(ms$s)
markSaccades<-function(stimes,ev){
#this function takes the output from the findSaccades function and marks the saccades and fixations
s<-1:length(ev)*0
for (k in 1:nrow(stimes)){
s[stimes$saccade.onset[k]:stimes$saccade.offset[k]]<-k
if(k>1){
s[stimes$saccade.offset[k-1]:stimes$saccade.onset[k]]<-(k*-1)
}
}
s[1:stimes$saccade.onset[1]]<- 1
s[stimes$saccade.offset[nrow(stimes)]:length(s)]<- length(k)
return(data.frame(s,ev))
}
ms<-markSaccades(stimes,ev)
plot(ms$s)
markSaccades<-function(stimes,ev){
#this function takes the output from the findSaccades function and marks the saccades and fixations
s<-1:length(ev)*0
for (k in 1:nrow(stimes)){
s[stimes$saccade.onset[k]:stimes$saccade.offset[k]]<-k
if(k>1){
s[stimes$saccade.offset[k-1]:stimes$saccade.onset[k]]<-(k*-1)
}
}
s[1:stimes$saccade.onset[1]]<- -1
s[stimes$saccade.offset[nrow(stimes)]:length(s)]<- (length(k)*-1)
return(data.frame(s,ev))
}
ms<-markSaccades(stimes,ev)
plot(ms$s)
markSaccades<-function(stimes,ev){
#this function takes the output from the findSaccades function and marks the saccades and fixations
s<-1:length(ev)*0
for (k in 1:nrow(stimes)){
s[stimes$saccade.onset[k]:stimes$saccade.offset[k]]<-k
if(k>1){
s[stimes$saccade.offset[k-1]:stimes$saccade.onset[k]]<-(k*-1)
}
}
s[1:stimes$saccade.onset[1]]<- -1
s[stimes$saccade.offset[nrow(stimes)]:length(s)]<- (nrow(stimes)*-1)
return(data.frame(s,ev))
}
ms<-markSaccades(stimes,ev)
ms<-markSaccades(stimes,ev)
plot(ms$s)
plot(ms$ev[ms$s<0])
markSaccades<-function(stimes,ev){
#this function takes the output from the findSaccades function and marks the saccades and fixations
nsaccades=nrow(stimes)
#add 10ms buffer to saccade onset and offset
#extra code to make sure there is at least that much space in the data
buffer<- 10
if(stimes$saccade.onset[1]>buffer+1){
stimes$saccade.onset=stimes$saccade.onset-10
}else{
stimes$saccade.onset[2:nsaccades] = stimes$saccade.onset[2:nsaccades]-10
stimes$saccade.onset[1]=1
}
if (stimes$saccade.offset[nsaccades]+buffer<length(ev)){
stimes$saccade.offset=stimes$saccade.offset+buffer
}else{
stimes$saccade.offset[1:nsaccades-1]=stimes$saccade.offset[1:nsaccades-1]+buffer
stimes$saccade.offset[nsaccades]=length(ev)
}
s<-1:length(ev)*0
for (k in 1:nsaccades){
s[stimes$saccade.onset[k]:stimes$saccade.offset[k]]<-k
if(k>1){
s[stimes$saccade.offset[k-1]:stimes$saccade.onset[k]]<-(k*-1)
}
}
s[1:stimes$saccade.onset[1]]<- -1
s[stimes$saccade.offset[nrow(stimes)]:length(s)]<- (nrow(stimes)*-1)
return(data.frame(s,ev))
}
ms<-markSaccades(stimes,ev)
plot(ms$ev[ms$s<0])
plot(ms$ev[ms$s>])
plot(ms$ev[ms$s>0])
plot(ms$ev[ms$s<0])
markSaccades<-function(stimes,ev){
#this function takes the output from the findSaccades function and marks the saccades and fixations
nsaccades=nrow(stimes)
#add 10ms buffer to saccade onset and offset
#extra code to make sure there is at least that much space in the data
buffer<- 15
if(stimes$saccade.onset[1]>buffer+1){
stimes$saccade.onset=stimes$saccade.onset-10
}else{
stimes$saccade.onset[2:nsaccades] = stimes$saccade.onset[2:nsaccades]-10
stimes$saccade.onset[1]=1
}
if (stimes$saccade.offset[nsaccades]+buffer<length(ev)){
stimes$saccade.offset=stimes$saccade.offset+buffer
}else{
stimes$saccade.offset[1:nsaccades-1]=stimes$saccade.offset[1:nsaccades-1]+buffer
stimes$saccade.offset[nsaccades]=length(ev)
}
s<-1:length(ev)*0
for (k in 1:nsaccades){
s[stimes$saccade.onset[k]:stimes$saccade.offset[k]]<-k
if(k>1){
s[stimes$saccade.offset[k-1]:stimes$saccade.onset[k]]<-(k*-1)
}
}
s[1:stimes$saccade.onset[1]]<- -1
s[stimes$saccade.offset[nrow(stimes)]:length(s)]<- (nrow(stimes)*-1)
return(data.frame(s,ev))
}
ms<-markSaccades(stimes,ev)
plot(ms$ev[ms$s<0])
head(ms)
head(t)
head(t)
head(tt)
tt<-left_join(ms,t,by='ev')
ms<-markSaccades(t$rev)
head(t)
markSaccades<-function(ev){
#this function finds and marks saccades given a velocity input
stimes<-findSaccades(ev)
nsaccades=nrow(stimes)
#add 10ms buffer to saccade onset and offset
#extra code to make sure there is at least that much space in the data
buffer<- 15
if(stimes$saccade.onset[1]>buffer+1){
stimes$saccade.onset=stimes$saccade.onset-10
}else{
stimes$saccade.onset[2:nsaccades] = stimes$saccade.onset[2:nsaccades]-10
stimes$saccade.onset[1]=1
}
if (stimes$saccade.offset[nsaccades]+buffer<length(ev)){
stimes$saccade.offset=stimes$saccade.offset+buffer
}else{
stimes$saccade.offset[1:nsaccades-1]=stimes$saccade.offset[1:nsaccades-1]+buffer
stimes$saccade.offset[nsaccades]=length(ev)
}
s<-1:length(ev)*0
for (k in 1:nsaccades){
s[stimes$saccade.onset[k]:stimes$saccade.offset[k]]<-k
if(k>1){
s[stimes$saccade.offset[k-1]:stimes$saccade.onset[k]]<-(k*-1)
}
}
s[1:stimes$saccade.onset[1]]<- -1
s[stimes$saccade.offset[nrow(stimes)]:length(s)]<- (nrow(stimes)*-1)
return(data.frame(s,ev))
}
ms<-markSaccades(t$rev)
tt<-left_join(ms,t,by='ev')
nrow(t)
nrow(ms)
tt<-left_join(ms,t)
head(ms)
head(t)
ms %>%
ms%>%
mutate(ev=rev) %>%
left_join(t,ms,by="rev") ->
tt
head(ms)
class(ms$ev)
ms%>%
mutate(rev=ev) %>%
left_join(t,ms,by="rev") ->
tt
head(tt)
t %>%
mutate(s<-markSaccades(rev)) ->
tt
t %>%
mutate(s=markSaccades(rev)) ->
tt
markSaccades<-function(ev){
#this function finds and marks saccades given a velocity input
stimes<-findSaccades(ev)
nsaccades=nrow(stimes)
#add 10ms buffer to saccade onset and offset
#extra code to make sure there is at least that much space in the data
buffer<- 15
if(stimes$saccade.onset[1]>buffer+1){
stimes$saccade.onset=stimes$saccade.onset-10
}else{
stimes$saccade.onset[2:nsaccades] = stimes$saccade.onset[2:nsaccades]-10
stimes$saccade.onset[1]=1
}
if (stimes$saccade.offset[nsaccades]+buffer<length(ev)){
stimes$saccade.offset=stimes$saccade.offset+buffer
}else{
stimes$saccade.offset[1:nsaccades-1]=stimes$saccade.offset[1:nsaccades-1]+buffer
stimes$saccade.offset[nsaccades]=length(ev)
}
s<-1:length(ev)*0
for (k in 1:nsaccades){
s[stimes$saccade.onset[k]:stimes$saccade.offset[k]]<-k
if(k>1){
s[stimes$saccade.offset[k-1]:stimes$saccade.onset[k]]<-(k*-1)
}
}
s[1:stimes$saccade.onset[1]]<- -1
s[stimes$saccade.offset[nrow(stimes)]:length(s)]<- (nrow(stimes)*-1)
return(s)
}
t %>%
mutate(s=markSaccades(rev)) ->
tt
head(tt)
t %>%
mutate(s=markSaccades(rev)) %>%
group_by(s,neuron)%>%
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf)) ->
tt
head(tt)
qplot(rep,fr,data=tt)
qplot(rep,fr,data=tt)+facet_grid(.~neuron)
qplot(rep,fr,data=tt)+facet_grid(.~neuron)+geom_point(size=2,alpha=0.2)
qplot(rep,fr,data=tt)+facet_grid(.~neuron)+geom_point(aes(size=2,alpha=0.2))
qplot(rep,fr,data=tt)+facet_grid(.~neuron)+geom_point(aes(size=2,alpha=0.1))
qplot(rep,fr,data=tt)+facet_grid(.~neuron)+geom_point(aes(size=3,alpha=0.1))
qplot(rep,repV,size=fr,data=tt)
qplot(rep,repV,size=fr,data=tt)+facet_grid(.~neuron)
qplot(rep,repV,color=fr,data=tt)+facet_grid(.~neuron)
qplot(rep,repV,color=fr,size=3,data=tt)+facet_grid(.~neuron)
qplot(rep,repV,color=fr,size=5,data=tt)+facet_grid(.~neuron)
t %>%
mutate(s=markSaccades(rev)) %>%
filter(s<0) %>%
group_by(s,neuron)%>%
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf)) ->
tt
qplot(rep,repV,color=fr,size=5,data=tt)+facet_grid(.~neuron)
opts_chunk$set(echo=FALSE)
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
library(grid)
path<-"~/GitHub/NPH-Analysis/data/"
#path<-"~/GitHub/NPH-Analysis/testdata/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i],sep=''))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
t %>%
mutate(s=markSaccades(rev)) %>%
filter(s<0) %>%
group_by(s,neuron)%>%
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf)) ->
tt
head(tt)
t %>%
mutate(s=markSaccades(rev)) %>%
filter(s<0) %>%
group_by(s,neuron)%>%
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf)) ->
tt
head(tt)
qplot(rep,repV,color=fr,size=5,data=tt)+facet_grid(.~neuron)
qplot(rep,repV,color=fr,size=5,data=tt)+facet_wrap(.~neuron)
qplot(rep,repV,color=fr,size=5,data=tt)+facet_grid(.~neuron)
qplot(rep,repV,color=fr,size=5,data=tt)+facet_grid(neuron~.)
ggsave(meanrateposition1.jpg,width=8,height=12)
ggsave('meanrateposition1.jpg',width=8,height=12)
ggsave('meanrateposition1.jpg',width=8,height=36)
ggsave('meanrateposition1.jpg',width=6,height=46)
qplot(rep,repV,color=fr,size=5,alpha=0.2,data=tt)+facet_grid(neuron~.)
ggsave('meanrateposition1.jpg',width=6,height=46)
t %>%
mutate(s=markSaccades(rev)) %>%
filter(s<0) %>%
group_by(neuron)%>%
mutate(maxFR=max(fr),scaledfr=fr/maxFR) %>%
group_by(s)->
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf),scaledfr=mean(scaledfr)) ->
tt
t %>%
mutate(s=markSaccades(rev)) %>%
filter(s<0) %>%
group_by(neuron)%>%
mutate(maxFR=max(sdf),scaledfr=sdf/maxFR) %>%
group_by(s)->
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf),scaledfr=mean(scaledfr)) ->
tt
t %>%
mutate(s=markSaccades(rev)) %>%
filter(s<0) %>%
group_by(neuron)%>%
mutate(maxFR=max(sdf),scaledfr=sdf/maxFR) %>%
group_by(s) %>%
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf),scaledfr=mean(scaledfr)) ->
tt
qplot(rep,repV,color=fr,size=5,alpha=0.2,data=tt)+facet_grid(neuron~.)
head(tt)
t %>%
mutate(s=markSaccades(rev)) %>%
filter(s<0) %>%
group_by(neuron)%>%
mutate(maxFR=max(sdf),scaledfr=sdf/maxFR) %>%
group_by(s,neuron) %>%
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf),scaledfr=mean(scaledfr)) ->
tt
head(tt)
qplot(rep,repV,color=fr,size=5,alpha=0.2,data=tt)+facet_grid(neuron~.)
qplot(rep,repV,color=scaledfr,size=5,alpha=0.2,data=tt)+facet_grid(neuron~.)
ggsave('meanrateposition1.jpg',width=6,height=46)
t %>%
mutate(s=markSaccades(rev)) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf),scaledfr=mean(scaledfr)) %>%
group_by(neuron)%>%
mutate(maxFR=max(sdf),scaledfr=sdf/maxFR) %>%->
tt
t %>%
mutate(s=markSaccades(rev)) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf),scaledfr=mean(scaledfr)) %>%
group_by(neuron)%>%
mutate(maxFR=max(sdf),scaledfr=sdf/maxFR) ->
tt
t %>%
mutate(s=markSaccades(rev)) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf)) %>%
group_by(neuron)%>%
mutate(maxFR=max(fr),scaledfr=fr/maxFR) ->
tt
qplot(rep,repV,color=scaledfr,size=5,alpha=0.2,data=tt)+facet_grid(neuron~.)
ggsave('meanrateposition1.jpg',width=6,height=46)
t %>%
mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf)) %>%
group_by(neuron)%>%
mutate(maxFR=max(fr),scaledfr=fr/maxFR) ->
tt
t %>%
mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf)) %>%
group_by(neuron)%>%
mutate(maxFR=max(fr),scaledfr=fr/maxFR) ->
tt
t %>%
mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2)) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(rep=mean(rep),lep=mean(lep),repV=mean(repV),lepV=mean(lepV),fr=mean(sdf)) %>%
group_by(neuron)%>%
mutate(maxFR=max(fr),scaledfr=fr/maxFR) ->
tt
qplot(rep,repV,color=scaledfr,size=5,alpha=0.2,data=tt)+facet_grid(neuron~.)
ggsave('meanrateposition1.jpg',width=6,height=46)
qplot(rep,fr,data=tt,size=5)+facet_grid(neuron~.)
qplot(rep,fr,data=tt,size=5)+facet_grid(neuron~.)+stat_smooth(method='lm')
ggsave('meanrateposition2.jpg',width=6,height=46)
qplot(rep,fr,data=tt,size=5,alpha=0.2)+facet_grid(neuron~.)+stat_smooth(method='lm')
qplot(rep,fr,data=tt)+facet_grid(neuron~.)+stat_smooth(method='lm')
qplot(rep,fr,data=tt)+facet_grid(neuron~.)+stat_smooth(method='lm')+geom_point(aes(size=5,alpha=0.2))
qplot(rep,fr,data=tt)+facet_grid(neuron~.)+stat_smooth(method='lm')+geom_point(aes(size=5,alpha=0.1))
ggsave('meanrateposition2.jpg',width=6,height=46)
qplot(rep,fr,data=tt)+facet_grid(neuron~.)+stat_smooth(method='lm')+geom_point(aes(alpha=0.1))
qplot(rep,fr,data=tt)+facet_grid(neuron~.)+stat_smooth(method='lm')+geom_point(alpha=0.1)
ggsave('meanrateposition2.jpg',width=6,height=46)
ggplot(tt,aes(rep,fr))+facet_grid(neuron~.)+stat_smooth(method='lm')+geom_point(alpha=0.1)
ggplot(tt,aes(rep,fr))+facet_grid(neuron~.)+stat_smooth(method='lm')+geom_point(alpha=0.2,size=3)
ggsave('meanrateposition2.jpg',width=6,height=46)
ggplot(tt,aes(rep,fr))+facet_grid(neuron~.)+stat_smooth(method='lm')+geom_point(alpha=0.2,size=1)
ggsave('meanrateposition2.jpg',width=6,height=46)
t %>%
mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2)) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(R.Hep=mean(rep),L.Hep=mean(lep),R.Vep=mean(repV),L.Vep=mean(lepV),fr=mean(sdf)) %>%
gather(temp,P,c("R.Hep","L.Hep","R.Vep","L.Vep")) %>%
group_by(neuron)%>%
mutate(maxFR=max(fr),scaledfr=fr/maxFR) ->
tt
t %>%
mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2)) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(R.Hep=mean(rep),L.Hep=mean(lep),R.Vep=mean(repV),L.Vep=mean(lepV),fr=mean(sdf)) ->
ttt
head(ttt)
t %>%
mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2)) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(R.Hep=mean(rep),L.Hep=mean(lep),R.Vep=mean(repV),L.Vep=mean(lepV),fr=mean(sdf)) %>%
gather(temp,P,2:5) %>%
separate(temp,c("Eye","HV")) %>%
group_by(neuron)%>%
mutate(maxFR=max(fr),scaledfr=fr/maxFR) ->
tt
t %>%
mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2)) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(R.Hep=mean(rep),L.Hep=mean(lep),R.Vep=mean(repV),L.Vep=mean(lepV),fr=mean(sdf)) %>%
gather(temp,P,3:6) %>%
separate(temp,c("Eye","HV")) %>%
group_by(neuron)%>%
mutate(maxFR=max(fr),scaledfr=fr/maxFR) ->
tt
head(t)
head(tt)
t %>%
mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2)) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(R.Hep=mean(rep),L.Hep=mean(lep),R.Vep=mean(repV),L.Vep=mean(lepV),fr=mean(sdf)) %>%
gather(temp,P,3:6) %>%
separate(temp,c("Eye","HV")) %>%
group_by(neuron)%>%
mutate(maxFR=max(fr),scaledfr=fr/maxFR) ->
tt
head(tt)
ggplot(tt,aes(P,scaledfr))+geom_point(alpha=0.2)+facet_grid(neuron~HV)
ggplot(tt,aes(P,scaledfr))+geom_point(alpha=0.2,color=Eye)+facet_grid(neuron~HV)
ggplot(tt,aes(P,scaledfr))+geom_point(alpha=0.2,color=tt$Eye)+facet_grid(neuron~HV)
ggplot(tt,aes(P,scaledfr))+geom_point(color=tt$Eye)+facet_grid(neuron~HV)
ggplot(tt,aes(P,scaledfr))+geom_point(alpha=0.2,color=factor(tt$Eye))+facet_grid(neuron~HV)
ggplot(tt,aes(P,scaledfr))+geom_point(alpha=0.2)+facet_grid(neuron~HV)+scale_fill_discrete(Eye)
ggplot(tt,aes(P,scaledfr))+geom_point(alpha=0.2)+facet_grid(neuron~HV)+scale_fill_discrete(tt$Eye)
ggplot(tt,aes(P,scaledfr))+geom_point(alpha=0.2,shape=factor(tt$Eye))+facet_grid(neuron~HV)
ggplot(tt,aes(P,scaledfr))+geom_point(shape=factor(tt$Eye))+facet_grid(neuron~HV)
qplot(P,scaledfr,data=tt,shape=Eye)
qplot(P,scaledfr,data=tt,shape=Eye)+facet_grid(neuron~HV)
qplot(P,scaledfr,data=tt,color=Eye)+facet_grid(neuron~HV)
qplot(P,scaledfr,data=tt,color=Eye,alpha=0.2)+facet_grid(neuron~HV)
t %>%
mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2)) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(R.Hep=mean(rep),L.Hep=mean(lep),R.Vep=mean(repV),L.Vep=mean(lepV),fr=mean(sdf)) %>%
group_by(neuron)%>%
mutate(maxFR=max(fr),scaledfr=fr/maxFR) ->
tt
qplot(R.Hep,R.Vep,color=scaledfr,size=8,data=tt)+facet_grid(.~neuron)
#use the created functions to mark the saccades
t %>%
mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2)) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(R.Hep=mean(rep),L.Hep=mean(lep),R.Vep=mean(repV),L.Vep=mean(lepV),fr=mean(sdf)) %>%
group_by(neuron)%>%
mutate(maxFR=max(fr),scaledfr=fr/maxFR) ->
tt
qplot(R.Hep,R.Vep,color=scaledfr,size=8,data=tt)+facet_grid(neuron~.)
head(tt)
qplot(P,scaledfr,data=tt,color=Eye,alpha=0.2)+facet_grid(neuron~HV)
qplot(P,scaledfr,data=tc,color=Eye,alpha=0.2)+facet_grid(neuron~HV)
tt %>%
gather(temp,P,3:6) %>%
separate(temp,c("Eye","HV")) ->
tc
qplot(P,scaledfr,data=tc,color=Eye,alpha=0.2)+facet_grid(neuron~HV)
levels(tc$HV)
head(tc$HV)
names(tc$HV)
tc$HV<-as.factor(tc$HV)
levels(tc$HV)
levels(tc$HV)<-c("Horizontal",'Vertical")
levels(tc$HV)<-c("Horizontal","Vertical")
head(tc)
t %>%
mutate(s=markSaccades((sqrt(rev^2)+sqrt(revV^2))/2)) %>%
filter(s<0) %>%
group_by(s,neuron) %>%
summarize(R.Horizontal=mean(rep),L.Horizontal=mean(lep),R.Vertical=mean(repV),L.Vertical=mean(lepV),fr=mean(sdf)) %>%
group_by(neuron)%>%
mutate(maxFR=max(fr),scaledfr=fr/maxFR) ->
tt
tt %>%
gather(temp,P,3:6) %>%
separate(temp,c("Eye","HV")) ->
tc
qplot(P,scaledfr,data=tc,color=Eye,alpha=0.2)+facet_grid(neuron~HV)+
xlab('Eye Position (degrees)')
qplot(P,fr,data=tc,color=Eye,alpha=0.2)+facet_grid(neuron~HV)+
xlab('Eye Position (degrees)')+
ggtitle("Mean FR during Fixation")
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
select(1,2,4,6,8,10) %>%
rename(R.Hep=rep,R.Vep=repV, L.Hep=lep,L.Vep=lepV,fr=sdf) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr))%>%
gather(temp,P,2:5) %>%
separate(temp,c("Eye","HV")) ->
static
head(tc)
head(static)
qplot(P,fr,data=static,color=Eye,alpha=0.2)+facet_grid(neuron~HV)+
xlab('Eye Position (degrees)')+
ggtitle("FR at each sample during Fixation")
