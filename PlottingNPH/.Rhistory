separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
x
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%
group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%
summarize(fr=mean(sdf)) %>%
ungroup(.) %>%
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
x
qplot(Hep,Vep,data=x)+facet_grid(Eye~.)
library(ggplot2)
library(dplyr)
library(tidyr)
t1 <- read.csv("~/GitHub/NPH-Strabismus/Bee_Mark_2015_09_17_1440_Radial.csv")
t2 <- read.csv("~/GitHub/NPH-Strabismus/Patos_2014_03_27_1435_Radial.csv")
t3 <- read.csv("~/GitHub/NPH-Strabismus/Patos_2014_03_27_1439_Radial.csv")
t4 <- read.csv("~/GitHub/NPH-Strabismus/Patos_2014_04_03_1532_Radial.csv")
t5 <- read.csv("~/GitHub/NPH-Strabismus/Patos_2014_04_10_1428_Radial.csv")
t1$neuron <- "Bee6"
t2$neuron <- "Patos1"
t3$neuron <- "Patos2"
t4$neuron <- "Patos4"
t5$neuron <-"Patos5"
t<- rbind(t1,t2,t3,t4,t5)
thresh=1.5
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%
group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%
summarize(fr=mean(sdf)) %>%
ungroup(.) %>%
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
s
levels(s$Eye)<-c("Right Eye","Left Eye")
#qplot(HP,VP,data=s,fill=fr)+geom_tile()+facet_grid(neuron~Eye)
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
qplot(HP,VP,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
ggsave('RatePosition3.png',width=6,height=10)
s %>%
filteR(neuron=="Patos1")
s %>%
filter(neuron=="Patos1")
s %>%
filter(neuron=="Patos1",Eye==R) %>%
summary(lm(fr~Hep+Vep),data=.)
s %>%
filter(neuron=="Patos1",Eye=="R") %>%
summary(lm(fr~Hep+Vep),data=.)
s %>%
filter(neuron=="Patos1",Eye=="R") %>%
summary(lm(fr~Hep+Vep))
s %>%
filter(neuron=="Patos1",Eye=="R") %>%
summary(lm(fr~Hep+Vep),data=.)
s %>%
filter(neuron=="Patos1",Eye=="R") %>%
summary(lm(fr~Hep+Vep),.)
s %>%
filter(neuron=="Patos1",Eye=="R")
s %>%
filter(neuron=="Patos1",Eye=="R") ->
x
summary(lm(fr~Hep+Vep),data=x)
head(x)
s %>%
filter(neuron=="Patos1",Eye=="R") ->
x
summary(lm(Hep+Vep~fr),data=x)
lm(fr~Hep+Vep)
lm(fr~Hep+Vep,data=x)
s %>%
filter(neuron=="Patos1",Eye=="R") %>%
summary(lm(fr~Hep+Vep,data=.))
s %>%
filter(neuron=="Patos1",Eye=="R") %>%
lm(fr~Hep+Vep,data=.)
list.files('pattern'=*.csv)
list.files(pattern=*.csv)
list.files(pattern='*.csv'')
list.files(pattern='*.csv')
?list.files
list.files(path= "~/GitHub/NPH/", pattern='*.csv')
files<-list.files(path= "~/GitHub/NPH/", pattern='*.csv')
files[1]
files
files<-list.files(path= "~/GitHub/NPH/data", pattern='*.csv')
files[1]
files[1][-4]
class(files[1])
files[1][1]
files[1][1:2]
gsub(files[1])
gsub(files[1],'.')
?gsub
gsub('.',files[1])
gsub('.csv','',files[1])
files <- list.files(path="~/GitHub/NPH/data",pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {}
temp <- read.csv(files[i])
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
files <- list.files(path="~/GitHub/NPH/data",pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(files[i])
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
files <- list.files(path="~/GitHub/NPH/data/",pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(files[i])
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
path<-"~/GitHub/NPH/data/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i]))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
path<-"~/GitHub/NPH/data/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i],sep=''))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
head(t)
thresh=1.5
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%
group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%
summarize(fr=mean(sdf)) %>%
ungroup(.) %>%
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
s
levels(s$Eye)<-c("Right Eye","Left Eye")
#qplot(HP,VP,data=s,fill=fr)+geom_tile()+facet_grid(neuron~Eye)
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
library(ggplot2)
library(dplyr)
library(tidyr)
#load all the .csv files in the data folder, then add a column naming the neuron,
#using the file name as the default name, then put them all together in one long data frame
path<-"~/GitHub/NPH/data/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i],sep=''))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
thresh=1.5 #points with velocity below threshold are considered fixation
#choose just the points of fixation, then bin the data into 1 degree bins (using round)
#and calculate the mean firing rate during all the times when the eye is at each position
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%
group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%
summarize(fr=mean(sdf)) %>%
ungroup(.) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
s
levels(s$Eye)<-c("Right Eye","Left Eye") #Change R/L into Right Eye/Left Eye
#Create a scaled firing rate by simply dividing by the maximum firing rate in any bin
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
#plot
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
library(ggplot2)
library(dplyr)
library(tidyr)
#load all the .csv files in the data folder, then add a column naming the neuron,
#using the file name as the default name, then put them all together in one long data frame
path<-"~/GitHub/NPH/data/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i],sep=''))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
thresh=1.5 #points with velocity below threshold are considered fixation
#choose just the points of fixation, then bin the data into 1 degree bins (using round)
#and calculate the mean firing rate during all the times when the eye is at each position
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%
group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%
summarize(fr=mean(sdf)) %>%
ungroup(.) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
s
levels(s$Eye)<-c("Right Eye","Left Eye") #Change R/L into Right Eye/Left Eye
#Create a scaled firing rate by simply dividing by the maximum firing rate in any bin
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
#plot
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
ss %>% filter(neuron=="BeeX1") %>% qplot(Hep,Vep,data=.,fill=scaledFR)+scale_fill_gradient(low='black',high='orange')
ss %>% filter(neuron=="BeeX1") %>% qplot(Hep,Vep,data=.,fill=scaledFR)+scale_fill_gradient(low='black',high='orange')+geom_tile()
s %>% filter(neuron=="BeeX1") %>% qplot(Hep,Vep,data=.,fill=fr)+scale_fill_gradient(low='black',high='orange')+geom_tile()
x<-filter(s,neuron=="BeeX1")
summary(lm(fr~HP,data=x))
summary(lm(fr~Hep,data=x))
summary(lm(fr~Hep+Vep,data=x))
qplot(Hep,fr,data=x)
qplot(Vep,fr,data=x)
summary(lm(fr~Vep,data=x))
qplot(Vep,fr,data=x)+geom_abline()
qplot(Vep,fr,data=x)+geom_abline(a=52.23,b=-0.277)
qplot(Vep,fr,data=x)+geom_abline(52.23,-0.277)
?geom_abline
qplot(Vep,fr,data=x)+geom_abline(intercept=52.23,slope=-0.277)
qplot(Vep,fr,data=x)+stat_smooth(method='lm')
qplot(Hep,fr,data=x)+stat_smooth(method='lm')
summary(lm(fr~Hep+Vep,data=x))
m<-summary(lm(fr~Hep+Vep,data=x))
head(m)
m$coefficients
m$coefficients$Estimate
m$coefficients[1]
m$coefficients[2]
atan2(m$coefficients[2],m$coefficients[3])
atan2(m$coefficients[2],m$coefficients[3])*180/pi
xx<-filter(s,neuron=="Bee6")
m<-summary(lm(fr~Hep+Vep,data=xx))
m
m<-m$coefficients
m
class(m)
m[2]
atan2(m[2],m[3])
atan2(m[2],m[3])*180/pi
atan2(m[3],m[2])*180/pi
mm<-summary(lm(fr~Hep+Vep,data=x))
mm<-mm$coefficients
atan2(mm[3],mm[2])*180/pi
qplot(Hep,Vep,data=xx,fill=fr)+scale_fill_gradient(low='black',high='orange')+geom_tile()
qplot(Hep,Vep,data=x,fill=fr)+scale_fill_gradient(low='black',high='orange')+geom_tile()
qplot(Hep,Vep,data=x,fill=fr)+scale_fill_gradient(low='black',high='orange')+geom_tile()+geom_abline(intercept=0,slope=-16)
atan2(mm[3],mm[2])
qplot(Hep,Vep,data=x,fill=fr)+scale_fill_gradient(low='black',high='orange')+geom_tile()+geom_abline(intercept=0,slope=-0.285)
atan2(m[3],m[2])
qplot(Hep,Vep,data=x,fill=fr)+scale_fill_gradient(low='black',high='orange')+geom_tile()+geom_abline(intercept=0,slope=-0.0779)
library(ggplot2)
library(dplyr)
library(tidyr)
#load all the .csv files in the data folder, then add a column naming the neuron,
#using the file name as the default name, then put them all together in one long data frame
path<-"~/GitHub/NPH/data/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i],sep=''))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
thresh=1.5 #points with velocity below threshold are considered fixation
#choose just the points of fixation, then bin the data into 1 degree bins (using round)
#and calculate the mean firing rate during all the times when the eye is at each position
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%
group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%
summarize(fr=mean(sdf)) %>%
ungroup(.) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
s
levels(s$Eye)<-c("Right Eye","Left Eye") #Change R/L into Right Eye/Left Eye
#Create a scaled firing rate by simply dividing by the maximum firing rate in any bin
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
#plot
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
ggsave('RatePosition4.png',width=6,height=12)
qplot(Hep,Vep,data=s,fill=fr)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
b<-filter(s,neuron=contains("B"))
b<-filter(s,neuron %in% c("Bee6","BeeX1","BeeX2","BeeX3a","BeeX3b"))
qplot(Hep,Vep,data=b,fill=fr)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
qplot(Hep,fr,data=b,fill=fr)+facet_grid(neuron~Eye)
qplot(Vep,fr,data=b,fill=fr)+facet_grid(neuron~Eye)
qplot(Hep,fr,data=b,fill=fr)+facet_grid(neuron~Eye)
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->sss
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(time=row_number(sdf)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->sss
static<- filter(t,abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh)
head(static)
bb <- filter(static,neuron %in% c("Bee6","BeeX1","BeeX2","BeeX3a","BeeX3b"))
bb %>%
select(c(1,2,4,6,8,10)) %>%
mutate(time=row_number(fr)) %>%
gather(temp,P,2:5) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
sb
bb %>%
select(c(1,2,4,6,8,10)) %>%
mutate(time=row_number(sdf)) %>%
gather(temp,P,2:5) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
sb
bb %>%
select(c(1,2,4,6,8,10)) %>%
mutate(time=row_number(sdf)) %>%
gather(temp,P,2:5) ->
sb
head(sb)
bb %>%
select(c(1,2,4,6,8,10)) %>%
mutate(time=row_number(sdf),R.H=rep,R.V = repV, L.H = lep, L.V = lepV) %>%
gather(temp,P,2:5) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
sb
head(sb)
bb %>%
select(c(1,2,4,6,8,10)) %>%
mutate(time=row_number(sdf)) %>%
rename(R.H=rep,R.V = repV, L.H = lep, L.V = lepV) %>%
gather(temp,P,2:5) ->
sb
head(sb)
bb %>%
select(c(1,2,4,6,8,10)) %>%
mutate(time=row_number(sdf)) %>%
rename(R.H=rep,R.V = repV, L.H = lep, L.V = lepV) %>%
gather(temp,P,2:5) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
sb
head(sb)
qplot(H,V,data=sb)+facet_grid(neuron~Eye)
qplot(H,sdf,data=sb)+facet_grid(neuron~Eye)
qplot(H,sdf,data=sb)+facet_grid(neuron~Eye)+stat_smooth(method='lm')
library(ggplot2)
library(dplyr)
library(tidyr)
t1 <- read.csv("~/GitHub/NPH-Strabismus/Bee_Mark_2015_09_17_1440_Radial.csv")
t2 <- read.csv("~/GitHub/NPH-Strabismus/Patos_2014_03_27_1435_Radial.csv")
t3 <- read.csv("~/GitHub/NPH-Strabismus/Patos_2014_03_27_1439_Radial.csv")
t4 <- read.csv("~/GitHub/NPH-Strabismus/Patos_2014_04_03_1532_Radial.csv")
t5 <- read.csv("~/GitHub/NPH-Strabismus/Patos_2014_04_10_1428_Radial.csv")
t1$neuron <- "Bee6"
t2$neuron <- "Patos1"
t3$neuron <- "Patos2"
t4$neuron <- "Patos4"
t5$neuron <-"Patos5"
t<- rbind(t1,t2,t3,t4,t5)
thresh=1.5
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%
group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%
summarize(fr=mean(sdf)) %>%
ungroup(.) %>%
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
s
levels(s$Eye)<-c("Right Eye","Left Eye")
#qplot(HP,VP,data=s,fill=fr)+geom_tile()+facet_grid(neuron~Eye)
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
library(ggplot2)
library(dplyr)
library(tidyr)
#load all the .csv files in the data folder, then add a column naming the neuron,
#using the file name as the default name, then put them all together in one long data frame
path<-"~/GitHub/NPH/data/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i],sep=''))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
thresh=1.5 #points with velocity below threshold are considered fixation
#choose just the points of fixation, then bin the data into 1 degree bins (using round)
#and calculate the mean firing rate during all the times when the eye is at each position
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%
group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%
summarize(fr=mean(sdf)) %>%
ungroup(.) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
s
levels(s$Eye)<-c("Right Eye","Left Eye") #Change R/L into Right Eye/Left Eye
#Just show cells I want
s <- filter(static,neuron %in% c("Bee6","BeeX1","BeeX2","BeeX3a","BeeX3b","BeeY1"))
#Create a scaled firing rate by simply dividing by the maximum firing rate in any bin
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
#plot
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%
group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%
summarize(fr=mean(sdf)) %>%
ungroup(.) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
s
levels(s$Eye)<-c("Right Eye","Left Eye") #Change R/L into Right Eye/Left Eye
#Just show cells I want
s <- filter(s,neuron %in% c("Bee6","BeeX1","BeeX2","BeeX3a","BeeX3b","BeeY1"))
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
#plot
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
qplot(Vep,scaledFR,data=ss)
qplot(Vep,scaledFR,data=ss)+facet_grid(neuron~eye)
qplot(Vep,scaledFR,data=ss)+facet_grid(neuron~Eye)
qplot(Hep,scaledFR,data=ss)+facet_grid(neuron~Eye)
qplot(Hep,scaledFR,data=ss)+facet_grid(neuron~Eye)+geom_boxplot()
qplot(factor(Hep),scaledFR,data=ss)+facet_grid(neuron~Eye)+geom_boxplot()
qplot(factor(Hep),scaledFR,data=ss)+facet_grid(neuron~Eye)
qplot(HepscaledFR,data=ss)+facet_grid(neuron~Eye)
qplot(Hep,scaledFR,data=ss)+facet_grid(neuron~Eye)
qplot(Hep,Vep,data=ss,geom="bin2d")
qplot(Hep,Vep,data=ss,geom="bin2d",fill=scaledFR)
qplot(Hep,Vep,data=ss,geom="bin2d")+scale_fill_gradient(low='black',high='orange',fill=scaledFR)
qplot(Hep,Vep,data=ss,geom="bin2d")+scale_fill_gradient(low='black',high='orange',fill=ss$scaledFR)
qplot(Hep,Vep,data=ss,geom="bin2d")+scale_fill_gradient(low='black',high='orange')
qplot(Hep,Vep,scaledFR,data=ss)
qplot(Hep,Vep,scaledFR,data=ss)+geom_tile()
qplot(Hep,Vep,scaledFR,z=ss)+geom_tile()
qplot(Hep,Vep,scaledFR,z=ss)+geom_histogram()
qplot(Hep,Vep,fill=scaledFR,data=ss)+geom_tile()
qplot(Hep,Vep,fill=scaledFR,data=ss)+geom_tile()+facet_grid(neuron~Eye)
