levels(s$Eye)<-c("Right Eye","Left Eye")
#qplot(HP,VP,data=s,fill=fr)+geom_tile()+facet_grid(neuron~Eye)
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
library(ggplot2)
library(dplyr)
library(tidyr)
#load all the .csv files in the data folder, then add a column naming the neuron,
#using the file name as the default name, then put them all together in one long data frame
path<-"~/GitHub/NPH/data/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i],sep=''))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
thresh=1.5 #points with velocity below threshold are considered fixation
#choose just the points of fixation, then bin the data into 1 degree bins (using round)
#and calculate the mean firing rate during all the times when the eye is at each position
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%
group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%
summarize(fr=mean(sdf)) %>%
ungroup(.) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
s
levels(s$Eye)<-c("Right Eye","Left Eye") #Change R/L into Right Eye/Left Eye
#Just show cells I want
s <- filter(static,neuron %in% c("Bee6","BeeX1","BeeX2","BeeX3a","BeeX3b","BeeY1"))
#Create a scaled firing rate by simply dividing by the maximum firing rate in any bin
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
#plot
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%
group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%
summarize(fr=mean(sdf)) %>%
ungroup(.) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
s
levels(s$Eye)<-c("Right Eye","Left Eye") #Change R/L into Right Eye/Left Eye
#Just show cells I want
s <- filter(s,neuron %in% c("Bee6","BeeX1","BeeX2","BeeX3a","BeeX3b","BeeY1"))
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
#plot
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
qplot(Vep,scaledFR,data=ss)
qplot(Vep,scaledFR,data=ss)+facet_grid(neuron~eye)
qplot(Vep,scaledFR,data=ss)+facet_grid(neuron~Eye)
qplot(Hep,scaledFR,data=ss)+facet_grid(neuron~Eye)
qplot(Hep,scaledFR,data=ss)+facet_grid(neuron~Eye)+geom_boxplot()
qplot(factor(Hep),scaledFR,data=ss)+facet_grid(neuron~Eye)+geom_boxplot()
qplot(factor(Hep),scaledFR,data=ss)+facet_grid(neuron~Eye)
qplot(HepscaledFR,data=ss)+facet_grid(neuron~Eye)
qplot(Hep,scaledFR,data=ss)+facet_grid(neuron~Eye)
qplot(Hep,Vep,data=ss,geom="bin2d")
qplot(Hep,Vep,data=ss,geom="bin2d",fill=scaledFR)
qplot(Hep,Vep,data=ss,geom="bin2d")+scale_fill_gradient(low='black',high='orange',fill=scaledFR)
qplot(Hep,Vep,data=ss,geom="bin2d")+scale_fill_gradient(low='black',high='orange',fill=ss$scaledFR)
qplot(Hep,Vep,data=ss,geom="bin2d")+scale_fill_gradient(low='black',high='orange')
qplot(Hep,Vep,scaledFR,data=ss)
qplot(Hep,Vep,scaledFR,data=ss)+geom_tile()
qplot(Hep,Vep,scaledFR,z=ss)+geom_tile()
qplot(Hep,Vep,scaledFR,z=ss)+geom_histogram()
qplot(Hep,Vep,fill=scaledFR,data=ss)+geom_tile()
qplot(Hep,Vep,fill=scaledFR,data=ss)+geom_tile()+facet_grid(neuron~Eye)
library(ggplot2)
library(dplyr)
library(tidyr)
#load all the .csv files in the data folder, then add a column naming the neuron,
#using the file name as the default name, then put them all together in one long data frame
path<-"~/GitHub/NPH-Analysis/data/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i],sep=''))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
thresh=2 #points with velocity below threshold are considered fixation
#choose just the points of fixation, then bin the data into 1 degree bins (using round)
#and calculate the mean firing rate during all the times when the eye is at each position
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
mutate(R.Hep=round(rep),R.Vep=round(repV), L.Hep=round(lep),L.Vep=round(lepV)) %>%
group_by(R.Hep,R.Vep,L.Hep,L.Vep,neuron) %>%
summarize(fr=mean(sdf)) %>%
ungroup(.) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
s
levels(s$Eye)<-c("Right Eye","Left Eye") #Change R/L into Right Eye/Left Eye
#Just show cells I want
s <- filter(s,neuron %in% c("Bee6","BeeX1","BeeX2","BeeX3a","BeeX3b","BeeY1"))
#Create a scaled firing rate by simply dividing by the maximum firing rate in any bin
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
#plot
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
#Just show cells I want
s <- filter(s,neuron %in% c("BeeY1"))
#Create a scaled firing rate by simply dividing by the maximum firing rate in any bin
s %>%
group_by(neuron) %>%
mutate(maxFR=max(fr),scaledFR=fr/maxFR) ->
ss
#plot
qplot(Hep,Vep,data=ss,fill=scaledFR)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
qplot(Hep,Vep,data=ss,fill=fr)+geom_tile()+facet_grid(neuron~Eye)+
scale_fill_gradient(low='black',high='orange')
qplot(0,20)+coord_polar()
qplot(0,20)+coord_polar()+geom_line()
qplot(c(0,20))+coord_polar()+geom_line()
qplot(1,c(0,20))+coord_polar()+geom_line()
qplot(atan2(-1.4,0.2),c(0,20))+coord_polar()+geom_line()
qplot(c(0,20))+coord_polar()+geom_line()
qplot(1,c(0,20))+coord_polar()+geom_line()
qplot(45,1)+coord_polar()
qplot(45,1)+coord_polar()+expand_limits(x=c(-180,180))
qplot(45,1)+coord_polar()+expand_limits(x=c(0,360))
library(ggplot2)
library(dplyr)
library(tidyr)
#load all the .csv files in the data folder, then add a column naming the neuron,
#using the file name as the default name, then put them all together in one long data frame
path<-"~/GitHub/NPH-Analysis/data/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i],sep=''))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
s <- filter(t,neuron %in% c("BeeX1","BeeX2","BeeX3a","BeeX3b","BeeY1"))
static<- filter(s,abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh)
static<- filter(s,abs(rev)<1.5,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh)
thresh=1.5
static<- filter(s,abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh)
head(static)
library(ggplot2)
library(dplyr)
library(knitr)
library(tidyr)
path<-"~/GitHub/NPH-Analysis/data/"
files <- list.files(path=path,pattern='*.csv')
t<-data.frame()
for (i in 1:length(files)) {
temp <- read.csv(paste(path,files[i],sep=''))
temp$neuron<-gsub('.csv','',files[i])
t <-rbind(t,temp)
}
thresh=1.5
static<- filter(t,abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh)
qplot(Hep,sdf,data=static)+xlab('Horizontal Eye Position')+ylab('Firing Rate')
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
rename(R.Hep=rep,R.Vep=repV, L.Hep=lep,L.Vep=lepV,fr=sdf) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) %>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
static
head(static)
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
rename(R.Hep=rep,R.Vep=repV, L.Hep=lep,L.Vep=lepV,fr=sdf) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) ->
static
head(static)
head(t)
t %>%
select(c(1,2,4,6,8,10)) %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
rename(R.Hep=rep,R.Vep=repV, L.Hep=lep,L.Vep=lepV,fr=sdf) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) ->
static
t %>%
select(1,2,4,6,8,10) %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
rename(R.Hep=rep,R.Vep=repV, L.Hep=lep,L.Vep=lepV,fr=sdf) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) ->
static
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
select(1,2,4,6,8,10) %>%
rename(R.Hep=rep,R.Vep=repV, L.Hep=lep,L.Vep=lepV,fr=sdf) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr)) ->
static
head(static)
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
select(1,2,4,6,8,10) %>%
rename(R.Hep=rep,R.Vep=repV, L.Hep=lep,L.Vep=lepV,fr=sdf) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr))%>%
gather(temp,P,1:4) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
static
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
select(1,2,4,6,8,10) %>%
rename(R.Hep=rep,R.Vep=repV, L.Hep=lep,L.Vep=lepV,fr=sdf) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr))%>%
gather(temp,P,2:5) %>%
separate(temp,c("Eye","HV")) %>%
spread(HV,P) ->
static
head(static)
qplot(Hep,fr,data=static)
qplot(Hep,fr,data=static)+facet_grid(neuron~eye)
qplot(Hep,fr,data=static)+facet_grid(neuron~Eye)
static %>%
filter(Eye=="R") %>%
qplot(Hep,sdf,data=.)+facet_grid(neuron~.)+ggtitle('Right Eye')
static %>%
filter(Eye=="R") %>%
qplot(Hep,fr,data=.)+facet_grid(neuron~.)+ggtitle('Right Eye')
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
select(1,2,4,6,8,10) %>%
rename(R.Hep=rep,R.Vep=repV, L.Hep=lep,L.Vep=lepV,fr=sdf) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr))%>%
gather(temp,P,2:5) %>%
separate(temp,c("Eye","HV")) ->
static
head(static)
static %>%
filter(Eye=="R") %>%
qplot(Hep,fr,data=.)+facet_grid(neuron~HV)+
ggtitle('Right Eye')+
stat_smooth(method='lm')
static %>%
filter(Eye=="R") %>%
qplot(P,fr,data=.)+facet_grid(neuron~HV)+
ggtitle('Right Eye')+
stat_smooth(method='lm')
head(t)
levels(static)
head(static)
levels(HV)
levels(static$HV)
class(HV)
class(static$HV)
static$HV<-as.factor(static$HV)
levels(static$HV)
levels(static$HV)<-c("Horizontal Eye Position","Vertical Eye Position")
head(static)
static$HV<-as.factor(static$HV)
levels(static$HV)<-c("Horizontal Eye Position","Vertical Eye Position")
static %>%
filter(Eye=="R") %>%
qplot(P,fr,data=.)+facet_grid(neuron~HV)+
ggtitle('Right Eye')+
stat_smooth(method='lm')
t %>%
filter(abs(rev)<thresh,abs(revV)<thresh,abs(lev)<thresh,abs(levV)<thresh) %>%
select(1,2,4,6,8,10) %>%
rename(R.Hep=rep,R.Vep=repV, L.Hep=lep,L.Vep=lepV,fr=sdf) %>%
#use tidyr functions to make columns for eye (left or right), vertrical and horizontal eye position
mutate(time=row_number(fr))%>%
gather(temp,P,2:5) %>%
separate(temp,c("Eye","HV")) ->
static
static$plotHV<-as.factor(static$HV)
levels(static$plotHV)<-c("Horizontal Eye Position","Vertical Eye Position")
static %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron) %>%
summarize(m=summary(lm(fr~Hep+Vep))) ->
x
static %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron) ->
x
head(x)
head(static)
spread(static,HV,P)
head(static)
levels(static$HV)
levels(as.factor(static$HV))
sum(is.na(static$P))
head(x)
head(static)
x<-spread(static(HV,P))
x<-spread(static,HV,P)
head(x)
head(arrange(x,time))
static %>%
static %>%
select(plotHV) %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron) ->
x
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron) ->
x
head(x)
x %>%
do(m=summary(lm(fr~Hep+Vep),data=.)$coefficients[1]) ->
xx
x %>%
do(m=summary(lm(fr~Hep+Vep,data=.)$coefficients[1]) ->
xx
head(xx)
x %>%
do(m=summary(lm(fr~Hep+Vep),data=.)$coefficients[1]) ->
xx
x %>%
do(m=summary(lm(fr~Hep+Vep,data=.))$coefficients[1]) ->
xx
head(x)
head(xx)
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="R",neuron=Bee10) %>%
group_by(neuron) ->
x
x %>%
do(m=summary(lm(fr~Hep+Vep,data=.))$coefficients) ->
xx
head(xx)
xx$m[1]
xx$m[1][1]
xx$m[1][[1]]
xx$m[[1]][1]
xx$m[[1]][2]
xx$m[[1]][3]
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron) ->
x
x %>%
do(h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) ->
xx
head(xx)
xx$h.slope[1]
xx$h.slope[2]
xx$h.slope[3]
mutate(xx,angle=atan2(h.slope,v.slope))
mutate(xx,angle=atan2(h.slope,v.slope)*pi/180)
mutate(xx,angle=atan2(h.slope,v.slope)*180/pi)
mutate(xx,angle=atan2(v.slope,h.slope)*180/pi)
x %>%
do(h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(angle=atan2(v.slope,h.slope)*180*pi)%>%
kable(.)
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron) ->
x
x %>%
do(h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(angle=atan2(v.slope,h.slope)*180*pi)%>%
kable(.)
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron)
do(h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(angle=atan2(v.slope,h.slope)*180/pi)%>%
kable(.)
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron) %>%
do(h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(angle=atan2(v.slope,h.slope)*180/pi)%>%
kable(.)
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron) %>%
do(r.h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],r.v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(r.angle=atan2(v.slope,h.slope)*180/pi)->
r
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="L") %>%
group_by(neuron) %>%
do(l.h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],l.v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(l.angle=atan2(v.slope,h.slope)*180/pi)->
l
rl<-left_join(r,l,key=neuron)
rl<-left_join(r,l,by="neuron")
head(r)
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron) %>%
do(r.h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],r.v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(r.angle=atan2(r.v.slope,r.h.slope)*180/pi)->
r
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="L") %>%
group_by(neuron) %>%
do(l.h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],l.v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(l.angle=atan2(l.v.slope,l.h.slope)*180/pi)->
l
rl<-left_join(r,l,by="neuron"")
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron) %>%
do(r.h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],r.v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(r.angle=atan2(r.v.slope,r.h.slope)*180/pi)->
r
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="L") %>%
group_by(neuron) %>%
do(l.h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],l.v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(l.angle=atan2(l.v.slope,l.h.slope)*180/pi)->
l
rl<-left_join(r,l,by="neuron)
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron) %>%
do(r.h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],r.v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(r.angle=atan2(r.v.slope,r.h.slope)*180/pi)->
r
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="L") %>%
group_by(neuron) %>%
do(l.h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],l.v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(l.angle=atan2(l.v.slope,l.h.slope)*180/pi)->
l
rl<-left_join(r,l,by="neuron")
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="R") %>%
group_by(neuron) %>%
do(r.h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],r.v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(r.angle=atan2(r.v.slope,r.h.slope)*180/pi)->
r
static %>%
select(-plotHV) %>%
spread(HV,P) %>%
filter(Eye =="L") %>%
group_by(neuron) %>%
do(l.h.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[2],l.v.slope=summary(lm(fr~Hep+Vep,data=.))$coefficients[3]) %>%
mutate(l.angle=atan2(l.v.slope,l.h.slope)*180/pi)->
l
head(r)
head(l)
rl<-left_join(r,l,by="neuron")
head(rl)
kable(rl)
rl<-rl[c(1,2,3,5,6,4,7)]
kable(rl)
